{"version":3,"sources":["components/Intro.tsx","components/Homepage.tsx","components/Phase.tsx","components/StatsTable.tsx","components/AbilityList.tsx","components/SpecialistIcon.tsx","components/CategoryIcon.tsx","components/ModelTitle.tsx","components/NoPhaseDetails.tsx","components/StatBadge.tsx","components/MovementPhaseDetails.tsx","components/ScoutingPhaseDetails.tsx","components/DeploymentPhaseDetails.tsx","components/InitiativePhaseDetails.tsx","components/PsychicPowerList.tsx","components/PsychicPhaseDetails.tsx","components/WeaponList.tsx","components/ShootingPhaseDetails.tsx","components/FightPhaseDetails.tsx","components/MoralePhaseDetails.tsx","components/CloseButton.tsx","components/Roster.tsx","BattlescribeParser.js","FileLoader.js","App.jsx","serviceWorker.js","index.tsx"],"names":["Intro","Jumbotron","className","Homepage","props","Row","Col","Card","Header","as","Body","style","minHeight","Text","href","onDrop","onUpload","accept","getRootProps","getInputProps","Alert","variant","textAlign","Phase","pageBreakAfter","background","color","padding","width","textTransform","display","name","flexGrow","note","children","StatsTable","Table","striped","bordered","size","movement","weapon_skill","isNaN","ballistic_skill","strength","toughness","wounds","attacks","additional_attacks","leadership","save","invulnerable_save","_","require","AbilityList","abilities","phase","filter","x","phases","indexOf","length","sortBy","map","description","SpecialistIcon","specialism","height","marginRight","alt","src","toLowerCase","CategoryIcon","category","ModelTitle","titleComponents","without","model","type","justifyContent","count","join","slice","showPoints","points","NoPhaseDetails","stats","sm","Badge","pill","faction","keywords","keyword","StatBadge","paddingTop","border","flexDirection","borderRadius","fontSize","lineHeight","fontWeight","value","secondaryValue","MovementPhaseDetails","ScoutingPhaseDetails","hasScoutingPhase","DeploymentPhaseDetails","hasDeploymentPhase","InitiativePhaseDetails","hasInitiativePhase","PsychicPowerList","powers","charge","PsychicPhaseDetails","psychicPowers","hasPsychicPhase","WeaponList","weapons","range","shots","armourPiercing","damage","ShootingPhaseDetails","hasRangedWeapons","userStrength","FightPhaseDetails","MoralePhaseDetails","CloseButton","Button","onClick","onClose","Roster","sortedModels","models","some","DOMParser","xpath","useNamespaces","roster","hash","stat","nodes","parseInt","childNodes","nodeValue","weaponStat","weapon","numeric","costNode","sumBy","getAttribute","calculatePhases","minDesc","replace","forIn","scouting","deployment","initiative","psychic","shooting","fight","morale","patterns","re","test","push","includes","remove","p","parseForceRule","rule","parseAbility","ability","parseWargear","wargear","parsePsychicPower","power","warpChargeDescription","match","parseAdditionalAttacks","antiPatterns","sum","pattern","invulnerableSave","saves","a","min","parseModel","forceRules","specialismSelection","concat","closeCombatWeapon","exec","weaponType","split","parseWeapon","descriptions","w","d","additionalAttacks","details","parseBattlescribeXML","xml","doc","parseFromString","categoryId","uniqueModels","groupBy","m","JSZip","parseFile","file","Promise","resolve","loadAsync","then","zip","async","unzip","loadFile","reader","FileReader","reject","onerror","abort","DOMException","onloadend","result","readAsBinaryString","App","initialState","state","handleUpload","acceptedFiles","files","setState","handleClose","Container","fluid","this","React","Component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"qcAqBeA,MAlBf,WACE,OAAO,kBAACC,EAAA,EAAD,KACL,0CAGA,uBAAGC,UAAU,QAAb,0DAGA,4BACE,uEACA,sEACA,mEACA,4DACA,+E,oCCkDSC,MAzDf,SAAkBC,GAChB,OAAO,oCACL,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,CAAaC,GAAG,MAAhB,UACA,kBAACF,EAAA,EAAKG,KAAN,CAAWC,MAAO,CAACC,UAAW,SAC5B,kBAACL,EAAA,EAAKM,KAAN,2BACsB,IACpB,uBAAGC,KAAK,6BAAR,gBAFF,KAIA,kBAACP,EAAA,EAAKM,KAAN,2DAMN,kBAACP,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,CAAaC,GAAG,MAAhB,UACA,kBAACF,EAAA,EAAKG,KAAN,CAAWC,MAAO,CAACC,UAAW,SAC5B,kBAAC,IAAD,CAAUG,OAAQX,EAAMY,SAAUC,OAAO,eACtC,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,kBAACC,EAAA,EAAD,eAAOC,QAAQ,WAAcH,IAA7B,CAA6CP,MAAO,CAAEW,UAAW,YAC/D,0BAAWH,KACX,kFACA,2BAAG,mEAOf,kBAACb,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,CAAaC,GAAG,MAAhB,UACA,kBAACF,EAAA,EAAKG,KAAN,CAAWC,MAAO,CAACC,UAAW,SAC5B,kBAACL,EAAA,EAAKM,KAAN,sEAGA,kBAACN,EAAA,EAAKM,KAAN,2CAOR,8CACa,uBAAGC,KAAK,wBAAR,SADb,QAC0D,uBAAGA,KAAK,4BAAR,aAD1D,uBAEoB,uBAAGA,KAAK,yBAAR,2BAFpB,iBAGc,uBAAGA,KAAK,wCAAR,eAHd,qBAIkB,uBAAGA,KAAK,mDAAR,aAJlB,OCvBWS,MAzBf,SAAenB,GACb,OAAO,yBAAKO,MAAO,CACjBa,eAAgB,WAEhB,wBAAIb,MAAO,CACTc,WAAY,QACZC,MAAO,QACPC,QAAS,OACTC,MAAO,OACPC,cAAe,aACfC,QAAS,SAET,kBAACxB,EAAA,EAAD,KACGF,EAAM2B,KADT,UAGA,kBAACzB,EAAA,EAAD,CAAKK,MAAO,CAACqB,SAAU,EAAGV,UAAW,UAClClB,EAAM6B,MACL,+BAAQ7B,EAAM6B,QAInB7B,EAAM8B,W,SCuBIC,MApCf,SAAqB/B,GACnB,OACE,kBAACgC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,KAAK,MAC3B,+BACE,4BACE,iCACA,kCACA,kCACA,iCACA,iCACA,iCACA,iCACA,kCACA,oCAGJ,+BACE,4BACE,4BAAKnC,EAAMoC,SAAX,KACA,4BAAKpC,EAAMqC,aAAX,KACA,4BAAKC,MAAMtC,EAAMuC,iBAAmB,IAAMvC,EAAMuC,gBAAgB,KAChE,4BAAKvC,EAAMwC,UACX,4BAAKxC,EAAMyC,WACX,4BAAKzC,EAAM0C,QACX,4BAAK1C,EAAM2C,QACT3C,EAAM4C,mBAAqB,gCAAS,KAAM5C,EAAM4C,oBAA+B,MAEjF,4BAAK5C,EAAM6C,YACX,4BAAK7C,EAAM8C,KAAX,IACE9C,EAAM+C,kBAAoB,oCAAG,MAAM,gCAAS/C,EAAM+C,kBAAf,OAAkD,UC1C3FC,EAAIC,EAAQ,IAgCHC,MAzBf,SAAqBlD,GACnB,IAAMmD,EAAYnD,EAAMoD,MACtBpD,EAAMmD,UAAUE,QAAO,SAACC,GAAD,OAAQA,EAAEC,OAAOC,QAAQxD,EAAMoD,QAAU,KAChEpD,EAAMmD,UAAUE,QAAO,SAACC,GAAD,OAA4B,IAApBA,EAAEC,OAAOE,UAE1C,OAA4B,IAArBN,EAAUM,OAAe,qCAC9B,kBAACzB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,KAAK,MAC3B,+BACE,4BACE,uCACA,6CAGJ,+BACGa,EAAEU,OAAOP,EAAW,CAAC,SAASQ,KAAI,SAACL,GAAD,OACjC,4BACE,4BAAKA,EAAE3B,MACP,4BAAK2B,EAAEM,oB,SCtBZ,SAASC,EAAe7D,GAC7B,OAAQA,EAAM8D,WACV,yBAAKhE,UAAU,aAAaS,MAAO,CAACwD,OAAQ,MAAOC,YAAa,QAASC,IAAKjE,EAAM8D,WAAYI,IAAG,4BAAuBlE,EAAM8D,WAAWK,cAAxC,UACnG,qCCHC,SAASC,EAAapE,GAC3B,OAAQA,EAAMqE,UAA6C,eAAjCrE,EAAMqE,SAASF,eAAmE,wBAAjCnE,EAAMqE,SAASF,cACtF,yBAAKrE,UAAU,WAAWS,MAAO,CAACwD,OAAQ,MAAOC,YAAa,QAASC,IAAKjE,EAAMqE,SAAUH,IAAG,4BAAuBlE,EAAMqE,SAASF,cAAtC,UAC/F,qCCFN,IAAMnB,EAAIC,EAAQ,IAOX,SAASqB,EAAWtE,GACzB,IAQMuE,EAAkBvB,EAAEwB,QAAQ,CAChCxE,EAAMyE,MAAM9C,KACZ3B,EAAMyE,MAAMC,KACc,eAAzB1E,EAAMyE,MAAMJ,UAAsD,wBAAzBrE,EAAMyE,MAAMJ,SAClDrE,EAAMyE,MAAMX,WACZ9D,EAAMyE,MAAMJ,UAChB,KAAM,IACR,OACE,wBAAI9D,MAhBe,CACnBc,WAAY,YACZC,MAAO,QACPC,QAAS,MACTG,QAAS,OACTF,MAAO,OACPmD,eAAgB,kBAWd,kBAACzE,EAAA,EAAD,MAC6B,eAAzBF,EAAMyE,MAAMJ,UAAsD,wBAAzBrE,EAAMyE,MAAMJ,WAAuC,kBAACR,EAAD,CAAgBC,WAAY9D,EAAMyE,MAAMX,aACrI9D,EAAMyE,MAAMJ,UAAY,kBAACD,EAAD,CAAcC,SAAUrE,EAAMyE,MAAMJ,WAC7D,gCAASE,EAAgB,GAAzB,KACCvE,EAAMyE,MAAMG,MAAQ,GACnB,mCAAS5E,EAAMyE,MAAMG,OAEvB,+BAAQ5B,EAAE6B,KAAK7B,EAAE8B,MAAMP,EAAgB,GAAI,QAE5CvE,EAAM+E,YACL,kBAAC7E,EAAA,EAAD,CAAKK,MAAO,CAACqB,SAAU,EAAGV,UAAW,UACnC,+BAAQlB,EAAMyE,MAAMO,OAApB,SC/BH,SAASC,EAAejF,GAC7B,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACoE,EAAD,CAAYG,MAAOzE,EAAMyE,MAAOM,YAAY,IAClB,cAAzB/E,EAAMyE,MAAMJ,UAA4B,sDAA2B,gCAASrE,EAAMyE,MAAMX,aACzF,kBAAC,EAAe9D,EAAMyE,MAAMS,OAC5B,kBAAC,EAAD,CAAa/B,UAAWnD,EAAMyE,MAAMtB,UAAWC,MAAM,MAEvD,kBAAClD,EAAA,EAAD,CAAKiF,GAAG,QACN,6BACE,kBAACC,EAAA,EAAD,CAAOC,MAAI,EAACpE,QAAQ,UAAUnB,UAAU,OAAOS,MAAO,CACpDkB,cAAe,YACfuC,YAAa,OACbtC,QAAS,UAER1B,EAAMyE,MAAMa,SAEdtF,EAAMyE,MAAMc,SAAS5B,KAAI,SAAC6B,GAAD,OACxB,kBAACJ,EAAA,EAAD,CAAOC,MAAI,EAACpE,QAAQ,YAAYnB,UAAU,OAAOS,MAAO,CACtDkB,cAAe,YACfuC,YAAa,OACbtC,QAAS,UAER8D,SCSAC,MApCf,SAAoBzF,GAsBlB,OACE,yBAAKF,UAAU,iBAAiBS,MAtBC,CACjCmF,WAAY,OACZC,OAAQ,kBACRnE,MAAO,MACPuC,OAAQ,MACR1C,WAAY,QACZC,MAAO,QACPI,QAAS,OACTkE,cAAe,SACf1E,UAAW,SACX2E,aAAc,QAaZ,yBAAK/F,UAAU,OAAOS,MAXQ,CAChCuF,SAAU,MACVC,WAAY,QAS+B/F,EAAM2B,MAC/C,yBAAK7B,UAAU,QAAQS,MARQ,CACjCuF,SAAU,MACVC,WAAY,MACZC,WAAY,SAMNhG,EAAMiG,MACNjG,EAAMkG,eACJ,+BAAQlG,EAAMkG,gBACd,wCC1BL,SAASC,EAAqBnG,GACnC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACoE,EAAD,CAAYG,MAAOzE,EAAMyE,QACzB,kBAAC,EAAD,CAAatB,UAAWnD,EAAMyE,MAAMtB,UAAWC,MAAM,cAEvD,kBAAClD,EAAA,EAAD,CAAKiF,GAAG,QACN,kBAAC,EAAD,CAAWxD,KAAK,IAAIsE,MAAK,UAAKjG,EAAMyE,MAAMS,MAAM9C,cCVjD,SAASgE,EAAqBpG,GACnC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACoE,EAAD,CAAYG,MAAOzE,EAAMyE,QACzB,kBAAC,EAAD,CAAatB,UAAWnD,EAAMyE,MAAMtB,UAAWC,MAAM,eAMtD,SAASiD,EAAiB5B,GAC/B,OAASA,EAAMtB,UAAUE,QAAO,SAACC,GAAD,OAAQA,EAAEC,OAAOC,QAAQ,aAAe,KAAKC,OAAS,ECZjF,SAAS6C,EAAuBtG,GACrC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACoE,EAAD,CAAYG,MAAOzE,EAAMyE,QACzB,kBAAC,EAAD,CAAatB,UAAWnD,EAAMyE,MAAMtB,UAAWC,MAAM,iBAMtD,SAASmD,EAAmB9B,GACjC,OAASA,EAAMtB,UAAUE,QAAO,SAACC,GAAD,OAAQA,EAAEC,OAAOC,QAAQ,eAAiB,KAAKC,OAAS,ECZnF,SAAS+C,EAAuBxG,GACrC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACoE,EAAD,CAAYG,MAAOzE,EAAMyE,QACzB,kBAAC,EAAD,CAAatB,UAAWnD,EAAMyE,MAAMtB,UAAWC,MAAM,iBAMtD,SAASqD,EAAmBhC,GACjC,OAASA,EAAMtB,UAAUE,QAAO,SAACC,GAAD,OAAQA,EAAEC,OAAOC,QAAQ,eAAiB,KAAKC,OAAS,EClB1F,IAAMT,EAAIC,EAAQ,IA6BHyD,MAvBf,SAA0B1G,GACxB,OAA+B,IAAxBA,EAAM2G,OAAOlD,OAAe,qCACjC,kBAACzB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,KAAK,MAC3B,+BACE,4BACE,qCACA,2CACA,6CAGJ,+BACGa,EAAEU,OAAO1D,EAAM2G,OAAQ,CAAC,SAAShD,KAAI,SAACL,GAAD,OACpC,4BACE,4BAAKA,EAAE3B,MACP,4BAAK2B,EAAEsD,QACP,4BAAKtD,EAAEM,oBCdZ,SAASiD,EAAoB7G,GAClC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACoE,EAAD,CAAYG,MAAOzE,EAAMyE,QACzB,kBAAC,EAAD,CAAkBkC,OAAQ3G,EAAMyE,MAAMqC,gBACtC,kBAAC,EAAD,CAAa3D,UAAWnD,EAAMyE,MAAMtB,UAAWC,MAAM,cAMtD,SAAS2D,EAAgBtC,GAC9B,OAAQA,EAAMqC,cAAcrD,OAAS,GAAMgB,EAAMtB,UAAUE,QAAO,SAACC,GAAD,OAAQA,EAAEC,OAAOC,QAAQ,YAAc,KAAKC,OAAS,ECpBzH,IAAMT,EAAIC,EAAQ,IA6CH+D,MArCf,SAAoBhH,GAClB,IAAMiH,EAA0B,aAAhBjH,EAAMoD,MAClBpD,EAAMiH,QAAQ5D,QAAO,SAACC,GAAD,MAAmB,UAAXA,EAAEoB,QAC/B1E,EAAMiH,QAAQ5D,QAAO,SAACC,GAAD,MAAmB,UAAXA,EAAEoB,QAEnC,OAA0B,IAAnBuC,EAAQxD,OAAe,qCAC5B,kBAACzB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,KAAK,MAC3B,+BACE,4BACE,sCACiB,aAAhBnC,EAAMoD,OAAwB,qCACd,aAAhBpD,EAAMoD,OAAwB,oCACd,aAAhBpD,EAAMoD,OAAwB,qCAC/B,iCACA,kCACA,iCACA,2CAGJ,+BACGJ,EAAEU,OAAOuD,EAAS,CAAC,SAAStD,KAAI,SAACL,GAAD,OAC/B,4BACE,wBAAI/C,MAAO,CAAC,WAAc,WAAY+C,EAAE3B,MACvB,aAAhB3B,EAAMoD,OAAwB,4BAAKE,EAAE4D,MAAP,KACd,aAAhBlH,EAAMoD,OAAwB,wBAAI7C,MAAO,CAAC,WAAc,WAAY+C,EAAEoB,MACtD,aAAhB1E,EAAMoD,OAAwB,wBAAI7C,MAAO,CAAC,WAAc,WAAY+C,EAAE6D,OACvE,4BAAK7D,EAAEd,UACP,4BAAKc,EAAE8D,gBACP,4BAAK9D,EAAE+D,QACP,4BAAK/D,EAAEH,kBC5BZ,SAASmE,EAAqBtH,GACnC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACoE,EAAD,CAAYG,MAAOzE,EAAMyE,QACxB8C,EAAiBvH,EAAMyE,QAAU,kBAAC,EAAD,CAAYwC,QAASjH,EAAMyE,MAAMwC,QAAS7D,MAAM,WAAWoE,aAAcxH,EAAMyE,MAAMS,MAAM1C,WAC7H,kBAAC,EAAD,CAAaW,UAAWnD,EAAMyE,MAAMtB,UAAWC,MAAM,cAEvD,kBAAClD,EAAA,EAAD,CAAKiF,GAAG,QACLoC,EAAiBvH,EAAMyE,QAAU,kBAAC,EAAD,CAAW9C,KAAK,KAAKsE,MAAK,UAAKjG,EAAMyE,MAAMS,MAAM3C,iBAAmB2D,eAAe,MACrH,kBAAC,EAAD,CAAWvE,KAAK,IAAIsE,MAAK,UAAKjG,EAAMyE,MAAMS,MAAMzC,cAElD,kBAACvC,EAAA,EAAD,CAAKiF,GAAG,QACN,kBAAC,EAAD,CAAWxD,KAAK,KAAKsE,MAAK,UAAKjG,EAAMyE,MAAMS,MAAMpC,MAAQoD,eAAe,MACtElG,EAAMyE,MAAMS,MAAMnC,kBAChB,kBAAC,EAAD,CAAWpB,KAAK,MAAMsE,MAAK,UAAKjG,EAAMyE,MAAMS,MAAMnC,mBAAqBmD,eAAe,MACtF,uCAOL,SAASqB,EAAiB9C,GAC/B,OAAQnC,MAAMmC,EAAMS,MAAM3C,kBAAqBkC,EAAMwC,QAAQ5D,QAAO,SAACC,GAAD,MAAmB,UAAXA,EAAEoB,QAAmBjB,OAAS,ECxBrG,SAASgE,EAAkBzH,GAChC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACoE,EAAD,CAAYG,MAAOzE,EAAMyE,QACzB,kBAAC,EAAD,CAAYwC,QAASjH,EAAMyE,MAAMwC,QAAS7D,MAAM,QAAQoE,aAAcxH,EAAMyE,MAAMS,MAAM1C,WACxF,kBAAC,EAAD,CAAaW,UAAWnD,EAAMyE,MAAMtB,UAAWC,MAAM,WAEvD,kBAAClD,EAAA,EAAD,CAAKiF,GAAG,QACN,kBAAC,EAAD,CAAWxD,KAAK,IAAIsE,MAAK,UAAKjG,EAAMyE,MAAMS,MAAMvC,SAAWuD,eAAiBlG,EAAMyE,MAAMS,MAAMtC,mBAAlB,WAA2C5C,EAAMyE,MAAMS,MAAMtC,oBAAuB,OAChK,kBAAC,EAAD,CAAWjB,KAAK,IAAIsE,MAAK,UAAKjG,EAAMyE,MAAMS,MAAMzC,cAElD,kBAACvC,EAAA,EAAD,CAAKiF,GAAG,QACN,kBAAC,EAAD,CAAWxD,KAAK,KAAKsE,MAAK,UAAKjG,EAAMyE,MAAMS,MAAM7C,cAAgB6D,eAAe,MAChF,kBAAC,EAAD,CAAWvE,KAAK,KAAKsE,MAAK,UAAKjG,EAAMyE,MAAMS,MAAMpC,MAAQoD,eAAe,MACtElG,EAAMyE,MAAMS,MAAMnC,kBAChB,kBAAC,EAAD,CAAWpB,KAAK,MAAMsE,MAAK,UAAKjG,EAAMyE,MAAMS,MAAMnC,mBAAqBmD,eAAe,MACtF,uCClBL,SAASwB,EAAmB1H,GACjC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACoE,EAAD,CAAYG,MAAOzE,EAAMyE,QACzB,kBAAC,EAAD,CAAatB,UAAWnD,EAAMyE,MAAMtB,UAAWC,MAAM,YAEvD,kBAAClD,EAAA,EAAD,CAAKiF,GAAG,QACN,kBAAC,EAAD,CAAWxD,KAAK,KAAKsE,MAAK,UAAKjG,EAAMyE,MAAMS,MAAMrC,gB,aCblD,SAAS8E,EAAY3H,GAC1B,OAAQ,kBAAC4H,EAAA,EAAD,CAAQ3G,QAAQ,UAAUnB,UAAU,eAAe+H,QAAS7H,EAAM8H,SAAlE,SCOV,IAAM9E,EAAIC,EAAQ,IA2FH8E,MAlFf,SAAgB/H,GAEd,IAAMgI,EAAehF,EAAEU,OAAO1D,EAAMiI,QAAQ,SAAC3E,GAAD,MAAe,CAAe,MAAdA,EAAEe,SAAkBf,EAAEe,SAAUf,EAAEoB,SAC9F,OAAO,oCACL,wBAAInE,MAAO,CACTc,WAAY,QACZC,MAAO,QACPC,QAAS,OACTC,MAAO,OACPC,cAAe,aACfC,QAAS,SAET,kBAACxB,EAAA,EAAD,KACGF,EAAM2B,MAET,kBAACzB,EAAA,EAAD,CAAKK,MAAO,CAACqB,SAAU,EAAGV,UAAW,UACnC,+BAAQlB,EAAMgF,OAAd,QAEF,kBAAC9E,EAAA,EAAD,CAAKK,MAAO,CAACqB,SAAU,EAAGV,UAAW,UACnC,kBAACyG,EAAD,CAAaG,QAAS9H,EAAM8H,YAGhC,oCACGE,EAAarE,KAAI,SAACc,GAAD,OAChB,kBAACQ,EAAD,CAAgBR,MAAOA,QAG1BzB,EAAEkF,KAAKF,EAAc3B,IACpB,kBAAC,EAAD,CAAO1E,KAAK,YACTqG,EAAarE,KAAI,SAACc,GAAD,OAChB4B,EAAiB5B,IACjB,kBAAC2B,EAAD,CAAsB3B,MAAOA,QAIlCzB,EAAEkF,KAAKF,EAAczB,IACpB,kBAAC,EAAD,CAAO5E,KAAK,cACTqG,EAAarE,KAAI,SAACc,GAAD,OAChB8B,EAAmB9B,IACnB,kBAAC6B,EAAD,CAAwB7B,MAAOA,QAIpCzB,EAAEkF,KAAKF,EAAcvB,IACpB,kBAAC,EAAD,CAAO9E,KAAK,cACTqG,EAAarE,KAAI,SAACc,GAAD,OAChBgC,EAAmBhC,IACnB,kBAAC+B,EAAD,CAAwB/B,MAAOA,QAIrC,kBAAC,EAAD,CAAO9C,KAAK,YACTqG,EAAarE,KAAI,SAACc,GAAD,OAChB,kBAAC0B,EAAD,CAAsB1B,MAAOA,QAGhCzB,EAAEkF,KAAKF,EAAcjB,IACpB,kBAAC,EAAD,CAAOpF,KAAK,WACTqG,EAAarE,KAAI,SAACc,GAAD,OAChBsC,EAAgBtC,IAChB,kBAACoC,EAAD,CAAqBpC,MAAOA,QAIlC,kBAAC,EAAD,CAAO9C,KAAK,YACTqG,EAAarE,KAAI,SAACc,GAAD,OAChB,kBAAC6C,EAAD,CAAsB7C,MAAOA,QAGjC,kBAAC,EAAD,CAAO9C,KAAK,SACTqG,EAAarE,KAAI,SAACc,GAAD,OAChB,kBAACgD,EAAD,CAAmBhD,MAAOA,QAG9B,kBAAC,EAAD,CAAO9C,KAAK,UACTqG,EAAarE,KAAI,SAACc,GAAD,OAChB,kBAACiD,EAAD,CAAoBjD,MAAOA,U,sDCpG7B0D,GAAYlF,EAAQ,KAAUkF,UAC9BC,GAAQnF,EAAQ,KAAYoF,cAAc,CAAEC,OAAQ,oDAEpDtF,GAAIC,EAAQ,IACZsF,GAAOtF,EAAQ,IAARA,CAA4B,IAEnCuF,GAAO,SAAC7G,EAAM8C,GAClB,IAAMgE,EAAQL,GAAM,mFAAD,OAAoFzG,EAApF,MAA8F8C,GACjH,OAAIgE,EAAMhF,OAAS,EACViF,SAASD,EAAM,GAAGE,WAAW,GAAGC,WACzB,IAGZC,GAAa,SAAClH,EAAMmH,EAAQC,GAChC,IAAMN,EAAQL,GAAM,uDAAD,OAAwDzG,EAAxD,MAAkEmH,GACrF,OAAIL,EAAMhF,OAAS,EACVsF,EAAUL,SAASD,EAAM,GAAGE,WAAW,GAAGC,WAAaH,EAAM,GAAGE,WAAW,GAAGC,UACvE,IAGZ5D,GAAS,SAACP,GACd,IAAMuE,EAAWZ,GAAM,2CAA8C3D,GACrE,OAAOzB,GAAEiG,MAAMD,GAAU,SAAC1F,GAAD,OAAOoF,SAASpF,EAAE4F,aAAa,cAG7CC,GAAkB,SAACvF,GAC9B,IAAMwF,EAAU,IAAMxF,EAAYO,cAAckF,QAAQ,QAAS,IAAM,IACjE9F,EAAS,GA2Ff,GANAP,GAAEsG,MApFoB,CACpBC,SAAU,CACR,cAEFC,WAAY,CACV,kCACA,WACA,iBAEFC,WAAY,CACV,+BACA,oCAEFrH,SAAU,CACR,mBACA,YACA,gBACA,cACA,aACA,gBACA,YACA,cACA,cACA,QACA,iCACA,mBACA,oBACA,kBAEFsH,QAAS,CACP,YACA,mBACA,uBACA,cAEFC,SAAU,CACR,mBACA,WACA,oBACA,WACA,yBACA,eACA,eACA,gBACA,cACA,YACA,aACA,cACA,WACA,aACA,eACA,qBACA,sBACA,wBACA,wBACA,cACA,kBACA,WACA,kBACA,gCAEFC,MAAO,CACL,gBACA,YACA,iBACA,6BACA,8BACA,cACA,kBACA,UACA,iBACA,+BACA,wBACA,sBACA,kBACA,wBACA,iFACA,gCAEFC,OAAQ,CACN,UACA,kBAGmB,SAACC,EAAU1G,GAC5BJ,GAAEkF,KAAK4B,GAAU,SAACC,GAAD,OAASA,EAAGC,KAAKZ,OACpC7F,EAAO0G,KAAK7G,OAIXG,EAAO2G,SAAS,WAAa3G,EAAO2G,SAAS,YAAa,CAiBzDlH,GAAEkF,KAhBkB,CACtB,WACA,eACA,mBACA,WACA,mBACA,kBACA,iBACA,mBACA,sBACA,sCACA,6BACA,4BACA,wBACA,iBAE0B,SAAC6B,GAAD,OAASA,EAAGC,KAAKZ,OAC3C7F,EAAO0G,KAAK,QAAS,YAoDzB,OANAjH,GAAEsG,MA1CmB,CACnBE,WAAY,CACV,kBAEFpH,SAAU,CACR,4BACA,6BACA,8BACA,oCACA,4CACA,yCACA,+CACA,uBACA,qCACA,YACA,uBACA,4CACA,uBAEFsH,QAAS,CACP,2DAEFC,SAAU,CACR,yCACA,iEACA,sCACA,6BAEFC,MAAO,CACL,kCACA,8CACA,YACA,0CACA,sBACA,6BAE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","file":"static/js/main.f0f1147f.chunk.js","sourcesContent":["import React from 'react';\nimport { Jumbotron } from 'react-bootstrap'\n\nfunction Intro() {\n  return <Jumbotron>\n    <h1>\n      Scriptorum\n    </h1>\n    <p className='lead'>\n      Easy-to-use datasheets for Warhammer 40,000: Kill Team\n    </p>\n    <ul>\n      <li>All the info you need, when you need it</li>\n      <li>Stats and abilities organised by phase</li>\n      <li>No wasted space for identical mdels</li>\n      <li>Designed for print or screen</li>\n      <li>Clear, uncluttered layout for easy reference</li>\n    </ul>\n  </Jumbotron>\n}\n\nexport default Intro;\n","import React from 'react';\nimport Dropzone from 'react-dropzone'\nimport Intro from './Intro'\nimport { Row, Col, Alert, Card } from 'react-bootstrap'\n\ntype Props = {\n  onUpload: any,\n}\n\nfunction Homepage(props: Props) {\n  return <>\n    <Intro />\n    <Row>\n      <Col>\n        <Card>\n          <Card.Header as=\"h3\">Step 1</Card.Header>\n          <Card.Body style={{minHeight: '12em'}}>\n            <Card.Text>\n              Build your force in{' '}\n              <a href='https://battlescribe.net/'>Battlescribe</a>.\n            </Card.Text>\n            <Card.Text>\n              Currently only Kill Team rosters are supported.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col>\n        <Card>\n          <Card.Header as=\"h3\">Step 2</Card.Header>\n          <Card.Body style={{minHeight: '12em'}}>\n            <Dropzone onDrop={props.onUpload} accept='.ros,.rosz'>\n              {({ getRootProps, getInputProps }) => (\n                <Alert variant='primary' {...getRootProps()} style={{ textAlign: 'center' }}>\n                  <input {...getInputProps()} />\n                  <p>Drop your roster file here, or click to select one.</p>\n                  <p><em>(*.rosz and *.ros accepted)</em></p>\n                </Alert>\n              )}\n            </Dropzone>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col>\n        <Card>\n          <Card.Header as=\"h3\">Step 3</Card.Header>\n          <Card.Body style={{minHeight: '12em'}}>\n            <Card.Text>\n              Print your datasheets out, and never forget an ability again!\n            </Card.Text>\n            <Card.Text>\n              Prepare to dominate your foes!\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    <footer>\n      Built with <a href='https://reactjs.org/'>React</a> and <a href='https://getbootstrap.com'>Bootstrap</a>.\n      Icons courtesy of <a href='https://killteam.app/'>Companion for Kill Team</a>.\n      Released as <a href='https://github.com/floppy/scriptorum'>Open Source</a>,\n      report problems <a href='https://github.com/floppy/scriptorum/issues/new'>on GitHub</a>.\n    </footer>\n  </>\n}\n\nexport default Homepage;\n","import React from 'react';\nimport { Col } from 'react-bootstrap'\n\ntype Props = {\n  name: string,\n  note?: string,\n  children: React.ReactNode,\n};\n\nfunction Phase(props: Props) {\n  return <div style={{\n    pageBreakAfter: 'always',\n  }}>\n    <h1 style={{\n      background: 'black',\n      color: 'white',\n      padding: '10px',\n      width: '100%',\n      textTransform: 'capitalize',\n      display: 'flex',\n    }}>\n      <Col>\n        {props.name} Phase\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        {props.note && (\n          <small>{props.note}</small>\n        )}\n      </Col>\n    </h1>\n    {props.children}\n  </div>\n}\n\nexport default Phase;\n","import React from 'react'\nimport { Table } from 'react-bootstrap'\n\ntype Props = {\n  movement: number,\n  weapon_skill: number,\n  ballistic_skill: number,\n  strength: number,\n  toughness: number,\n  wounds: number,\n  attacks: number,\n  additional_attacks: number,\n  leadership: number,\n  save: number,\n  invulnerable_save: number,\n}\n\nfunction StatsTable (props: Props) {\n  return (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>M</th>\n          <th>WS</th>\n          <th>BS</th>\n          <th>S</th>\n          <th>T</th>\n          <th>W</th>\n          <th>A</th>\n          <th>Ld</th>\n          <th>Sv</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{props.movement}&quot;</td>\n          <td>{props.weapon_skill}+</td>\n          <td>{isNaN(props.ballistic_skill) ? '-' : props.ballistic_skill+\"+\"}</td>\n          <td>{props.strength}</td>\n          <td>{props.toughness}</td>\n          <td>{props.wounds}</td>\n          <td>{props.attacks}\n          { props.additional_attacks ? <strong>{' +'}{props.additional_attacks}</strong> : null}\n          </td>\n          <td>{props.leadership}</td>\n          <td>{props.save}+\n          { props.invulnerable_save ? <>{' / '}<strong>{props.invulnerable_save}++</strong></> : null}</td>\n        </tr>\n      </tbody>\n    </Table>\n  )\n}\n\nexport default StatsTable\n","import React from 'react';\nimport { Ability } from '../types';\nimport { Table } from 'react-bootstrap';\n\nconst _ = require('lodash')\n\ntype Props = {\n  abilities: Ability[],\n  phase: string,\n};\n\nfunction AbilityList(props: Props) {\n  const abilities = props.phase ?\n    props.abilities.filter((x) => (x.phases.indexOf(props.phase) >= 0)) :\n    props.abilities.filter((x) => (x.phases.length === 0))\n\n  return abilities.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Ability</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(abilities, ['name']).map((x: Ability) => (\n          <tr>\n            <td>{x.name}</td>\n            <td>{x.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default AbilityList;\n","import React from 'react';\n\ntype Props = {\n  specialism: string;\n};\n\nexport function SpecialistIcon(props: Props) {\n  return (props.specialism\n    ? <img className='specialism' style={{height: '1em', marginRight: '10px'}} alt={props.specialism} src={`/scriptorum/icons/${props.specialism.toLowerCase()}.svg`}/>\n    : <></>\n  );\n}\n","import React from 'react';\n\ntype Props = {\n  category: string;\n};\n\nexport function CategoryIcon(props: Props) {\n  return (props.category && props.category.toLowerCase() !== 'specialist' && props.category.toLowerCase() !== 'specialist retainer'\n    ? <img className='category' style={{height: '1em', marginRight: '10px'}} alt={props.category} src={`/scriptorum/icons/${props.category.toLowerCase()}.svg`}/>\n    : <></>\n);\n}\n","import React from 'react';\nimport { SpecialistIcon } from './SpecialistIcon';\nimport { CategoryIcon } from './CategoryIcon';\nimport { Col } from 'react-bootstrap'\n\nimport { Model } from '../types';\n\nconst _ = require('lodash')\n\ntype Props = {\n  showPoints?: boolean,\n  model: Model\n};\n\nexport function ModelTitle(props: Props) {\n  const headingStyle = {\n    background: 'lightgrey',\n    color: 'black',\n    padding: '5px',\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-between',\n  }\n  const titleComponents = _.without([\n    props.model.name,\n    props.model.type,\n    (props.model.category === \"Specialist\" || props.model.category === \"Specialist Retainer\"\n      ? props.model.specialism\n      : props.model.category)\n  ],null, \"\");\n  return (\n    <h2 style={headingStyle}>\n      <Col>\n        {(props.model.category === \"Specialist\" || props.model.category === \"Specialist Retainer\") && <SpecialistIcon specialism={props.model.specialism} />}\n        {props.model.category && <CategoryIcon category={props.model.category} />}\n        <strong>{titleComponents[0]} </strong>\n        {props.model.count > 1 && (\n          <small>x{props.model.count}</small>\n        )}\n        <small>{_.join(_.slice(titleComponents,1), \", \")}</small>\n      </Col>\n      {props.showPoints && (\n        <Col style={{flexGrow: 0, textAlign: 'right'}}>\n          <small>{props.model.points}pts</small>\n        </Col>\n      )}\n    </h2>\n  );\n}\n","import React from 'react';\nimport StatsTable from './StatsTable';\nimport AbilityList from './AbilityList';\nimport { Badge } from 'react-bootstrap'\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function NoPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model} showPoints={true}/>\n        {props.model.category === \"Commander\" && <div>Commander specialism: <strong>{props.model.specialism}</strong></div>}\n        <StatsTable {...props.model.stats}/>\n        <AbilityList abilities={props.model.abilities} phase=''/>\n      </Col>\n      <Col sm='auto'>\n        <div>\n          <Badge pill variant=\"primary\" className=\"mb-2\" style={{\n            textTransform: \"uppercase\",\n            marginRight: \"10px\",\n            display: \"block\",\n          }}>\n            {props.model.faction}\n          </Badge>\n          {props.model.keywords.map((keyword: string) => (\n            <Badge pill variant=\"secondary\" className=\"mb-2\" style={{\n              textTransform: \"uppercase\",\n              marginRight: \"10px\",\n              display: \"block\",\n            }}>\n              {keyword}\n            </Badge>\n          ))}\n        </div>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react'\nimport CSS from 'csstype'\n\ntype Props = {\n  name: string,\n  value: string,\n  secondaryValue?: string | null,\n}\n\nfunction StatBadge (props: Props) {\n  const badgeStyle: CSS.Properties = {\n    paddingTop: '.2vw',\n    border: '1px solid black',\n    width: '5vw',\n    height: '5vw',\n    background: 'black',\n    color: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    borderRadius: '50%',\n  };\n  const nameStyle: CSS.Properties = {\n    fontSize: '1vw',\n    lineHeight: '1vw',\n  };\n  const valueStyle: CSS.Properties = {\n    fontSize: '3vw',\n    lineHeight: '3vw',\n    fontWeight: 'bold'\n  }\n  return (\n    <div className='statbadge mb-4' style={badgeStyle}>\n      <div className='name' style={nameStyle}>{props.name}</div>\n      <div className='value' style={valueStyle}>\n        { props.value }\n        { props.secondaryValue\n          ? <small>{props.secondaryValue}</small>\n          : <></>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default StatBadge\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport StatBadge from './StatBadge';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function MovementPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='movement'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"M\" value={`${props.model.stats.movement}`}/>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function ScoutingPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='scouting'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasScoutingPhase(model: Model) {\n  return ((model.abilities.filter((x) => (x.phases.indexOf(\"scouting\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function DeploymentPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='deployment'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasDeploymentPhase(model: Model) {\n  return ((model.abilities.filter((x) => (x.phases.indexOf(\"deployment\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function InitiativePhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='initiative'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasInitiativePhase(model: Model) {\n  return ((model.abilities.filter((x) => (x.phases.indexOf(\"initiative\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport { PsychicPower } from '../types';\nimport { Table } from 'react-bootstrap';\n\nconst _ = require('lodash')\n\ntype Props = {\n  powers: PsychicPower[],\n};\n\nfunction PsychicPowerList(props: Props) {\n  return props.powers.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Power</th>\n          <th>Warp Charge</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(props.powers, ['name']).map((x: PsychicPower) => (\n          <tr>\n            <td>{x.name}</td>\n            <td>{x.charge}</td>\n            <td>{x.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default PsychicPowerList;\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport PsychicPowerList from './PsychicPowerList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function PsychicPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <PsychicPowerList powers={props.model.psychicPowers}/>\n        <AbilityList abilities={props.model.abilities} phase='psychic'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasPsychicPhase(model: Model) {\n  return (model.psychicPowers.length > 0 || (model.abilities.filter((x) => (x.phases.indexOf(\"psychic\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport { Weapon } from '../types';\nimport { Table } from 'react-bootstrap';\n\nconst _ = require('lodash')\n\ntype Props = {\n  weapons: Weapon[],\n  phase: string,\n  userStrength: number,\n};\n\nfunction WeaponList(props: Props) {\n  const weapons = props.phase === 'shooting'\n    ? props.weapons.filter((x) => (x.type !== \"Melee\"))\n    : props.weapons.filter((x) => (x.type === \"Melee\"))\n\n  return weapons.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Weapon</th>\n          {props.phase === \"shooting\" && <th>Range</th>}\n          {props.phase === \"shooting\" && <th>Type</th>}\n          {props.phase === \"shooting\" && <th>Shots</th>}\n          <th>S</th>\n          <th>AP</th>\n          <th>D</th>\n          <th>Abilities</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(weapons, ['name']).map((x: Weapon) => (\n          <tr>\n            <td style={{\"whiteSpace\": \"nowrap\"}}>{x.name}</td>\n            {props.phase === \"shooting\" && <td>{x.range}&quot;</td>}\n            {props.phase === \"shooting\" && <td style={{\"whiteSpace\": \"nowrap\"}}>{x.type}</td>}\n            {props.phase === \"shooting\" && <td style={{\"whiteSpace\": \"nowrap\"}}>{x.shots}</td>}\n            <td>{x.strength}</td>\n            <td>{x.armourPiercing}</td>\n            <td>{x.damage}</td>\n            <td>{x.abilities}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default WeaponList;\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from './AbilityList';\nimport WeaponList from './WeaponList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function ShootingPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        {hasRangedWeapons(props.model) && <WeaponList weapons={props.model.weapons} phase='shooting' userStrength={props.model.stats.strength}/>}\n        <AbilityList abilities={props.model.abilities} phase='shooting'/>\n      </Col>\n      <Col sm='auto'>\n        {hasRangedWeapons(props.model) && <StatBadge name=\"BS\" value={`${props.model.stats.ballistic_skill}`} secondaryValue=\"+\"/>}\n        <StatBadge name=\"T\" value={`${props.model.stats.toughness}`}/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"Sv\" value={`${props.model.stats.save}`} secondaryValue=\"+\"/>\n        { props.model.stats.invulnerable_save\n          ? <StatBadge name=\"Inv\" value={`${props.model.stats.invulnerable_save}`} secondaryValue=\"+\"/>\n          : <></>\n        }\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasRangedWeapons(model: Model) {\n  return !isNaN(model.stats.ballistic_skill) && (model.weapons.filter((x) => (x.type !== \"Melee\")).length > 0)\n}\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from './AbilityList';\nimport WeaponList from './WeaponList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function FightPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <WeaponList weapons={props.model.weapons} phase='fight' userStrength={props.model.stats.strength}/>\n        <AbilityList abilities={props.model.abilities} phase='fight'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"A\" value={`${props.model.stats.attacks}`} secondaryValue={ props.model.stats.additional_attacks ? `+${props.model.stats.additional_attacks}` : null}/>\n        <StatBadge name=\"T\" value={`${props.model.stats.toughness}`}/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"WS\" value={`${props.model.stats.weapon_skill}`} secondaryValue=\"+\"/>\n        <StatBadge name=\"Sv\" value={`${props.model.stats.save}`} secondaryValue=\"+\"/>\n        { props.model.stats.invulnerable_save\n          ? <StatBadge name=\"Inv\" value={`${props.model.stats.invulnerable_save}`} secondaryValue=\"+\"/>\n          : <></>\n        }\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from './AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function MoralePhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='morale'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"Ld\" value={`${props.model.stats.leadership}`}/>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\ntype Props = {\n  onClose: any,\n};\n\nexport function CloseButton(props: Props) {\n  return (<Button variant=\"primary\" className='d-print-none' onClick={props.onClose}>Close</Button>);\n}\n","import React from 'react';\nimport { Col } from 'react-bootstrap';\nimport { Model } from '../types';\nimport Phase from './Phase';\nimport { NoPhaseDetails } from './NoPhaseDetails';\nimport { MovementPhaseDetails } from './MovementPhaseDetails';\nimport { ScoutingPhaseDetails, hasScoutingPhase } from './ScoutingPhaseDetails';\nimport { DeploymentPhaseDetails, hasDeploymentPhase } from './DeploymentPhaseDetails';\nimport { InitiativePhaseDetails, hasInitiativePhase } from './InitiativePhaseDetails';\nimport { PsychicPhaseDetails, hasPsychicPhase } from './PsychicPhaseDetails';\nimport { ShootingPhaseDetails } from './ShootingPhaseDetails';\nimport { FightPhaseDetails } from './FightPhaseDetails';\nimport { MoralePhaseDetails } from './MoralePhaseDetails';\nimport { CloseButton } from './CloseButton';\n\nconst _ = require('lodash')\n\ntype Props = {\n  name: string,\n  points: number,\n  models: Model[],\n  onClose: any,\n};\n\nfunction Roster(props: Props) {\n  // Display models sorted by category and type\n  const sortedModels = _.sortBy(props.models, (x: Model) => ([x.category == null, x.category, x.type]))\n  return <>\n    <h1 style={{\n      background: 'black',\n      color: 'white',\n      padding: '10px',\n      width: '100%',\n      textTransform: 'capitalize',\n      display: 'flex',\n    }}>\n      <Col>\n        {props.name}\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        <small>{props.points}pts</small>\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        <CloseButton onClose={props.onClose}/>\n      </Col>\n    </h1>\n    <>\n      {sortedModels.map((model: Model) => (\n        <NoPhaseDetails model={model}/>\n      ))}\n    </>\n    {_.some(sortedModels, hasScoutingPhase) &&\n      <Phase name=\"scouting\">\n        {sortedModels.map((model: Model) => (\n          hasScoutingPhase(model) &&\n          <ScoutingPhaseDetails model={model}/>\n        ))}\n      </Phase>\n    }\n    {_.some(sortedModels, hasDeploymentPhase) &&\n      <Phase name=\"deployment\">\n        {sortedModels.map((model: Model) => (\n          hasDeploymentPhase(model) &&\n          <DeploymentPhaseDetails model={model}/>\n        ))}\n      </Phase>\n    }\n    {_.some(sortedModels, hasInitiativePhase) &&\n      <Phase name=\"initiative\">\n        {sortedModels.map((model: Model) => (\n          hasInitiativePhase(model) &&\n          <InitiativePhaseDetails model={model}/>\n        ))}\n      </Phase>\n    }\n    <Phase name=\"movement\">\n      {sortedModels.map((model: Model) => (\n        <MovementPhaseDetails model={model}/>\n      ))}\n    </Phase>\n    {_.some(sortedModels, hasPsychicPhase) &&\n      <Phase name=\"psychic\">\n        {sortedModels.map((model: Model) => (\n          hasPsychicPhase(model) &&\n          <PsychicPhaseDetails model={model}/>\n        ))}\n      </Phase>\n    }\n    <Phase name=\"shooting\">\n      {sortedModels.map((model: Model) => (\n        <ShootingPhaseDetails model={model}/>\n      ))}\n    </Phase>\n    <Phase name=\"fight\">\n      {sortedModels.map((model: Model) => (\n        <FightPhaseDetails model={model}/>\n      ))}\n    </Phase>\n    <Phase name=\"morale\">\n      {sortedModels.map((model: Model) => (\n        <MoralePhaseDetails model={model}/>\n      ))}\n    </Phase>\n  </>\n}\n\nexport default Roster;\n","const DOMParser = require('xmldom').DOMParser\nconst xpath = require('xpath-ts').useNamespaces({ roster: 'http://www.battlescribe.net/schema/rosterSchema' })\n\nconst _ = require('lodash')\nconst hash = require('node-object-hash')([])\n\nconst stat = (name, model) => {\n  const nodes = xpath(`roster:profiles/roster:profile[@typeName='Model']//roster:characteristic[@name='${name}']`, model)\n  if (nodes.length > 0) {\n    return parseInt(nodes[0].childNodes[0].nodeValue)\n  } else { return '' }\n}\n\nconst weaponStat = (name, weapon, numeric) => {\n  const nodes = xpath(`roster:characteristics/roster:characteristic[@name='${name}']`, weapon)\n  if (nodes.length > 0) {\n    return numeric ? parseInt(nodes[0].childNodes[0].nodeValue) : nodes[0].childNodes[0].nodeValue\n  } else { return '' }\n}\n\nconst points = (model) => {\n  const costNode = xpath('.//roster:costs/roster:cost[@name=\\'pts\\']', model)\n  return _.sumBy(costNode, (x) => parseInt(x.getAttribute('value')))\n}\n\nexport const calculatePhases = (description) => {\n  const minDesc = ' ' + description.toLowerCase().replace(/[.,]/g, '') + ' '\n  const phases = []\n  const phasePatterns = {\n    scouting: [\n      / scouting /\n    ],\n    deployment: [\n      / before the first battle round /,\n      / set up /,\n      / cult ambush /\n    ],\n    initiative: [\n      / start of each battle round /,\n      / beginning of each battle round /\n    ],\n    movement: [\n      / movement phase /,\n      / climbs? /,\n      / normal move /,\n      / advances? /,\n      / charges? /,\n      / falls? back /,\n      / reacts? /,\n      / overwatch /,\n      / retreats? /,\n      / fly /,\n      / after this model has charged /,\n      / from reserves? /,\n      / can move across /,\n      / setup within /\n    ],\n    psychic: [\n      / psychic /,\n      / deny the witch /,\n      / perils of the warp /,\n      / psychich / // handle typo\n    ],\n    shooting: [\n      / shooting phase /,\n      / shots? /,\n      / ballistic skill /,\n      / ranged /,\n      / range characteristic /,\n      / half range /,\n      / long range /,\n      / short range /,\n      / grenades? /,\n      / shoots? /,\n      / shooting /,\n      / fire[sd]+ /,\n      / firing /,\n      / obscured /,\n      / order(ed)? /,\n      / voice of command /,\n      / invulnerable save /,\n      / demolition charges? /,\n      / liberator autostubs /,\n      / obscurred /, // handle typo\n      / look out sir! /,\n      / pistol /,\n      / heavy weapons?/,\n      / add [0-9] to saving throws /\n    ],\n    fight: [\n      / fight phase /,\n      / fights? /,\n      / weapon skill /,\n      / attacks characteristics? /,\n      / strength characteristics? /,\n      / piles? in /,\n      / consolidates? /,\n      / melee /,\n      / close combat /,\n      / death to the false emperor /,\n      / additional attacks? /,\n      / invulnerable save /,\n      / look out sir! /,\n      / intervening terrain /,\n      / damage characteristic is [0-9] in a battle round in which this model charged /,\n      / add [0-9] to saving throws /\n    ],\n    morale: [\n      / nerve /,\n      / leadership /\n    ]\n  }\n  _.forIn(phasePatterns, (patterns, phase) => {\n    if (_.some(patterns, (re) => (re.test(minDesc)))) {\n      phases.push(phase)\n    }\n  })\n  // If there's no fight or shoot yet, test some generic patterns that could be either\n  if (!phases.includes('fight') && !phases.includes('shooting')) {\n    const genericPatterns = [\n      / weapon /,\n      / hit rolls? /,\n      / attack(s|ing)? /,\n      / saves? /,\n      / saving throws? /,\n      / injury rolls? /,\n      / wound rolls? /,\n      / loses? a wound /,\n      / fall(ing)? damage /,\n      / the bearer is taken out of action /,\n      / toughness characteristic /,\n      / suffers? a mortal wound /,\n      / taken out of action /,\n      / this weapon/\n    ]\n    if (_.some(genericPatterns, (re) => (re.test(minDesc)))) {\n      phases.push('fight', 'shooting')\n    }\n  }\n  // Remove phases for some patterns that get picked up incorrectly\n  const antiPatterns = {\n    deployment: [\n      / from reserve /\n    ],\n    movement: [\n      / previous movement phase /,\n      / preceding movement phase /,\n      / if the firing model moved /,\n      / moved during the movement phase /,\n      / round in which it charges or is charged /,\n      / in which it made a successful charge /,\n      / even if it fell back in the movement phase /,\n      / model that can fly /,\n      / as if it were the movement phase /,\n      / stunned /,\n      / penalty for moving /,\n      / as if the model had remained stationary /,\n      / demolition charge /\n    ],\n    psychic: [\n      / after all of this weapon's attacks have been resolved /\n    ],\n    shooting: [\n      / when (it|this model) fires overwatch /,\n      / invulnerable save (against attacks made )?in the fight phase /,\n      / as if it were your shooting phase /,\n      / tactical support turret /\n    ],\n    fight: [\n      / as if it were the fight phase /,\n      / shots equal to its attacks characteristic /,\n      / stunned /,\n      / target enemies at [0-9]{1,2}\" or less /,\n      / within half range /,\n      / tactical support turret /\n    ],\n    morale: [\n      / target model's leadership /,\n      / weapon against a model which has a leadership /,\n      / subtract 1 from its leadership / // phantasm grenade effect\n    ]\n  }\n  _.forIn(antiPatterns, (patterns, phase) => {\n    if (_.some(patterns, (re) => (re.test(minDesc)))) {\n      _.remove(phases, (p) => (p === phase))\n    }\n  })\n  // OK, done\n  return phases\n}\n\nconst parseForceRule = (rule) => {\n  const description = xpath('roster:description', rule)[0].childNodes[0].nodeValue\n  return {\n    name: rule.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parseAbility = (ability) => {\n  const description = xpath(\".//roster:characteristic[@name='Description']\", ability)[0].childNodes[0].nodeValue\n  return {\n    name: ability.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parseWeapon = (weapon, userStrength) => {\n  let strength = weaponStat('S', weapon, false)\n  if (strength === 'User') {\n    strength = userStrength\n  }\n  let match = /x([0-9]+)/i.exec(strength)\n  if (match) {\n    strength = userStrength * parseInt(match[1])\n  }\n  match = /\\+([0-9]+)/i.exec(strength)\n  if (match) {\n    strength = userStrength + parseInt(match[1])\n  }\n  let weaponType = weaponStat('Type', weapon, false)\n  if (weaponType !== 'Melee') { weaponType = weaponType.split(' ').slice(0, -1).join(' ') }\n  return {\n    name: weapon.getAttribute('name'),\n    range: weaponStat('Range', weapon, true),\n    type: weaponType,\n    shots: weaponStat('Type', weapon, false).split(' ').slice(-1)[0],\n    strength,\n    armourPiercing: weaponStat('AP', weapon, true),\n    damage: weaponStat('D', weapon, false),\n    abilities: weaponStat('Abilities', weapon, false)\n  }\n}\n\nconst parseWargear = (wargear) => {\n  const description = xpath(\".//roster:characteristic[@name='Ability']\", wargear)[0].childNodes[0].nodeValue\n  return {\n    name: wargear.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parsePsychicPower = (power) => {\n  let description = xpath(\".//roster:characteristic[@name='Psychic Power']\", power)[0].childNodes[0].nodeValue\n  const warpChargeDescription = description.match(/warp charge value of ([0-9]+)\\.(.*)/)\n  let charge = null\n  if (warpChargeDescription.length > 2) {\n    charge = parseInt(warpChargeDescription[1])\n    description = warpChargeDescription[2]\n  }\n  return {\n    name: power.getAttribute('name'),\n    charge,\n    description\n  }\n}\n\nexport const additionalAttacks = (weapons, abilities) => {\n  const descriptions = _.map(weapons, (w) => w.abilities).concat(_.map(abilities, (a) => a.description))\n  const attacks = _.map(descriptions, (d) => parseAdditionalAttacks(d))\n  return _.sum(attacks)\n}\n\nexport const parseAdditionalAttacks = (description) => {\n  const patterns = [\n    /Add ([1-9]{1}) to this model's Attacks characteristic/,\n    / ([1-9]|an|one|two) additional attack/,\n    /(one) \\(and only one\\) attack with this weapon./\n  ]\n  const antiPatterns = [\n    /if a model/,\n    /if the bearer/,\n    /unless/\n  ]\n  return _.sum(_.map(patterns, (pattern) => {\n    const match = description.match(pattern)\n    if (match) {\n      if (_.some(antiPatterns, (re) => (re.test(description)))) {\n        return 0\n      }\n      if (match[1] === 'an' || match[1] === 'one') return 1\n      if (match[1] === 'two') return 2\n      return parseInt(match[1] || match[2])\n    }\n    return 0\n  }))\n}\n\nexport const invulnerableSave = (abilities) => {\n  const patterns = [\n    /models with this ability have a ([1-6]{1})\\+ invulnerable save/,\n    /has a ([1-6]{1})\\+ invulnerable save($|\\.|,| and| instead of)/,\n    /has an invulnerable save of ([1-6]{1})\\+/\n  ]\n  const saves = _.map(abilities, (a) => {\n    return _.min(_.map(patterns, (pattern) => {\n      const match = a.description.match(pattern)\n      if (match) {\n        return parseInt(match[1])\n      }\n      return null\n    }))\n  })\n  return _.min(saves)\n}\n\nconst parseModel = (model) => {\n  const forceRules = xpath('//roster:force/roster:rules/roster:rule', model).map(parseForceRule)\n  const wargear = xpath(\".//roster:profile[@typeName='Wargear']\", model).map(parseWargear)\n  const specialismSelection = xpath(\"roster:selections/roster:selection[roster:selections/roster:selection/roster:profiles/roster:profile/@typeName='Ability']\", model)\n  const abilities = xpath(\".//roster:profile[@typeName='Ability']\", model).map(parseAbility).concat(forceRules).concat(wargear)\n  const stats = {\n    movement: stat('M', model),\n    weapon_skill: stat('WS', model),\n    ballistic_skill: stat('BS', model),\n    strength: stat('S', model),\n    toughness: stat('T', model),\n    wounds: stat('W', model),\n    attacks: stat('A', model),\n    leadership: stat('Ld', model),\n    save: stat('Sv', model),\n    invulnerable_save: invulnerableSave(abilities)\n  }\n  const closeCombatWeapon = {\n    name: 'Bare fists',\n    range: '-',\n    type: 'Melee',\n    strength: stats.strength,\n    armourPiercing: 0,\n    damage: 1,\n    abilities: 'Default close combat weapon available to all models'\n  }\n  const weapons = xpath(\".//roster:profile[@typeName='Weapon']\", model).map((x) => (parseWeapon(x, stats.strength))).concat([closeCombatWeapon])\n  stats.additional_attacks = additionalAttacks(weapons, abilities)\n  const psychicPowers = xpath(\"roster:selections/roster:selection/roster:profiles/roster:profile[@typeName='Psychic Power']\", model).map(parsePsychicPower)\n  const category = xpath(\"roster:categories/roster:category[@primary='true']\", model)[0].getAttribute('name')\n  const faction = xpath(\"roster:categories/roster:category[@primary='false' and starts-with(@name,'Faction: ')]\", model)\n  const keywords = xpath(\"roster:categories/roster:category[@primary='false' and not(starts-with(@name,'Faction: '))]\", model).map((x) => x.getAttribute('name'))\n  _.remove(keywords, (x) => (x === 'Model'))\n  const details = {\n    name: model.getAttribute('customName'),\n    type: model.getAttribute('name'),\n    category: category === 'Non-specialist' ? null : category,\n    stats,\n    abilities,\n    weapons,\n    psychicPowers,\n    specialism: specialismSelection.length > 0 ? specialismSelection[0].getAttribute('name') : null,\n    faction: faction.length > 0 ? faction[0].getAttribute('name').split(': ', 2)[1] : null,\n    keywords,\n    points: points(model)\n  }\n  return { ...details, hash: hash.hash(details) }\n}\n\nexport const parseBattlescribeXML = (xml) => {\n  var models = []\n  var doc = new DOMParser().parseFromString(xml)\n  const name = xpath('/roster:roster', doc)[0].getAttribute('name')\n  for (const category of xpath('//roster:force/roster:categories/roster:category', doc)) {\n    const categoryId = category.getAttribute('entryId')\n    for (const model of xpath(`//roster:selection[@type='model' and roster:categories/roster:category/@entryId='${categoryId}']`, doc)) {\n      models.push(parseModel(model))\n    }\n  }\n  const points = _.sumBy(models, (x) => (x.points))\n  const uniqueModels = _.groupBy(models, (m) => m.hash)\n  return {\n    name,\n    points,\n    models: _.map(uniqueModels, (m) => (\n      { ...m[0], count: m.length }\n    ))\n  }\n}\n","import { parseBattlescribeXML } from './BattlescribeParser'\n\nconst JSZip = require('jszip')\n\nconst unzip = (file) => {\n  if (file[0] !== 'P') { return Promise.resolve(file) } else {\n    const jszip = new JSZip()\n    return jszip.loadAsync(file)\n      .then((zip) => (\n        zip.file(/[^/]+\\.ros/)[0].async('string') // Get roster files that are in the root\n      ))\n  }\n}\n\nconst parseFile = (file) => (\n  unzip(file).then(parseBattlescribeXML)\n)\n\nexport const loadFile = async (file) => {\n  const reader = new FileReader()\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort()\n      reject(new DOMException('Problem parsing input file.'))\n    }\n    reader.onloadend = async () => {\n      resolve(parseFile(reader.result))\n    }\n    reader.readAsBinaryString(file)\n  })\n}\n\nexport const loadFiles = (files) => {\n  return loadFile(files[0])\n}\n","import React from 'react'\nimport Homepage from './components/Homepage'\nimport Roster from './components/Roster'\nimport { Container } from 'react-bootstrap'\nimport { loadFiles } from './FileLoader'\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n    const initialState = {\n      name: null,\n      points: 0,\n      models: []\n    }\n    this.state = initialState\n\n    this.handleUpload = (acceptedFiles) => {\n      loadFiles(acceptedFiles).then((result) => {\n        this.setState(result)\n      })\n    }\n\n    this.handleClose = () => {\n      this.setState(initialState)\n    }\n  }\n\n  render () {\n    return (\n      <Container fluid='lg'>\n        {this.state.models.length === 0\n          ? <Homepage onUpload={this.handleUpload} />\n          : <Roster points={this.state.points} name={this.state.name} models={this.state.models} onClose={this.handleClose} />}\n      </Container>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// Enable offline use with a service worker\n// See https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.register()\n"],"sourceRoot":""}