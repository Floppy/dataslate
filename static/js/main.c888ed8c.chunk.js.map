{"version":3,"sources":["components/Intro.tsx","components/Homepage.tsx","components/KillTeam2018/Phase.tsx","components/AbilityList.tsx","components/KillTeam2018/StatsTable.tsx","components/KillTeam2018/SpecialistIcon.tsx","components/KillTeam2018/CategoryIcon.tsx","components/ModelTitle.tsx","components/KillTeam2018/NoPhaseDetails.tsx","components/KillTeam2018/StatBadge.tsx","components/KillTeam2018/MovementPhaseDetails.tsx","components/KillTeam2018/ScoutingPhaseDetails.tsx","components/KillTeam2018/DeploymentPhaseDetails.tsx","components/KillTeam2018/InitiativePhaseDetails.tsx","components/KillTeam2018/PsychicPowerList.tsx","components/KillTeam2018/PsychicPhaseDetails.tsx","components/KillTeam2018/WeaponList.tsx","components/KillTeam2018/ShootingPhaseDetails.tsx","components/KillTeam2018/FightPhaseDetails.tsx","components/KillTeam2018/MoralePhaseDetails.tsx","components/CloseButton.tsx","components/KillTeam2018/Roster.tsx","components/KillTeam2021/StatsTable.tsx","components/KillTeam2021/WeaponList.tsx","components/KillTeam2021/Datasheet.tsx","components/KillTeam2021/Roster.tsx","parsers/KillTeam2018/Abilities.ts","parsers/KillTeam2018/BattlescribeParser.js","parsers/KillTeam2021/BattlescribeParser.ts","FileLoader.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["Intro","Jumbotron","className","Homepage","props","Row","Col","Card","Header","as","Body","style","minHeight","Text","href","onDrop","onUpload","accept","getRootProps","getInputProps","Alert","variant","textAlign","process","Phase","pageBreakAfter","background","color","padding","width","textTransform","display","name","flexGrow","note","children","AbilityList","abilities","phase","filter","x","phases","indexOf","length","highlight","Table","striped","bordered","size","_","sortBy","map","description","StatsTable","movement","weapon_skill","isNaN","ballistic_skill","strength","toughness","wounds","attacks","additional_attacks","leadership","save","invulnerable_save","points","SpecialistIcon","specialism","height","marginRight","alt","src","toLowerCase","CategoryIcon","category","ModelTitle","titleComponents","without","type","undefined","justifyContent","selected","join","slice","showSelector","value","slideStop","onSelectionChanged","uuid","target","step","max","count","min","NoPhaseDetails","model","weapons","w","concat","wargear","stats","sm","Badge","pill","faction","keywords","keyword","StatBadge","paddingTop","border","flexDirection","borderRadius","fontSize","fontWeight","lineHeight","secondaryValue","MovementPhaseDetails","ScoutingPhaseDetails","hasScoutingPhase","DeploymentPhaseDetails","hasDeploymentPhase","InitiativePhaseDetails","hasInitiativePhase","PsychicPowerList","powers","charge","PsychicPhaseDetails","psychicPowers","hasPsychicPhase","WeaponList","range","shots","armourPiercing","damage","ShootingPhaseDetails","hasRangedWeapons","userStrength","FightPhaseDetails","MoralePhaseDetails","CloseButton","Button","onClick","onClose","Roster","sortedModels","models","selectedModels","sumBy","forceRules","some","actionPointLimit","groupActivation","defence","hit","criticalDamage","specialRules","criticalRules","Datasheet","rules","repeat","phasePatterns","scouting","deployment","initiative","psychic","shooting","fight","morale","genericPatterns","antiPatterns","calculatePhases","minDesc","replace","forIn","patterns","re","test","push","includes","remove","p","invulnerableSave","saves","a","pattern","match","parseInt","xpath","XPath","roster","stat","nodes","childNodes","nodeValue","weaponStat","weapon","numeric","costNode","getAttribute","parseForceRule","rule","parseAbility","ability","parseWargear","parsePsychicPower","power","warpChargeDescription","additionalAttacks","descriptions","d","sum","parseAdditionalAttacks","parseModel","specialismSelection","closeCombatWeapon","exec","weaponType","split","parseWeapon","details","hash","xpSelect","bs","node","toString","melee","startsWith","parseRule","textContent","unzip","file","charAt","jszip","JSZip","loadAsync","zip","async","parseFile","doc","DOMParserImpl","parseFromString","categoryId","uniqueModels","groupBy","m","system","uuidv4","parseKillTeam2018","parseKillTeam2021","Error","loadFile","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onloadend","content","result","readAsBinaryString","App","useState","setRoster","handleUpload","acceptedFiles","r","handleClose","isRosterKT18","Container","fluid","selectedCount","Object","assign","isRosterKT21","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Sentry","dsn","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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/F,KAAI,SAAC6C,GAAD,OACd,cAAC8D,GAAD,CAAW9D,MAAOA,U,8DC3BpBiE,GAAgB,CACpBC,SAAU,CACR,cAEFC,WAAY,CACV,kCACA,WACA,iBAEFC,WAAY,CACV,+BACA,mCACA,0CAEF9G,SAAU,CACR,mBACA,YACA,gBACA,cACA,aACA,gBACA,YACA,cACA,cACA,QACA,iCACA,mBACA,oBACA,kBAEF+G,QAAS,CACP,YACA,mBACA,uBACA,cAEFC,SAAU,CACR,mBACA,WACA,oBACA,WACA,yBACA,eACA,eACA,gBACA,cACA,YACA,aACA,cACA,WACA,aACA,YACA,eACA,qBACA,sBACA,wBACA,wBACA,cACA,kBACA,WACA,kBACA,gCAEFC,MAAO,CACL,gBACA,YACA,iBACA,6BACA,8BACA,cACA,kBACA,UACA,iBACA,+BACA,wBACA,sBACA,kBACA,wBACA,2CACA,iFACA,gCAEFC,OAAQ,CACN,UACA,iBAIEC,GAAkB,CACtB,WACA,eACA,mBACA,WACA,mBACA,kBACA,iBACA,mBACA,sBACA,sCACA,6BACA,4BACA,wBACA,eACA,yBAGIC,GAAe,CACnBP,WAAY,CACV,kBAEF7G,SAAU,CACR,4BACA,6BACA,8BACA,oCACA,4CACA,yCACA,+CACA,uBACA,qCACA,YACA,uBACA,4CACA,uBAEF+G,QAAS,CACP,2DAEFC,SAAU,CACR,yCACA,iEACA,sCACA,4BACA,wCACA,aAEFC,MAAO,CACL,yCACA,8CACA,YACA,0CACA,sBACA,6BAEFC,OAAQ,CACN,8BACA,kDACA,qCAISG,GAAkB,SAACvH,GAC9B,IAAMwH,EAAU,IAAMxH,EAAYqB,cAAcoG,QAAQ,UAAW,IAAM,IACnEpI,EAAoB,GAmB1B,OAlBAQ,IAAE6H,MAAMb,IAAe,SAACc,EAAUzI,GAC5BW,IAAEqG,KAAKyB,GAAU,SAACC,GAAD,OAASA,EAAGC,KAAKL,OACpCnI,EAAOyI,KAAK5I,MAIXG,EAAO0I,SAAS,UAAa1I,EAAO0I,SAAS,aAC5ClI,IAAEqG,KAAKmB,IAAiB,SAACO,GAAD,OAASA,EAAGC,KAA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","file":"static/js/main.c888ed8c.chunk.js","sourcesContent":["import React from 'react';\nimport { Jumbotron } from 'react-bootstrap'\n\nfunction Intro() {\n  return <Jumbotron>\n    <h1>\n      Dataslate\n    </h1>\n    <p className='lead'>\n      Easy-to-use datasheets for Warhammer 40,000: Kill Team\n    </p>\n    <ul>\n      <li>All the info you need, when you need it</li>\n      <li>Stats and abilities organised by phase</li>\n      <li>No wasted space for identical models</li>\n      <li>Designed for print or screen</li>\n      <li>Clear, uncluttered layout for easy reference</li>\n    </ul>\n  </Jumbotron>\n}\n\nexport default Intro;\n","import React from 'react';\nimport Dropzone from 'react-dropzone'\nimport type { DropzoneOptions } from 'react-dropzone'\nimport Intro from './Intro'\nimport { Row, Col, Alert, Card } from 'react-bootstrap'\n\ntype Props = {\n  onUpload: DropzoneOptions[\"onDrop\"],\n}\n\nfunction Homepage(props: Props) {\n  return <>\n    <Intro />\n    <Row>\n      <Col>\n        <Card>\n          <Card.Header as=\"h3\">Step 1</Card.Header>\n          <Card.Body style={{minHeight: '12em'}}>\n            <Card.Text>\n              Build your force in{' '}\n              <a href='https://battlescribe.net/'>Battlescribe</a>.\n            </Card.Text>\n            <Card.Text>\n              Currently only Kill Team rosters are supported.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col>\n        <Card>\n          <Card.Header as=\"h3\">Step 2</Card.Header>\n          <Card.Body style={{minHeight: '12em'}}>\n            <Dropzone onDrop={props.onUpload} accept='.ros,.rosz'>\n              {({ getRootProps, getInputProps }) => (\n                <Alert variant='primary' {...getRootProps()} style={{ textAlign: 'center' }}>\n                  <input {...getInputProps()} />\n                  <p>Drop your roster file here, or click to select one.</p>\n                  <p><em>(*.rosz and *.ros accepted)</em></p>\n                </Alert>\n              )}\n            </Dropzone>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col>\n        <Card>\n          <Card.Header as=\"h3\">Step 3</Card.Header>\n          <Card.Body style={{minHeight: '12em'}}>\n            <Card.Text>\n              Print your datasheets out, and never forget an ability again!\n            </Card.Text>\n            <Card.Text>\n              Prepare to dominate your foes!\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    <footer>\n      Built with <a href='https://reactjs.org/'>React</a> and <a href='https://getbootstrap.com'>Bootstrap</a>.\n      Icons courtesy of <a href='https://killteam.app/'>Companion for Kill Team</a>.\n      Released as <a href='https://github.com/floppy/dataslate'>Open Source</a>,\n      report problems <a href='https://github.com/floppy/dataslate/issues/new'>on GitHub</a>.\n      Version: <em><a {...{href: `https://github.com/floppy/dataslate/tree/${process.env.REACT_APP_GIT_SHA}`}} >{process.env.REACT_APP_GIT_SHA}</a></em>\n    </footer>\n  </>\n}\n\nexport default Homepage;\n","import React from 'react';\nimport { Col } from 'react-bootstrap'\n\ntype Props = {\n  name: string,\n  note?: string,\n  children: React.ReactNode,\n};\n\nfunction Phase(props: Props) {\n  return <div style={{\n    pageBreakAfter: 'always',\n  }}>\n    <h1 style={{\n      background: 'black',\n      color: 'white',\n      padding: '10px',\n      width: '100%',\n      textTransform: 'capitalize',\n      display: 'flex',\n    }}>\n      <Col>\n        {props.name} Phase\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        {props.note && (\n          <small>{props.note}</small>\n        )}\n      </Col>\n    </h1>\n    {props.children}\n  </div>\n}\n\nexport default Phase;\n","import React from 'react';\nimport { Ability } from '../types/Ability';\nimport { Table } from 'react-bootstrap';\nimport _ from 'lodash'\n\ntype Props = {\n  abilities: Ability[],\n  phase: string,\n  highlight?: boolean,\n};\n\nfunction AbilityList(props: Props) {\n  const abilities = props.phase ?\n    props.abilities.filter((x) => (x.phases && x.phases.indexOf(props.phase) >= 0)) :\n    props.abilities.filter((x) => (x.phases && x.phases.length === 0))\n  const variant = props.highlight ? \"primary\" : \"\";\n\n  return abilities.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\" variant={variant}>\n      <thead>\n        <tr>\n          <th>Ability</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(abilities, ['name']).map((x: Ability) => (\n          <tr>\n            <td>{x.name}</td>\n            <td>{x.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default AbilityList;\n","import React from 'react'\nimport { Table } from 'react-bootstrap'\n\ntype Props = {\n  movement: number,\n  weapon_skill: number,\n  ballistic_skill: number,\n  strength: number,\n  toughness: number,\n  wounds: number,\n  attacks: number,\n  additional_attacks: number,\n  leadership: number,\n  save: number,\n  invulnerable_save: number,\n  points: number,\n}\n\nfunction StatsTable (props: Props) {\n  return (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>M</th>\n          <th>WS</th>\n          <th>BS</th>\n          <th>S</th>\n          <th>T</th>\n          <th>W</th>\n          <th>A</th>\n          <th>Ld</th>\n          <th>Sv</th>\n          <th>Points</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{props.movement}&quot;</td>\n          <td>{props.weapon_skill}+</td>\n          <td>{isNaN(props.ballistic_skill) ? '-' : props.ballistic_skill+\"+\"}</td>\n          <td>{props.strength}</td>\n          <td>{props.toughness}</td>\n          <td>{props.wounds}</td>\n          <td>{props.attacks}\n          { props.additional_attacks ? <strong>{' +'}{props.additional_attacks}</strong> : null}\n          </td>\n          <td>{props.leadership}</td>\n          <td>{props.save}+\n          { props.invulnerable_save ? <>{' / '}<strong>{props.invulnerable_save}++</strong></> : null}</td>\n          <td>{props.points}</td>\n        </tr>\n      </tbody>\n    </Table>\n  )\n}\n\nexport default StatsTable\n","import React from 'react';\n\ntype Props = {\n  specialism: string;\n};\n\nexport function SpecialistIcon(props: Props) {\n  return (props.specialism\n    ? <img className='specialism' style={{height: '1em', marginRight: '10px'}} alt={props.specialism} src={`/icons/${props.specialism.toLowerCase()}.svg`}/>\n    : <></>\n  );\n}\n","import React from 'react';\n\ntype Props = {\n  category: string;\n};\n\nexport function CategoryIcon(props: Props) {\n  return (props.category && props.category.toLowerCase() !== 'specialist' && props.category.toLowerCase() !== 'specialist retainer'\n    ? <img className='category' style={{height: '1em', marginRight: '10px'}} alt={props.category} src={`/icons/${props.category.toLowerCase()}.svg`}/>\n    : <></>\n);\n}\n","import React from 'react';\nimport { SpecialistIcon } from './KillTeam2018/SpecialistIcon';\nimport { CategoryIcon } from './KillTeam2018/CategoryIcon';\nimport { Col } from 'react-bootstrap'\nimport ReactBootstrapSlider from 'react-bootstrap-slider';\nimport _ from 'lodash'\n\ntype Props = {\n  showSelector?: boolean,\n  onSelectionChanged?: (uuid: string, value: number) => void,\n  selected: number,\n  count: number,\n  uuid: string,\n  name: string,\n  type: string,\n  category?: string,\n  specialism?: string,\n};\n\nexport function ModelTitle(props: Props) {\n  const headingStyle = {\n    background: 'lightgrey',\n    color: 'black',\n    padding: '5px',\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-between',\n  }\n  const titleComponents = _.without([\n    props.name,\n    props.type,\n    (props.category === \"Specialist\" || props.category === \"Specialist Retainer\"\n      ? props.specialism\n      : props.category)\n  ],null, undefined, \"\");\n  return (\n    <h2 style={headingStyle}>\n      <Col>\n        {props.category && props.specialism && (props.category === \"Specialist\" || props.category === \"Specialist Retainer\") && <SpecialistIcon specialism={props.specialism} />}\n        {props.category && <CategoryIcon category={props.category} />}\n        {props.selected > 1 && (\n          <small>{props.selected} x </small>\n        )}\n        <strong>{titleComponents[0]} </strong>\n        <small>{_.join(_.slice(titleComponents,1), \", \")}</small>\n      </Col>\n      {props.showSelector && (\n        <Col style={{flexGrow: 0}}>\n          <ReactBootstrapSlider\n            value={props.selected}\n            slideStop={(x: any) => props.onSelectionChanged && props.onSelectionChanged(props.uuid, x.target.value)}\n            step={1}\n            max={props.count}\n            min={0} />\n        </Col>\n      )}\n    </h2>\n  );\n}\n","import React from 'react';\nimport StatsTable from './StatsTable';\nimport AbilityList from '../AbilityList';\nimport { Badge } from 'react-bootstrap'\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n  onSelectionChanged: (uuid: string, value: number) => void,\n};\n\nexport function NoPhaseDetails(props: Props) {\n  return (\n    <Row className={props.model.selected > 0 ? \"included\" : \"excluded\"}>\n      <Col>\n        <ModelTitle {...props.model} showSelector onSelectionChanged={props.onSelectionChanged} />\n        {props.model.category === \"Commander\" && <div>Commander specialism: <strong>{props.model.specialism}</strong></div>}\n        <p>{props.model.weapons.map((w) => (w.name)).concat(props.model.wargear.map((w) => (w.name))).join(\", \")}</p>\n        <StatsTable {...props.model.stats} points={props.model.points} />\n        <AbilityList abilities={props.model.abilities} phase=''/>\n      </Col>\n      <Col sm='auto'>\n        <div>\n          <Badge pill variant=\"primary\" className=\"mb-2\" style={{\n            textTransform: \"uppercase\",\n            marginRight: \"10px\",\n            display: \"block\",\n          }}>\n            {props.model.faction}\n          </Badge>\n          {props.model.keywords.map((keyword: string) => (\n            <Badge pill variant=\"secondary\" className=\"mb-2\" style={{\n              textTransform: \"uppercase\",\n              marginRight: \"10px\",\n              display: \"block\",\n            }}>\n              {keyword}\n            </Badge>\n          ))}\n        </div>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react'\nimport CSS from 'csstype'\n\ntype Props = {\n  name: string,\n  value: string,\n  secondaryValue?: string | null,\n}\n\nfunction StatBadge (props: Props) {\n  const badgeStyle: CSS.Properties = {\n    paddingTop: '.2vw',\n    border: '1px solid black',\n    width: '5vw',\n    height: '5vw',\n    background: 'black',\n    color: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    borderRadius: '50%',\n  };\n  const nameStyle: CSS.Properties = {\n    fontSize: '1vw',\n    fontWeight: 'bold',\n    lineHeight: '1vw',\n  };\n  const valueStyle: CSS.Properties = {\n    fontSize: '3vw',\n    lineHeight: '3vw',\n    fontWeight: 'bold'\n  }\n  return (\n    <div className='statbadge mb-4' style={badgeStyle}>\n      <div className='name' style={nameStyle}>{props.name}</div>\n      <div className='value' style={valueStyle}>\n        { props.value }\n        { props.secondaryValue\n          ? <small>{props.secondaryValue}</small>\n          : <></>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default StatBadge\n","import React from 'react';\nimport AbilityList from '../AbilityList';\nimport StatBadge from './StatBadge';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\n\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function MovementPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='movement'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"M\" value={`${props.model.stats.movement}`}/>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport AbilityList from '../AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function ScoutingPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='scouting'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasScoutingPhase(model: Model) {\n  return ((model.abilities.filter((x) => (x.phases && x.phases.indexOf(\"scouting\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport AbilityList from '../AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function DeploymentPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='deployment'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasDeploymentPhase(model: Model) {\n  return ((model.abilities.filter((x) => (x.phases && x.phases.indexOf(\"deployment\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport AbilityList from '../AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function InitiativePhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='initiative'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasInitiativePhase(model: Model) {\n  return ((model.abilities.filter((x) => (x.phases && x.phases.indexOf(\"initiative\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport { PsychicPower } from '../../types/KillTeam2018';\nimport { Table } from 'react-bootstrap';\nimport _ from 'lodash'\n\ntype Props = {\n  powers: PsychicPower[],\n};\n\nfunction PsychicPowerList(props: Props) {\n  return props.powers.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Power</th>\n          <th>Warp Charge</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(props.powers, ['name']).map((x: PsychicPower) => (\n          <tr>\n            <td>{x.name}</td>\n            <td>{x.charge}</td>\n            <td>{x.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default PsychicPowerList;\n","import React from 'react';\nimport AbilityList from '../AbilityList';\nimport PsychicPowerList from './PsychicPowerList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function PsychicPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        <PsychicPowerList powers={props.model.psychicPowers}/>\n        <AbilityList abilities={props.model.abilities} phase='psychic'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasPsychicPhase(model: Model) {\n  return (model.psychicPowers.length > 0 || (model.abilities.filter((x) => (x.phases && x.phases.indexOf(\"psychic\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport { Weapon } from '../../types/KillTeam2018';\nimport { Table } from 'react-bootstrap';\nimport _ from 'lodash'\n\ntype Props = {\n  weapons: Weapon[],\n  phase: string,\n  userStrength: number,\n};\n\nfunction WeaponList(props: Props) {\n  const weapons = props.phase === 'shooting'\n    ? props.weapons.filter((x) => (x.type !== \"Melee\"))\n    : props.weapons.filter((x) => (x.type === \"Melee\"))\n\n  return weapons.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Weapon</th>\n          {props.phase === \"shooting\" && <th>Range</th>}\n          {props.phase === \"shooting\" && <th>Type</th>}\n          {props.phase === \"shooting\" && <th>Shots</th>}\n          <th>S</th>\n          <th>AP</th>\n          <th>D</th>\n          <th>Abilities</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(weapons, ['name']).map((x: Weapon) => (\n          <tr>\n            <td style={{\"whiteSpace\": \"nowrap\"}}>{x.name}</td>\n            {props.phase === \"shooting\" && <td>{x.range}&quot;</td>}\n            {props.phase === \"shooting\" && <td style={{\"whiteSpace\": \"nowrap\"}}>{x.type}</td>}\n            {props.phase === \"shooting\" && <td style={{\"whiteSpace\": \"nowrap\"}}>{x.shots}</td>}\n            <td>{x.strength}</td>\n            <td>{x.armourPiercing}</td>\n            <td>{x.damage}</td>\n            <td>{x.abilities}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default WeaponList;\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from '../AbilityList';\nimport WeaponList from './WeaponList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\n\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function ShootingPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        {hasRangedWeapons(props.model) && <WeaponList weapons={props.model.weapons} phase='shooting' userStrength={props.model.stats.strength}/>}\n        <AbilityList abilities={props.model.abilities} phase='shooting'/>\n      </Col>\n      <Col sm='auto'>\n        {hasRangedWeapons(props.model) && <StatBadge name=\"BS\" value={`${props.model.stats.ballistic_skill}`} secondaryValue=\"+\"/>}\n        <StatBadge name=\"T\" value={`${props.model.stats.toughness}`}/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"Sv\" value={`${props.model.stats.save}`} secondaryValue=\"+\"/>\n        { props.model.stats.invulnerable_save\n          ? <StatBadge name=\"Inv\" value={`${props.model.stats.invulnerable_save}`} secondaryValue=\"+\"/>\n          : <></>\n        }\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasRangedWeapons(model: Model) {\n  return !isNaN(model.stats.ballistic_skill) && (model.weapons.filter((x) => (x.type !== \"Melee\")).length > 0)\n}\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from '../AbilityList';\nimport WeaponList from './WeaponList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\n\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function FightPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        <WeaponList weapons={props.model.weapons} phase='fight' userStrength={props.model.stats.strength}/>\n        <AbilityList abilities={props.model.abilities} phase='fight'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"A\" value={`${props.model.stats.attacks}`} secondaryValue={ props.model.stats.additional_attacks ? `+${props.model.stats.additional_attacks}` : null}/>\n        <StatBadge name=\"T\" value={`${props.model.stats.toughness}`}/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"WS\" value={`${props.model.stats.weapon_skill}`} secondaryValue=\"+\"/>\n        <StatBadge name=\"Sv\" value={`${props.model.stats.save}`} secondaryValue=\"+\"/>\n        { props.model.stats.invulnerable_save\n          ? <StatBadge name=\"Inv\" value={`${props.model.stats.invulnerable_save}`} secondaryValue=\"+\"/>\n          : <></>\n        }\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from '../AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\n\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function MoralePhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='morale'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"Ld\" value={`${props.model.stats.leadership}`}/>\n      </Col>\n    </Row>\n  );\n}\n","import React, { MouseEvent } from 'react';\nimport { Button } from 'react-bootstrap';\n\ntype Props = {\n  onClose: (event: MouseEvent<HTMLButtonElement>) => void,\n};\n\nexport function CloseButton(props: Props) {\n  return (<Button variant=\"primary\" className='d-print-none' onClick={props.onClose}>Close</Button>);\n}\n","import React, { MouseEvent } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { Model } from '../../types/KillTeam2018';\nimport { Ability } from '../../types/Ability';\nimport Phase from './Phase';\nimport AbilityList from '../AbilityList';\nimport { NoPhaseDetails } from './NoPhaseDetails';\nimport { MovementPhaseDetails } from './MovementPhaseDetails';\nimport { ScoutingPhaseDetails, hasScoutingPhase } from './ScoutingPhaseDetails';\nimport { DeploymentPhaseDetails, hasDeploymentPhase } from './DeploymentPhaseDetails';\nimport { InitiativePhaseDetails, hasInitiativePhase } from './InitiativePhaseDetails';\nimport { PsychicPhaseDetails, hasPsychicPhase } from './PsychicPhaseDetails';\nimport { ShootingPhaseDetails } from './ShootingPhaseDetails';\nimport { FightPhaseDetails } from './FightPhaseDetails';\nimport { MoralePhaseDetails } from './MoralePhaseDetails';\nimport { CloseButton } from '../CloseButton';\nimport _ from 'lodash'\n\ntype Props = {\n  name: string,\n  models: Model[],\n  forceRules: Ability[],\n  onClose: (event: MouseEvent<HTMLButtonElement>) => void,\n  onSelectionChanged: (uuid: string, value: number) => void,\n};\n\nexport function Roster(props: Props) {\n  // Display models sorted by category and type\n  const sortedModels = _.sortBy(props.models, (x: Model) => ([x.category == null, x.category, x.type]))\n  // Work out which models are actually selected\n  const selectedModels = _.filter(sortedModels, (x: Model) => (x.selected > 0))\n  return <>\n    <h1 style={{\n      background: 'black',\n      color: 'white',\n      padding: '10px',\n      width: '100%',\n      textTransform: 'capitalize',\n      display: 'flex',\n    }}>\n      <Col>\n        {props.name}\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        <small>{_.sumBy(props.models, (model: Model) => (model.selected * model.points))}pts</small>\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        <CloseButton onClose={props.onClose}/>\n      </Col>\n    </h1>\n    <>\n      <AbilityList abilities={props.forceRules} phase=\"\" highlight/>\n      {sortedModels.map((model: Model) => (\n        <NoPhaseDetails model={model} onSelectionChanged={props.onSelectionChanged}/>\n      ))}\n    </>\n    {_.some(selectedModels, hasScoutingPhase) &&\n      <Phase name=\"scouting\">\n        <>\n          <AbilityList abilities={props.forceRules} phase=\"scouting\" highlight/>\n          {selectedModels.map((model: Model) => (\n            hasScoutingPhase(model) &&\n            <ScoutingPhaseDetails model={model}/>\n          ))}\n        </>\n      </Phase>\n    }\n    {_.some(selectedModels, hasDeploymentPhase) &&\n      <Phase name=\"deployment\">\n        <>\n          <AbilityList abilities={props.forceRules} phase=\"deployment\" highlight/>\n          {selectedModels.map((model: Model) => (\n            hasDeploymentPhase(model) &&\n            <DeploymentPhaseDetails model={model}/>\n          ))}\n        </>\n      </Phase>\n    }\n    {_.some(selectedModels, hasInitiativePhase) &&\n      <Phase name=\"initiative\">\n        <>\n          <AbilityList abilities={props.forceRules} phase=\"initiative\" highlight/>\n          {selectedModels.map((model: Model) => (\n            hasInitiativePhase(model) &&\n            <InitiativePhaseDetails model={model}/>\n          ))}\n        </>\n      </Phase>\n    }\n    <Phase name=\"movement\">\n      <>\n        <AbilityList abilities={props.forceRules} phase=\"movement\" highlight/>\n        {selectedModels.map((model: Model) => (\n          <MovementPhaseDetails model={model}/>\n        ))}\n      </>\n    </Phase>\n    {_.some(selectedModels, hasPsychicPhase) &&\n      <Phase name=\"psychic\">\n        <>\n          <AbilityList abilities={props.forceRules} phase=\"psychic\" highlight/>\n          {selectedModels.map((model: Model) => (\n            hasPsychicPhase(model) &&\n            <PsychicPhaseDetails model={model}/>\n          ))}\n        </>\n      </Phase>\n    }\n    <Phase name=\"shooting\">\n      <>\n        <AbilityList abilities={props.forceRules} phase=\"shooting\" highlight />\n        {selectedModels.map((model: Model) => (\n          <ShootingPhaseDetails model={model}/>\n        ))}\n      </>\n    </Phase>\n    <Phase name=\"fight\">\n      <>\n        <AbilityList abilities={props.forceRules} phase=\"fight\" highlight/>\n        {selectedModels.map((model: Model) => (\n          <FightPhaseDetails model={model}/>\n        ))}\n      </>\n    </Phase>\n    <Phase name=\"morale\">\n      <>\n        <AbilityList abilities={props.forceRules} phase=\"morale\" highlight/>\n        {selectedModels.map((model: Model) => (\n          <MoralePhaseDetails model={model}/>\n        ))}\n      </>\n    </Phase>\n  </>\n}\n","import React from 'react'\nimport { Table } from 'react-bootstrap'\nimport { ModelStats } from '../../types/KillTeam2021'\n\nexport function StatsTable(props: ModelStats) {\n  return (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>M</th>\n          <th>APL</th>\n          <th>GA</th>\n          <th>DF</th>\n          <th>SV</th>\n          <th>W</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{props.movement}</td>\n          <td>{props.actionPointLimit}</td>\n          <td>{props.groupActivation}</td>\n          <td>{props.defence}</td>\n          <td>{props.save}+\n          { props.invulnerable_save ? <>{' / '}<strong>{props.invulnerable_save}++</strong></> : null}</td>\n          <td>{props.wounds}</td>\n        </tr>\n      </tbody>\n    </Table>\n  )\n}\n","import React from 'react';\nimport { Weapon } from '../../types/KillTeam2021';\nimport { Table } from 'react-bootstrap';\n\ntype Props = {\n  weapons: Weapon[],\n};\n\nexport function WeaponList(props: Props) {\n  return (\n    <>\n      <Table striped bordered size=\"sm\">\n        <thead>\n          <tr>\n            <th>Weapon</th>\n            <th>Attacks</th>\n            <th>Hit</th>\n            <th>Damage</th>\n            <th>Critical</th>\n            <th>Rules</th>\n            <th>Critical</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.weapons.map((x: Weapon) => (\n            <tr>\n              <td style={{\"whiteSpace\": \"nowrap\"}}>{x.name}</td>\n              <td>{x.attacks}</td>\n              <td>{x.hit}+</td>\n              <td>{x.damage}</td>\n              <td>{x.criticalDamage}</td>\n              <td>{x.specialRules}</td>\n              <td>{x.criticalRules}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n}\n","import React from 'react';\nimport { Badge } from 'react-bootstrap'\nimport { Row, Col } from 'react-bootstrap'\nimport { Card } from 'react-bootstrap'\nimport { Model } from '../../types/KillTeam2021';\nimport { StatsTable } from './StatsTable'\nimport { ModelTitle } from '../ModelTitle'\nimport { WeaponList } from './WeaponList'\nimport AbilityList from '../AbilityList';\n\ntype Props = {\n  model: Model\n};\n\nexport function Datasheet(props: Props) {\n  return (\n    <Row className={props.model.selected > 0 ? \"included\" : \"excluded\"}>\n      <Col>\n        <ModelTitle {...props.model} />\n        <StatsTable {...props.model.stats} />\n        <WeaponList weapons={props.model.weapons} />\n        <AbilityList abilities={props.model.abilities} phase=\"\" />\n        <AbilityList abilities={props.model.rules} phase=\"\" />\n      </Col>\n      <Col sm='2'>\n        <div>\n          {props.model.keywords.map((keyword: string) => (\n            <Badge pill variant=\"secondary\" className=\"mb-2\" style={{\n              textTransform: \"uppercase\",\n              marginRight: \"10px\",\n              display: \"block\",\n            }}>\n              {keyword}\n            </Badge>\n          ))}\n        </div>\n        <Card>\n          <Card.Header>\n            Wound Track\n          </Card.Header>\n          <Card.Body>\n            {\"🩸 \".repeat(props.model.stats.wounds)}\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n","import React, { MouseEvent } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { CloseButton } from '../CloseButton';\nimport { Model } from '../../types/KillTeam2021';\nimport { Datasheet } from './Datasheet';\n\ntype Props = {\n  name: string,\n  models: Model[],\n  onClose: (event: MouseEvent<HTMLButtonElement>) => void,\n};\n\nexport function Roster(props: Props) {\n  return <>\n    <h1 style={{\n      background: 'black',\n      color: 'white',\n      padding: '10px',\n      width: '100%',\n      textTransform: 'capitalize',\n      display: 'flex',\n    }}>\n      <Col>\n        {props.name}\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        <CloseButton onClose={props.onClose}/>\n      </Col>\n    </h1>\n    {props.models.map((model: Model) => (\n        <Datasheet model={model}/>\n    ))}\n  </>\n}\n","import _ from 'lodash'\nimport { Ability } from '../../types/Ability'\n\nconst phasePatterns = {\n  scouting: [\n    / scouting /\n  ],\n  deployment: [\n    / before the first battle round /,\n    / set up /,\n    / cult ambush /\n  ],\n  initiative: [\n    / start of each battle round /,\n    / beginning of each battle round /,\n    / at the beginning of the battle round /\n  ],\n  movement: [\n    / movement phase /,\n    / climbs? /,\n    / normal move /,\n    / advances? /,\n    / charges? /,\n    / falls? back /,\n    / reacts? /,\n    / overwatch /,\n    / retreats? /,\n    / fly /,\n    / after this model has charged /,\n    / from reserves? /,\n    / can move across /,\n    / setup within /\n  ],\n  psychic: [\n    / psychic /,\n    / deny the witch /,\n    / perils of the warp /,\n    / psychich / // handle typo\n  ],\n  shooting: [\n    / shooting phase /,\n    / shots? /,\n    / ballistic skill /,\n    / ranged /,\n    / range characteristic /,\n    / half range /,\n    / long range /,\n    / short range /,\n    / grenades? /,\n    / shoots? /,\n    / shooting /,\n    / fire[sd]+ /,\n    / firing /,\n    / obscured /,\n    / obcured /, // handle typo\n    / order(ed)? /,\n    / voice of command /,\n    / invulnerable save /,\n    / demolition charges? /,\n    / liberator autostubs /,\n    / obscurred /, // handle typo\n    / look out sir! /,\n    / pistol /,\n    / heavy weapons?/,\n    / add [0-9] to saving throws /\n  ],\n  fight: [\n    / fight phase /,\n    / fights? /,\n    / weapon skill /,\n    / attacks characteristics? /,\n    / strength characteristics? /,\n    / piles? in /,\n    / consolidates? /,\n    / melee /,\n    / close combat /,\n    / death to the false emperor /,\n    / additional attacks? /,\n    / invulnerable save /,\n    / look out sir! /,\n    / intervening terrain /,\n    / terrain that is between the two models /,\n    / damage characteristic is [0-9] in a battle round in which this model charged /,\n    / add [0-9] to saving throws /\n  ],\n  morale: [\n    / nerve /,\n    / leadership /\n  ]\n}\n\nconst genericPatterns = [\n  / weapon /,\n  / hit rolls? /,\n  / attack(s|ing)? /,\n  / saves? /,\n  / saving throws? /,\n  / injury rolls? /,\n  / wound rolls? /,\n  / loses? a wound /,\n  / fall(ing)? damage /,\n  / the bearer is taken out of action /,\n  / toughness characteristic /,\n  / suffers? a mortal wound /,\n  / taken out of action /,\n  / this weapon/,\n  / reduced to 0 wounds /\n]\n\nconst antiPatterns = {\n  deployment: [\n    / from reserve /\n  ],\n  movement: [\n    / previous movement phase /,\n    / preceding movement phase /,\n    / if the firing model moved /,\n    / moved during the movement phase /,\n    / round in which it charges or is charged /,\n    / in which it made a successful charge /,\n    / even if it fell back in the movement phase /,\n    / model that can fly /,\n    / as if it were the movement phase /,\n    / stunned /,\n    / penalty for moving /,\n    / as if the model had remained stationary /,\n    / demolition charge /\n  ],\n  psychic: [\n    / after all of this weapon's attacks have been resolved /\n  ],\n  shooting: [\n    / when (it|this model) fires overwatch /,\n    / invulnerable save (against attacks made )?in the fight phase /,\n    / as if it were your shooting phase /,\n    / tactical support turret /,\n    / out of action in the shooting phase /,\n    / mordian /\n  ],\n  fight: [\n    / the ordered model immediately fights /,\n    / shots equal to its attacks characteristic /,\n    / stunned /,\n    / target enemies at [0-9]{1,2}\" or less /,\n    / within half range /,\n    / tactical support turret /\n  ],\n  morale: [\n    / target model's leadership /,\n    / weapon against a model which has a leadership /,\n    / subtract 1 from its leadership / // phantasm grenade effect\n  ]\n}\n\nexport const calculatePhases = (description: string) => {\n  const minDesc = ' ' + description.toLowerCase().replace(/[.,)(]/g, '') + ' '\n  const phases : string[] = []\n  _.forIn(phasePatterns, (patterns, phase) => {\n    if (_.some(patterns, (re) => (re.test(minDesc)))) {\n      phases.push(phase)\n    }\n  })\n  // If there's no fight or shoot yet, test some generic patterns that could be either\n  if (!phases.includes('fight') && !phases.includes('shooting')) {\n    if (_.some(genericPatterns, (re) => (re.test(minDesc)))) {\n      phases.push('fight', 'shooting')\n    }\n  }\n  // Remove phases for some patterns that get picked up incorrectly\n  _.forIn(antiPatterns, (patterns, phase) => {\n    if (_.some(patterns, (re) => (re.test(minDesc)))) {\n      _.remove(phases, (p) => (p === phase))\n    }\n  })\n  // OK, done\n  return phases\n}\n\nexport const parseAdditionalAttacks = (description: string) => {\n  const patterns = [\n    /Add ([1-9]{1}) to this model's Attacks characteristic/,\n    / ([1-9]|an|one|two) additional attack/,\n    /(one) \\(and only one\\) attack with this weapon./\n  ]\n  const antiPatterns = [\n    /if a model/,\n    /if the bearer/,\n    /unless/\n  ]\n  return _.sum(_.map(patterns, (pattern) => {\n    const match = description.match(pattern)\n    if (match) {\n      if (_.some(antiPatterns, (re) => (re.test(description)))) {\n        return 0\n      }\n      if (match[1] === 'an' || match[1] === 'one') return 1\n      if (match[1] === 'two') return 2\n      return parseInt(match[1] || match[2])\n    }\n    return 0\n  }))\n}\n\nexport const invulnerableSave = (abilities: Ability[]) => {\n  const patterns = [\n    /models with this ability have a ([1-6]{1})\\+ invulnerable save/,\n    /has a ([1-6]{1})\\+ invulnerable save($|\\.|,| and| instead of)/,\n    /has an invulnerable save of ([1-6]{1})\\+/\n  ]\n  const saves = _.map(abilities, (a) => {\n    return _.min(_.map(patterns, (pattern) => {\n      const match = a.description.match(pattern)\n      if (match) {\n        return parseInt(match[1])\n      }\n      return null\n    }))\n  })\n  return _.min(saves)\n}\n","import { v4 as uuidv4 } from 'uuid'\nimport _ from 'lodash'\nimport hash from 'node-object-hash'\nimport * as XPath from 'xpath-ts'\nimport { parseAdditionalAttacks, calculatePhases, invulnerableSave } from './Abilities'\n\n// useNamespaces is NOT a React hook, so:\n// eslint-disable-next-line\nconst xpath = XPath.useNamespaces({ roster: 'http://www.battlescribe.net/schema/rosterSchema' })\n\nconst stat = (name, model) => {\n  const nodes = xpath(`roster:profiles/roster:profile[@typeName='Model']//roster:characteristic[@name='${name}']`, model)\n  if (nodes.length > 0) {\n    return parseInt(nodes[0].childNodes[0].nodeValue)\n  } else { return '' }\n}\n\nconst weaponStat = (name, weapon, numeric) => {\n  const nodes = xpath(`roster:characteristics/roster:characteristic[@name='${name}']`, weapon)\n  if (nodes.length > 0) {\n    return numeric ? parseInt(nodes[0].childNodes[0].nodeValue) : nodes[0].childNodes[0].nodeValue\n  } else { return '' }\n}\n\nconst points = (model) => {\n  const costNode = xpath('.//roster:costs/roster:cost[@name=\\'pts\\']', model)\n  return _.sumBy(costNode, (x) => parseInt(x.getAttribute('value')))\n}\n\nconst parseForceRule = (rule) => {\n  const description = xpath('roster:description', rule)[0].childNodes[0].nodeValue\n  return {\n    name: rule.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parseAbility = (ability) => {\n  const description = xpath(\".//roster:characteristic[@name='Description']\", ability)[0].childNodes[0].nodeValue\n  return {\n    name: ability.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parseWeapon = (weapon, userStrength) => {\n  let strength = weaponStat('S', weapon, false)\n  if (strength === 'User') {\n    strength = userStrength\n  }\n  let match = /x([0-9]+)/i.exec(strength)\n  if (match) {\n    strength = userStrength * parseInt(match[1])\n  }\n  match = /\\+([0-9]+)/i.exec(strength)\n  if (match) {\n    strength = userStrength + parseInt(match[1])\n  }\n  let weaponType = weaponStat('Type', weapon, false)\n  if (weaponType !== 'Melee') { weaponType = weaponType.split(' ').slice(0, -1).join(' ') }\n  return {\n    name: weapon.getAttribute('name'),\n    range: weaponStat('Range', weapon, true),\n    type: weaponType,\n    shots: weaponStat('Type', weapon, false).split(' ').slice(-1)[0],\n    strength,\n    armourPiercing: weaponStat('AP', weapon, true),\n    damage: weaponStat('D', weapon, false),\n    abilities: weaponStat('Abilities', weapon, false)\n  }\n}\n\nconst parseWargear = (wargear) => {\n  const description = xpath(\".//roster:characteristic[@name='Ability']\", wargear)[0].childNodes[0].nodeValue\n  return {\n    name: wargear.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parsePsychicPower = (power) => {\n  let description = xpath(\".//roster:characteristic[@name='Psychic Power']\", power)[0].childNodes[0].nodeValue\n  const warpChargeDescription = description.match(/warp charge value of ([0-9]+)\\.(.*)/)\n  let charge = null\n  if (warpChargeDescription.length > 2) {\n    charge = parseInt(warpChargeDescription[1])\n    description = warpChargeDescription[2]\n  }\n  return {\n    name: power.getAttribute('name'),\n    charge,\n    description\n  }\n}\n\nexport const additionalAttacks = (weapons, abilities) => {\n  const descriptions = _.map(weapons, (w) => w.abilities).concat(_.map(abilities, (a) => a.description))\n  const attacks = _.map(descriptions, (d) => parseAdditionalAttacks(d))\n  return _.sum(attacks)\n}\n\nconst parseModel = (model) => {\n  const wargear = xpath(\".//roster:profile[@typeName='Wargear']\", model).map(parseWargear)\n  const specialismSelection = xpath(\"roster:selections/roster:selection[roster:selections/roster:selection/roster:profiles/roster:profile/@typeName='Ability']\", model)\n  const abilities = xpath(\".//roster:profile[@typeName='Ability']\", model).map(parseAbility).concat(wargear)\n  const stats = {\n    movement: stat('M', model),\n    weapon_skill: stat('WS', model),\n    ballistic_skill: stat('BS', model),\n    strength: stat('S', model),\n    toughness: stat('T', model),\n    wounds: stat('W', model),\n    attacks: stat('A', model),\n    leadership: stat('Ld', model),\n    save: stat('Sv', model),\n    invulnerable_save: invulnerableSave(abilities)\n  }\n  const closeCombatWeapon = {\n    name: 'Bare fists',\n    range: '-',\n    type: 'Melee',\n    strength: stats.strength,\n    armourPiercing: 0,\n    damage: 1,\n    abilities: 'Default close combat weapon available to all models'\n  }\n  const weapons = xpath(\".//roster:profile[@typeName='Weapon']\", model).map((x) => (parseWeapon(x, stats.strength))).concat([closeCombatWeapon])\n  stats.additional_attacks = additionalAttacks(weapons, abilities)\n  const psychicPowers = xpath(\"roster:selections/roster:selection/roster:profiles/roster:profile[@typeName='Psychic Power']\", model).map(parsePsychicPower)\n  const category = xpath(\"roster:categories/roster:category[@primary='true']\", model)[0].getAttribute('name')\n  const faction = xpath(\"roster:categories/roster:category[@primary='false' and starts-with(@name,'Faction: ')]\", model)\n  const keywords = xpath(\"roster:categories/roster:category[@primary='false' and not(starts-with(@name,'Faction: '))]\", model).map((x) => x.getAttribute('name'))\n  _.remove(keywords, (x) => (x === 'Model'))\n  const details = {\n    name: model.getAttribute('customName'),\n    type: model.getAttribute('name'),\n    category: category === 'Non-specialist' ? null : category,\n    stats,\n    abilities,\n    weapons,\n    wargear,\n    psychicPowers,\n    specialism: specialismSelection.length > 0 ? specialismSelection[0].getAttribute('name') : null,\n    faction: faction.length > 0 ? faction[0].getAttribute('name').split(': ', 2)[1] : null,\n    keywords,\n    points: points(model)\n  }\n  return { ...details, hash: hash([]).hash(details) }\n}\n\nexport const parseBattlescribeXML = (doc) => {\n  const models = []\n  const name = xpath('/roster:roster', doc)[0].getAttribute('name')\n  const forceRules = xpath('//roster:force/roster:rules/roster:rule', doc).map(parseForceRule)\n  for (const category of xpath('//roster:force/roster:categories/roster:category', doc)) {\n    const categoryId = category.getAttribute('entryId')\n    for (const model of xpath(`//roster:selection[@type='model' and roster:categories/roster:category/@entryId='${categoryId}']`, doc)) {\n      models.push(parseModel(model))\n    }\n  }\n  const uniqueModels = _.groupBy(models, (m) => m.hash)\n  return {\n    system: 'KillTeam2018',\n    name,\n    forceRules,\n    models: _.map(uniqueModels, (model) => ({\n      ...model[0],\n      uuid: uuidv4(),\n      count: model.length,\n      selected: model.length\n    }))\n  }\n}\n","import { v4 as uuidv4 } from 'uuid'\nimport _ from 'lodash'\nimport hash from 'node-object-hash'\nimport * as XPath from 'xpath-ts'\nimport { Roster, Model, Weapon } from '../../types/KillTeam2021';\nimport { Ability } from '../../types/Ability';\n\n// useNamespaces is NOT a React hook, so:\n// eslint-disable-next-line\nconst xpSelect = XPath.useNamespaces({ bs: 'http://www.battlescribe.net/schema/rosterSchema' })\n\nconst stat = (name: string, model: Element) : number => {\n  const node = xpSelect(`bs:profiles/bs:profile[@typeName='Operative']//bs:characteristic[@name='${name}']/text()`, model, true)\n  if (node) {\n    return parseInt(node.toString())\n  } else { return 0 }\n}\n\nconst parseWeapon = (weapon : Node) : Weapon => {\n  return {\n    name: xpSelect('string(@name)', weapon, true).toString(),\n    melee: xpSelect('string(@name)', weapon, true).toString().startsWith(\"⚔\"),\n    attacks: parseInt(xpSelect(\".//bs:characteristic[@name='A']/text()\", weapon, true).toString()),\n    hit: parseInt(xpSelect(\".//bs:characteristic[@name='WS/BS']/text()\", weapon, true).toString()),\n    damage: parseInt(xpSelect(\".//bs:characteristic[@name='D']/text()\", weapon, true).toString().split('/')[0]),\n    specialRules: (xpSelect(\".//bs:characteristic[@name='SR']/text()\", weapon, true) || \"-\").toString(),\n    criticalDamage: parseInt(xpSelect(\".//bs:characteristic[@name='D']/text()\", weapon, true).toString().split('/')[1]),\n    criticalRules: (xpSelect(\".//bs:characteristic[@name='!']/text()\", weapon, true) || \"-\").toString(),\n  }\n}\n\nconst parseAbility = (ability : Node) : Ability => {\n  return {\n    name: xpSelect('string(@name)', ability, true).toString(),\n    description: (xpSelect(\".//bs:characteristic[@name='Ability']/text()\", ability, true) || \"-\").toString(),\n    phases: []\n  }\n}\n\nconst parseRule = (rule : Node) : Ability => {\n  return {\n    name: xpSelect('string(@name)', rule, true).toString(),\n    description: (xpSelect(\".//bs:description/text()\", rule, true) || \"-\").toString(),\n    phases: []\n  }\n}\n\nconst parseModel = (model : Element) : Model => {\n  const details = {\n    name: xpSelect('string(@customName)', model, true).toString(),\n    type: xpSelect('string(@name)', model, true).toString(),\n    stats: {\n      movement: stat(\"M\", model) + \"⬤\",\n      actionPointLimit: stat(\"APL\", model),\n      groupActivation: stat(\"GA\", model),\n      defence: stat(\"DF\", model),\n      save: stat(\"SV\", model),\n      invulnerable_save: null,\n      wounds: stat(\"W\", model),\n    },\n    weapons: (xpSelect(\".//bs:profile[@typeName='Weapons']\", model) as Node[]).map(parseWeapon),\n    abilities: (xpSelect(\".//bs:profile[@typeName='Abilities']\", model) as Node[]).map(parseAbility),\n    rules: (xpSelect(\".//bs:rules/bs:rule\", model) as Node[]).map(parseRule),\n    keywords: (xpSelect(\"bs:categories/bs:category[@primary='false']/@name\", model) as Node[]).map((x) => x.textContent || ''),\n    uuid: \"\",\n    count: 0,\n    selected: 0,\n  };\n  return { ...details, hash: hash().hash(details) }\n}\n\nexport const parseBattlescribeXML = (doc : Document) : Roster => {\n  const models = []\n  const name = xpSelect('string(/bs:roster/@name)', doc, true).toString()\n  for (const model of xpSelect('//bs:selection[@type=\\'model\\']', doc) as Element[]) {\n    models.push(parseModel(model))\n  }\n  const uniqueModels = _.groupBy(models, (m) => m.hash)\n  return {\n    system: \"KillTeam2021\",\n    name,\n    models: _.map(uniqueModels, (model) => ({\n      ...model[0],\n      uuid: uuidv4(),\n      count: model.length,\n      selected: model.length\n    }))\n  }\n}\n","import { parseBattlescribeXML as parseKillTeam2018 } from './parsers/KillTeam2018/BattlescribeParser'\nimport { parseBattlescribeXML as parseKillTeam2021 } from './parsers/KillTeam2021/BattlescribeParser'\nimport JSZip from 'jszip'\nimport { DOMParserImpl } from 'xmldom-ts'\nimport * as XPath from 'xpath-ts'\nimport { Roster as Roster2018 } from './types/KillTeam2018';\nimport { Roster as Roster2021 } from './types/KillTeam2021';\n\n// useNamespaces is NOT a React hook, so:\n// eslint-disable-next-line\nconst xpSelect = XPath.useNamespaces({ bs: 'http://www.battlescribe.net/schema/rosterSchema' })\n\nconst unzip = async (file: string) : Promise<string> => {\n  if (file.charAt(0) !== 'P') {\n    return file\n  } else {\n    const jszip = new JSZip()\n    const zip = await jszip.loadAsync(file)\n    return zip.file(/[^/]+\\.ros/)[0].async('string') // Get roster files that are in the root\n  }\n}\n\nconst parseFile = (file: string) : Roster2018 | Roster2021 => {\n  const doc = new DOMParserImpl().parseFromString(file)\n  const gameSystemId = (xpSelect('/bs:roster/@gameSystemId', doc, true) as Node).nodeValue\n  switch (gameSystemId) {\n    case 'a467-5f42-d24c-6e5b':\n      return parseKillTeam2018(doc) as Roster2018\n    case '3b7e-7dab-f79f-2e74':\n      return parseKillTeam2021(doc)\n    default:\n      throw new Error('Unsupported game system!')\n  }\n}\n\nexport const loadFile = async (file: File) : Promise<Roster2018 | Roster2021> => {\n  const reader = new FileReader()\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort()\n      reject(new DOMException('Problem parsing input file.'))\n    }\n    reader.onloadend = async () => {\n      const content = reader.result as string\n      const file = await unzip(content)\n      resolve(parseFile(file))\n    }\n    reader.readAsBinaryString(file)\n  })\n}\n\nexport const loadFiles = (files: File[]) : Promise<Roster2018 | Roster2021> => {\n  return loadFile(files[0])\n}\n","import React, { useState } from 'react'\nimport Homepage from './components/Homepage'\nimport { Roster as RosterView2018 } from './components/KillTeam2018/Roster'\nimport { Roster as RosterView2021 } from './components/KillTeam2021/Roster'\nimport { Container } from 'react-bootstrap'\nimport { loadFiles } from './FileLoader'\nimport { Roster as Roster2018 } from './types/KillTeam2018'\nimport { Roster as Roster2021 } from './types/KillTeam2021'\n\nexport function App() {\n\n  const [roster, setRoster] = useState<Roster2018|Roster2021|null>(null)\n\n  const handleUpload = async (acceptedFiles: File[]) => {\n    const r = await loadFiles(acceptedFiles);\n    setRoster(r)\n  }\n\n  const handleClose = () => {\n    setRoster(null)\n  }\n\n  const handleSelectionChanged = (uuid: string, selectedCount: number) => {\n    if (roster && isRosterKT18(roster)) {\n      setRoster(Object.assign({models: roster.models.map((model) => (\n        model.uuid !== uuid\n          ? model\n          : Object.assign(\n              model,\n              { selected: selectedCount }\n            )\n      ))}, roster))\n    }\n  }\n\n  const isRosterKT18 = (roster: any): roster is Roster2018 => (roster.system === \"KillTeam2018\")\n  const isRosterKT21 = (roster: any): roster is Roster2021 => (roster.system === \"KillTeam2021\")\n\n  return (\n    <Container fluid='lg'>\n      {roster === null ? <Homepage onUpload={handleUpload} /> : <></>}\n      {roster && isRosterKT18(roster) ? <RosterView2018 name={roster.name} models={roster.models} onClose={handleClose} forceRules={roster.forceRules} onSelectionChanged={handleSelectionChanged} /> : <></>}\n      {roster && isRosterKT21(roster) ? <RosterView2021 name={roster.name} models={roster.models} onClose={handleClose} /> : <></>}\n    </Container>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport * as Sentry from \"@sentry/react\";\n// import { Integrations } from \"@sentry/tracing\";\n\nSentry.init({\n  dsn: \"https://6fe3e632b45a44c086068e13f3b1a783@o464596.ingest.sentry.io/5473956\",\n  // integrations: [\n  //   new Integrations.BrowserTracing(),\n  // ],\n  // tracesSampleRate: 0.0,\n});\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// Enable offline use with a service worker\n// See https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.register()\n"],"sourceRoot":""}