{"version":3,"sources":["components/Intro.tsx","components/Homepage.tsx","components/KillTeam2018/Phase.tsx","components/KillTeam2018/AbilityList.tsx","components/KillTeam2018/StatsTable.tsx","components/KillTeam2018/SpecialistIcon.tsx","components/KillTeam2018/CategoryIcon.tsx","components/ModelTitle.tsx","components/KeywordList.tsx","components/KillTeam2018/NoPhaseDetails.tsx","components/StatBadge.tsx","components/KillTeam2018/MovementPhaseDetails.tsx","components/KillTeam2018/ScoutingPhaseDetails.tsx","components/KillTeam2018/DeploymentPhaseDetails.tsx","components/KillTeam2018/InitiativePhaseDetails.tsx","components/KillTeam2018/PsychicPowerList.tsx","components/KillTeam2018/PsychicPhaseDetails.tsx","components/KillTeam2018/WeaponList.tsx","components/KillTeam2018/ShootingPhaseDetails.tsx","components/KillTeam2018/FightPhaseDetails.tsx","components/KillTeam2018/MoralePhaseDetails.tsx","components/CloseButton.tsx","components/KillTeam2018/Roster.tsx","components/KillTeam2021/WeaponList.tsx","components/KillTeam2021/EquipmentList.tsx","components/KillTeam2021/ActionList.tsx","components/KillTeam2021/WoundTrack.tsx","components/KillTeam2021/AbilityList.tsx","components/KillTeam2021/Datasheet.tsx","components/KillTeam2021/RuleList.tsx","components/KillTeam2021/Roster.tsx","parsers/KillTeam2018/Abilities.ts","parsers/KillTeam2018/BattlescribeParser.js","parsers/KillTeam2021/BattlescribeParser.ts","FileLoader.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["Intro","Jumbotron","className","Homepage","props","Row","Col","Card","Header","as","Body","style","minHeight","Text","href","onDrop","onUpload","accept","getRootProps","getInputProps","Alert","variant","textAlign","process","Phase","pageBreakAfter","background","color","padding","width","display","name","flexGrow","note","children","AbilityList","abilities","phase","filter","x","phases","indexOf","length","highlight","Table","striped","bordered","size","_","sortBy","map","description","StatsTable","movement","weapon_skill","isNaN","ballistic_skill","strength","toughness","wounds","attacks","additional_attacks","leadership","save","invulnerable_save","points","SpecialistIcon","specialism","height","marginRight","alt","src","toLowerCase","CategoryIcon","category","ModelTitle","titleComponents","without","type","undefined","justifyContent","selected","join","slice","showSelector","value","slideStop","onSelectionChanged","uuid","target","step","max","count","min","KeywordList","faction","Badge","pill","textTransform","keywords","keyword","NoPhaseDetails","model","weapons","w","concat","wargear","stats","StatBadge","paddingTop","border","flexDirection","borderRadius","fontSize","fontWeight","lineHeight","secondaryValue","MovementPhaseDetails","sm","ScoutingPhaseDetails","hasScoutingPhase","DeploymentPhaseDetails","hasDeploymentPhase","InitiativePhaseDetails","hasInitiativePhase","PsychicPowerList","powers","charge","PsychicPhaseDetails","psychicPowers","hasPsychicPhase","WeaponList","range","shots","armourPiercing","damage","ShootingPhaseDetails","hasRangedWeapons","userStrength","FightPhaseDetails","MoralePhaseDetails","CloseButton","Button","onClick","onClose","Roster","sortedModels","models","selectedModels","sumBy","forceRules","some","hit","criticalDamage","specialRules","criticalRules","EquipmentList","equipment","bg","cost","ActionList","actions","WoundTrack","title","repeat","Datasheet","i","groupActivation","defence","actionPointLimit","RuleList","rules","headingStyle","breakBefore","uniqBy","flatten","m","phasePatterns","scouting","deployment","initiative","psychic","shooting","fight","morale","genericPatterns","antiPatterns","calculatePhases","minDesc","replace","forIn","patterns","re","test","push","includes","remove","p","invulnerableSave","saves","a","pattern","match","parseInt","xpath","XPath","roster","stat","nodes","childNodes","nodeValue","weaponStat","weapon","numeric","costNode","getAttribute","parseForceRule","rule","parseAbility","ability","parseWargear","parsePsychicPower","power","warpChargeDescription","additionalAttacks","descriptions","d","sum","parseAdditionalAttacks","parseModel","specialismSelection","closeCombatWeapon","exec","weaponType","split","parseWeapon","details","hash","xpSelect","bs","node","toString","melee","startsWith","parseAction","action","parseEquipment","parseRule","factionKeywords","allKeywords","textContent","intersection","pop","unzip","file","charAt","jszip","JSZip","loadAsync","zip","async","parseFile","doc","DOMParserImpl","parseFromString","categoryId","uniqueModels","groupBy","system","uuidv4","parseKillTeam2018","parseKillTeam2021","Error","loadFile","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onloadend","content","result","readAsBinaryString","App","useState","setRoster","handleUpload","acceptedFiles","r","handleClose","isRosterKT18","Container","fluid","selectedCount","Object","assign","isRosterKT21","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Sentry","dsn","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.79a64846.chunk.js","sourcesContent":["import React from 'react';\nimport { Jumbotron } from 'react-bootstrap'\n\nfunction Intro() {\n  return <Jumbotron>\n    <h1>\n      Dataslate\n    </h1>\n    <p className='lead'>\n      Easy-to-use datasheets for Warhammer 40,000: Kill Team\n    </p>\n    <ul>\n      <li>All the info you need, when you need it</li>\n      <li>Stats and abilities organised by phase</li>\n      <li>No wasted space for identical models</li>\n      <li>Designed for print or screen</li>\n      <li>Clear, uncluttered layout for easy reference</li>\n    </ul>\n  </Jumbotron>\n}\n\nexport default Intro;\n","import React from 'react';\nimport Dropzone from 'react-dropzone'\nimport type { DropzoneOptions } from 'react-dropzone'\nimport Intro from './Intro'\nimport { Row, Col, Alert, Card } from 'react-bootstrap'\n\ntype Props = {\n  onUpload: DropzoneOptions[\"onDrop\"],\n}\n\nfunction Homepage(props: Props) {\n  return <>\n    <Intro />\n    <Row>\n      <Col>\n        <Card>\n          <Card.Header as=\"h3\">Step 1</Card.Header>\n          <Card.Body style={{minHeight: '12em'}}>\n            <Card.Text>\n              Build your force in{' '}\n              <a href='https://battlescribe.net/'>Battlescribe</a>.\n            </Card.Text>\n            <Card.Text>\n              Currently only Kill Team rosters are supported.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col>\n        <Card>\n          <Card.Header as=\"h3\">Step 2</Card.Header>\n          <Card.Body style={{minHeight: '12em'}}>\n            <Dropzone onDrop={props.onUpload} accept='.ros,.rosz'>\n              {({ getRootProps, getInputProps }) => (\n                <Alert variant='primary' {...getRootProps()} style={{ textAlign: 'center' }}>\n                  <input {...getInputProps()} />\n                  <p>Drop your roster file here, or click to select one.</p>\n                  <p><em>(*.rosz and *.ros accepted)</em></p>\n                </Alert>\n              )}\n            </Dropzone>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col>\n        <Card>\n          <Card.Header as=\"h3\">Step 3</Card.Header>\n          <Card.Body style={{minHeight: '12em'}}>\n            <Card.Text>\n              Print your datasheets out, and never forget an ability again!\n            </Card.Text>\n            <Card.Text>\n              Prepare to dominate your foes!\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    <footer>\n      Built with <a href='https://reactjs.org/'>React</a> and <a href='https://getbootstrap.com'>Bootstrap</a>.\n      Icons courtesy of <a href='https://killteam.app/'>Companion for Kill Team</a>.\n      Released as <a href='https://github.com/floppy/dataslate'>Open Source</a>,\n      report problems <a href='https://github.com/floppy/dataslate/issues/new'>on GitHub</a>.\n      Version: <em><a {...{href: `https://github.com/floppy/dataslate/tree/${process.env.REACT_APP_GIT_SHA}`}} >{process.env.REACT_APP_GIT_SHA}</a></em>\n    </footer>\n  </>\n}\n\nexport default Homepage;\n","import React from 'react';\nimport { Col } from 'react-bootstrap'\n\ntype Props = {\n  name: string,\n  note?: string,\n  children: React.ReactNode,\n};\n\nfunction Phase(props: Props) {\n  return <div style={{\n    pageBreakAfter: 'always',\n  }}>\n    <h2 style={{\n      background: '#FF6F2D',\n      color: 'white',\n      padding: '10px',\n      width: '100%',\n      display: 'flex',\n    }}>\n      <Col>\n        {props.name} Phase\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        {props.note && (\n          <small>{props.note}</small>\n        )}\n      </Col>\n    </h2>\n    {props.children}\n  </div>\n}\n\nexport default Phase;\n","import React from 'react';\nimport { Ability } from '../../types/Ability';\nimport { Table } from 'react-bootstrap';\nimport _ from 'lodash'\n\ntype Props = {\n  abilities: Ability[],\n  phase: string,\n  highlight?: boolean,\n};\n\nfunction AbilityList(props: Props) {\n  const abilities = props.phase ?\n    props.abilities.filter((x) => (x.phases && x.phases.indexOf(props.phase) >= 0)) :\n    props.abilities.filter((x) => (x.phases && x.phases.length === 0))\n  const variant = props.highlight ? \"primary\" : \"\";\n\n  return abilities.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\" variant={variant}>\n      <thead>\n        <tr>\n          <th>Ability</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(abilities, ['name']).map((x: Ability) => (\n          <tr>\n            <td>{x.name}</td>\n            <td>{x.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default AbilityList;\n","import React from 'react'\nimport { Table } from 'react-bootstrap'\n\ntype Props = {\n  movement: number,\n  weapon_skill: number,\n  ballistic_skill: number,\n  strength: number,\n  toughness: number,\n  wounds: number,\n  attacks: number,\n  additional_attacks: number,\n  leadership: number,\n  save: number,\n  invulnerable_save: number,\n  points: number,\n}\n\nfunction StatsTable (props: Props) {\n  return (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>M</th>\n          <th>WS</th>\n          <th>BS</th>\n          <th>S</th>\n          <th>T</th>\n          <th>W</th>\n          <th>A</th>\n          <th>Ld</th>\n          <th>Sv</th>\n          <th>Points</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{props.movement}&quot;</td>\n          <td>{props.weapon_skill}+</td>\n          <td>{isNaN(props.ballistic_skill) ? '-' : props.ballistic_skill+\"+\"}</td>\n          <td>{props.strength}</td>\n          <td>{props.toughness}</td>\n          <td>{props.wounds}</td>\n          <td>{props.attacks}\n          { props.additional_attacks ? <strong>{' +'}{props.additional_attacks}</strong> : null}\n          </td>\n          <td>{props.leadership}</td>\n          <td>{props.save}+\n          { props.invulnerable_save ? <>{' / '}<strong>{props.invulnerable_save}++</strong></> : null}</td>\n          <td>{props.points}</td>\n        </tr>\n      </tbody>\n    </Table>\n  )\n}\n\nexport default StatsTable\n","import React from 'react';\n\ntype Props = {\n  specialism: string;\n};\n\nexport function SpecialistIcon(props: Props) {\n  return (props.specialism\n    ? <img className='specialism' style={{height: '1em', marginRight: '10px'}} alt={props.specialism} src={`/icons/${props.specialism.toLowerCase()}.svg`}/>\n    : <></>\n  );\n}\n","import React from 'react';\n\ntype Props = {\n  category: string;\n};\n\nexport function CategoryIcon(props: Props) {\n  return (props.category && props.category.toLowerCase() !== 'specialist' && props.category.toLowerCase() !== 'specialist retainer'\n    ? <img className='category' style={{height: '1em', marginRight: '10px'}} alt={props.category} src={`/icons/${props.category.toLowerCase()}.svg`}/>\n    : <></>\n);\n}\n","import React from 'react';\nimport { SpecialistIcon } from './KillTeam2018/SpecialistIcon';\nimport { CategoryIcon } from './KillTeam2018/CategoryIcon';\nimport { Col } from 'react-bootstrap'\nimport ReactBootstrapSlider from 'react-bootstrap-slider';\nimport _ from 'lodash'\n\ntype Props = {\n  showSelector?: boolean,\n  onSelectionChanged?: (uuid: string, value: number) => void,\n  selected: number,\n  count: number,\n  uuid: string,\n  name: string,\n  type: string,\n  category?: string,\n  specialism?: string,\n};\n\nexport function ModelTitle(props: Props) {\n  const headingStyle = {\n    background: 'black',\n    color: 'white',\n    padding: '5px',\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-between',\n  }\n  const titleComponents = _.without([\n    props.type,\n    (props.category === \"Specialist\" || props.category === \"Specialist Retainer\"\n      ? props.specialism\n      : props.category)\n  ],null, undefined, \"\");\n  return (\n    <h3 style={headingStyle}>\n      <Col>\n        {props.category && props.specialism && (props.category === \"Specialist\" || props.category === \"Specialist Retainer\") && <SpecialistIcon specialism={props.specialism} />}\n        {props.category && <CategoryIcon category={props.category} />}\n        {props.selected > 1 && (\n          <small>{props.selected} x </small>\n        )}\n        <strong>{titleComponents[0]} </strong>\n        <small>{_.join(_.slice(titleComponents,1), \", \")}</small>\n      </Col>\n      {props.showSelector && (\n        <Col style={{flexGrow: 0}}>\n          <ReactBootstrapSlider\n            value={props.selected}\n            slideStop={(x: any) => props.onSelectionChanged && props.onSelectionChanged(props.uuid, x.target.value)}\n            step={1}\n            max={props.count}\n            min={0} />\n        </Col>\n      )}\n    </h3>\n  );\n}\n","import React from 'react';\nimport { Badge } from 'react-bootstrap'\n\ntype Props = {\n  faction: string | null,\n  keywords: string[]\n};\n\nexport function KeywordList(props: Props) {\n  return <div style={{background: \"rgba(0, 0, 0, 0.125)\", padding: \"5px 10px 0px 10px\"}}>\n    { props.faction ?\n      <Badge pill variant=\"primary\" className=\"mb-2\" style={{\n        textTransform: \"uppercase\",\n        marginRight: \"10px\",\n      }}>\n        {props.faction}\n      </Badge> : <></>\n    }\n    {props.keywords.map((keyword: string) => (\n      <Badge pill variant=\"secondary\" className=\"mb-2\" style={{\n        textTransform: \"uppercase\",\n        marginRight: \"10px\",\n      }}>\n        {keyword}\n      </Badge>\n    ))}\n  </div>\n}\n","import React from 'react';\nimport StatsTable from './StatsTable';\nimport AbilityList from './AbilityList';\nimport { Card } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\nimport { KeywordList } from '../KeywordList';\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n  onSelectionChanged: (uuid: string, value: number) => void,\n};\n\nexport function NoPhaseDetails(props: Props) {\n  return (\n    <Card className={props.model.selected > 0 ? \"included\" : \"excluded\"}>\n      <ModelTitle {...props.model} showSelector onSelectionChanged={props.onSelectionChanged} />\n      <Card.Body>\n        {props.model.category === \"Commander\" && <div>Commander specialism: <strong>{props.model.specialism}</strong></div>}\n        <p>{props.model.weapons.map((w) => (w.name)).concat(props.model.wargear.map((w) => (w.name))).join(\", \")}</p>\n        <StatsTable {...props.model.stats} points={props.model.points} />\n        <AbilityList abilities={props.model.abilities} phase=''/>\n      </Card.Body>\n      <KeywordList faction={props.model.faction} keywords={props.model.keywords} />\n    </Card>\n  );\n}\n","import React from 'react'\nimport CSS from 'csstype'\n\ntype Props = {\n  name: string,\n  value: string,\n  secondaryValue?: string | null,\n}\n\nexport function StatBadge (props: Props) {\n  const badgeStyle: CSS.Properties = {\n    paddingTop: '.2vw',\n    border: '1px solid black',\n    width: '5vw',\n    height: '5vw',\n    background: 'black',\n    color: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    borderRadius: '25%',\n  };\n  const nameStyle: CSS.Properties = {\n    fontSize: '1vw',\n    fontWeight: 'bold',\n    lineHeight: '1vw',\n    color: '#FF6F2D',\n  };\n  const valueStyle: CSS.Properties = {\n    fontSize: '2.5vw',\n    lineHeight: '3vw',\n    fontWeight: 'bold'\n  }\n  return (\n    <div className='statbadge mb-4' style={badgeStyle}>\n      <div className='name' style={nameStyle}>{props.name}</div>\n      <div className='value' style={valueStyle}>\n        { props.value }\n        { props.secondaryValue\n          ? <small>{props.secondaryValue}</small>\n          : <></>\n        }\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport { StatBadge } from '../StatBadge';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\n\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function MovementPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='movement'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"M\" value={`${props.model.stats.movement}`}/>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function ScoutingPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='scouting'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasScoutingPhase(model: Model) {\n  return ((model.abilities.filter((x) => (x.phases && x.phases.indexOf(\"scouting\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function DeploymentPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='deployment'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasDeploymentPhase(model: Model) {\n  return ((model.abilities.filter((x) => (x.phases && x.phases.indexOf(\"deployment\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function InitiativePhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='initiative'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasInitiativePhase(model: Model) {\n  return ((model.abilities.filter((x) => (x.phases && x.phases.indexOf(\"initiative\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport { PsychicPower } from '../../types/KillTeam2018';\nimport { Table } from 'react-bootstrap';\nimport _ from 'lodash'\n\ntype Props = {\n  powers: PsychicPower[],\n};\n\nfunction PsychicPowerList(props: Props) {\n  return props.powers.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Power</th>\n          <th>Warp Charge</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(props.powers, ['name']).map((x: PsychicPower) => (\n          <tr>\n            <td>{x.name}</td>\n            <td>{x.charge}</td>\n            <td>{x.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default PsychicPowerList;\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport PsychicPowerList from './PsychicPowerList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function PsychicPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        <PsychicPowerList powers={props.model.psychicPowers}/>\n        <AbilityList abilities={props.model.abilities} phase='psychic'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasPsychicPhase(model: Model) {\n  return (model.psychicPowers.length > 0 || (model.abilities.filter((x) => (x.phases && x.phases.indexOf(\"psychic\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport { Weapon } from '../../types/KillTeam2018';\nimport { Table } from 'react-bootstrap';\nimport _ from 'lodash'\n\ntype Props = {\n  weapons: Weapon[],\n  phase: string,\n  userStrength: number,\n};\n\nfunction WeaponList(props: Props) {\n  const weapons = props.phase === 'shooting'\n    ? props.weapons.filter((x) => (x.type !== \"Melee\"))\n    : props.weapons.filter((x) => (x.type === \"Melee\"))\n\n  return weapons.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Weapon</th>\n          {props.phase === \"shooting\" && <th>Range</th>}\n          {props.phase === \"shooting\" && <th>Type</th>}\n          {props.phase === \"shooting\" && <th>Shots</th>}\n          <th>S</th>\n          <th>AP</th>\n          <th>D</th>\n          <th>Abilities</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(weapons, ['name']).map((x: Weapon) => (\n          <tr>\n            <td style={{\"whiteSpace\": \"nowrap\"}}>{x.name}</td>\n            {props.phase === \"shooting\" && <td>{x.range}&quot;</td>}\n            {props.phase === \"shooting\" && <td style={{\"whiteSpace\": \"nowrap\"}}>{x.type}</td>}\n            {props.phase === \"shooting\" && <td style={{\"whiteSpace\": \"nowrap\"}}>{x.shots}</td>}\n            <td>{x.strength}</td>\n            <td>{x.armourPiercing}</td>\n            <td>{x.damage}</td>\n            <td>{x.abilities}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default WeaponList;\n","import React from 'react';\nimport { StatBadge } from '../StatBadge';\nimport AbilityList from './AbilityList';\nimport WeaponList from './WeaponList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\n\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function ShootingPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        {hasRangedWeapons(props.model) && <WeaponList weapons={props.model.weapons} phase='shooting' userStrength={props.model.stats.strength}/>}\n        <AbilityList abilities={props.model.abilities} phase='shooting'/>\n      </Col>\n      <Col sm='auto'>\n        {hasRangedWeapons(props.model) && <StatBadge name=\"BS\" value={`${props.model.stats.ballistic_skill}`} secondaryValue=\"+\"/>}\n        <StatBadge name=\"T\" value={`${props.model.stats.toughness}`}/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"Sv\" value={`${props.model.stats.save}`} secondaryValue=\"+\"/>\n        { props.model.stats.invulnerable_save\n          ? <StatBadge name=\"Inv\" value={`${props.model.stats.invulnerable_save}`} secondaryValue=\"+\"/>\n          : <></>\n        }\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasRangedWeapons(model: Model) {\n  return !isNaN(model.stats.ballistic_skill) && (model.weapons.filter((x) => (x.type !== \"Melee\")).length > 0)\n}\n","import React from 'react';\nimport { StatBadge } from '../StatBadge';\nimport AbilityList from './AbilityList';\nimport WeaponList from './WeaponList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\n\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function FightPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        <WeaponList weapons={props.model.weapons} phase='fight' userStrength={props.model.stats.strength}/>\n        <AbilityList abilities={props.model.abilities} phase='fight'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"A\" value={`${props.model.stats.attacks}`} secondaryValue={ props.model.stats.additional_attacks ? `+${props.model.stats.additional_attacks}` : null}/>\n        <StatBadge name=\"T\" value={`${props.model.stats.toughness}`}/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"WS\" value={`${props.model.stats.weapon_skill}`} secondaryValue=\"+\"/>\n        <StatBadge name=\"Sv\" value={`${props.model.stats.save}`} secondaryValue=\"+\"/>\n        { props.model.stats.invulnerable_save\n          ? <StatBadge name=\"Inv\" value={`${props.model.stats.invulnerable_save}`} secondaryValue=\"+\"/>\n          : <></>\n        }\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { StatBadge } from '../StatBadge';\nimport AbilityList from './AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from '../ModelTitle';\n\nimport { Model } from '../../types/KillTeam2018';\n\ntype Props = {\n  model: Model\n};\n\nexport function MoralePhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle {...props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='morale'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"Ld\" value={`${props.model.stats.leadership}`}/>\n      </Col>\n    </Row>\n  );\n}\n","import React, { MouseEvent } from 'react';\nimport { Button } from 'react-bootstrap';\n\ntype Props = {\n  onClose: (event: MouseEvent<HTMLButtonElement>) => void,\n};\n\nexport function CloseButton(props: Props) {\n  return (<Button variant=\"dark\" className='d-print-none' onClick={props.onClose}>Close</Button>);\n}\n","import React, { MouseEvent } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { Model } from '../../types/KillTeam2018';\nimport { Ability } from '../../types/Ability';\nimport Phase from './Phase';\nimport AbilityList from './AbilityList';\nimport { NoPhaseDetails } from './NoPhaseDetails';\nimport { MovementPhaseDetails } from './MovementPhaseDetails';\nimport { ScoutingPhaseDetails, hasScoutingPhase } from './ScoutingPhaseDetails';\nimport { DeploymentPhaseDetails, hasDeploymentPhase } from './DeploymentPhaseDetails';\nimport { InitiativePhaseDetails, hasInitiativePhase } from './InitiativePhaseDetails';\nimport { PsychicPhaseDetails, hasPsychicPhase } from './PsychicPhaseDetails';\nimport { ShootingPhaseDetails } from './ShootingPhaseDetails';\nimport { FightPhaseDetails } from './FightPhaseDetails';\nimport { MoralePhaseDetails } from './MoralePhaseDetails';\nimport { CloseButton } from '../CloseButton';\nimport _ from 'lodash'\n\ntype Props = {\n  name: string,\n  models: Model[],\n  forceRules: Ability[],\n  onClose: (event: MouseEvent<HTMLButtonElement>) => void,\n  onSelectionChanged: (uuid: string, value: number) => void,\n};\n\nexport function Roster(props: Props) {\n  // Display models sorted by category and type\n  const sortedModels = _.sortBy(props.models, (x: Model) => ([x.category == null, x.category, x.type]))\n  // Work out which models are actually selected\n  const selectedModels = _.filter(sortedModels, (x: Model) => (x.selected > 0))\n  return <>\n    <h1 style={{\n      background: '#FF6F2D',\n      color: 'white',\n      padding: '10px',\n      width: '100%',\n      display: 'flex',\n    }}>\n      <Col>\n        {props.name}\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        <small>{_.sumBy(props.models, (model: Model) => (model.selected * model.points))}pts</small>\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        <CloseButton onClose={props.onClose}/>\n      </Col>\n    </h1>\n    <>\n      <AbilityList abilities={props.forceRules} phase=\"\" highlight/>\n      {sortedModels.map((model: Model) => (\n        <NoPhaseDetails model={model} onSelectionChanged={props.onSelectionChanged}/>\n      ))}\n    </>\n    {_.some(selectedModels, hasScoutingPhase) &&\n      <Phase name=\"scouting\">\n        <>\n          <AbilityList abilities={props.forceRules} phase=\"scouting\" highlight/>\n          {selectedModels.map((model: Model) => (\n            hasScoutingPhase(model) &&\n            <ScoutingPhaseDetails model={model}/>\n          ))}\n        </>\n      </Phase>\n    }\n    {_.some(selectedModels, hasDeploymentPhase) &&\n      <Phase name=\"deployment\">\n        <>\n          <AbilityList abilities={props.forceRules} phase=\"deployment\" highlight/>\n          {selectedModels.map((model: Model) => (\n            hasDeploymentPhase(model) &&\n            <DeploymentPhaseDetails model={model}/>\n          ))}\n        </>\n      </Phase>\n    }\n    {_.some(selectedModels, hasInitiativePhase) &&\n      <Phase name=\"initiative\">\n        <>\n          <AbilityList abilities={props.forceRules} phase=\"initiative\" highlight/>\n          {selectedModels.map((model: Model) => (\n            hasInitiativePhase(model) &&\n            <InitiativePhaseDetails model={model}/>\n          ))}\n        </>\n      </Phase>\n    }\n    <Phase name=\"movement\">\n      <>\n        <AbilityList abilities={props.forceRules} phase=\"movement\" highlight/>\n        {selectedModels.map((model: Model) => (\n          <MovementPhaseDetails model={model}/>\n        ))}\n      </>\n    </Phase>\n    {_.some(selectedModels, hasPsychicPhase) &&\n      <Phase name=\"psychic\">\n        <>\n          <AbilityList abilities={props.forceRules} phase=\"psychic\" highlight/>\n          {selectedModels.map((model: Model) => (\n            hasPsychicPhase(model) &&\n            <PsychicPhaseDetails model={model}/>\n          ))}\n        </>\n      </Phase>\n    }\n    <Phase name=\"shooting\">\n      <>\n        <AbilityList abilities={props.forceRules} phase=\"shooting\" highlight />\n        {selectedModels.map((model: Model) => (\n          <ShootingPhaseDetails model={model}/>\n        ))}\n      </>\n    </Phase>\n    <Phase name=\"fight\">\n      <>\n        <AbilityList abilities={props.forceRules} phase=\"fight\" highlight/>\n        {selectedModels.map((model: Model) => (\n          <FightPhaseDetails model={model}/>\n        ))}\n      </>\n    </Phase>\n    <Phase name=\"morale\">\n      <>\n        <AbilityList abilities={props.forceRules} phase=\"morale\" highlight/>\n        {selectedModels.map((model: Model) => (\n          <MoralePhaseDetails model={model}/>\n        ))}\n      </>\n    </Phase>\n  </>\n}\n","import React from 'react';\nimport { Weapon } from '../../types/KillTeam2021';\nimport { Table } from 'react-bootstrap';\n\ntype Props = {\n  weapons: Weapon[],\n};\n\nexport function WeaponList(props: Props) {\n  return (\n    <>\n      <Table striped bordered size=\"sm\">\n        <thead>\n          <tr>\n            <th>Weapon</th>\n            <th>Attacks</th>\n            <th>Hit</th>\n            <th>Damage</th>\n            <th>Rules</th>\n            <th>Critical</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.weapons.map((x: Weapon) => (\n            <tr>\n              <td>{x.name}</td>\n              <td>{x.attacks}</td>\n              <td>{x.hit}+</td>\n              <td>{x.damage} / {x.criticalDamage}</td>\n              <td>{x.specialRules}</td>\n              <td>{x.criticalRules}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n}\n","import React from 'react';\nimport { Equipment } from '../../types/KillTeam2021';\nimport { Card } from 'react-bootstrap';\n\ntype Props = {\n  equipment: Equipment[],\n};\n\nexport function EquipmentList(props: Props) {\n  return props.equipment.length === 0 ? <></> : (\n    <Card border=\"secondary\" bg=\"light\">\n      <Card.Header style={{ background: \"rgba(0, 0, 0, 0.05)\"}} as=\"h4\">\n        Equipment\n      </Card.Header>\n      <Card.Body>\n        {props.equipment.map((x: Equipment) => (\n          <p>\n            <strong>{x.name} ({x.cost} EP)</strong>\n            {x.description\n              ? <><strong>: </strong>{x.description}</>\n              : <></>\n            }\n          </p>\n        ))}\n      </Card.Body>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Action } from '../../types/KillTeam2021';\nimport { Card } from 'react-bootstrap';\nimport _ from 'lodash'\n\ntype Props = {\n  actions: Action[]\n};\n\nexport function ActionList(props: Props) {\n  return <>\n    {_.sortBy(props.actions, ['name']).map((x: Action) => (\n      <Card border=\"primary\" bg=\"light\">\n        <Card.Header style={{ background: \"#FF6F2D\", color: \"white\"}} as=\"h4\">\n          {x.name}\n        </Card.Header>\n        <Card.Body>\n          {x.description}\n        </Card.Body>\n      </Card>\n    ))}\n  </>\n}\n","import React from 'react';\nimport { Table } from 'react-bootstrap'\n\ntype Props = {\n  wounds: number,\n  title: string,\n};\n\nexport function WoundTrack(props: Props) {\n  return <Table striped bordered size=\"sm\">\n    <tr>\n      <td>{props.title}</td>\n      <td>{\"🩸 \".repeat(props.wounds)}</td>\n    </tr>\n  </Table>\n}\n","import React from 'react';\nimport { Ability } from '../../types/Ability';\nimport { Card } from 'react-bootstrap';\nimport _ from 'lodash'\n\ntype Props = {\n  abilities: Ability[],\n};\n\nfunction AbilityList(props: Props) {\n  return props.abilities.length === 0 ? <></> : (\n    <Card border=\"secondary\" bg=\"light\">\n      <Card.Header style={{ background: \"rgba(0, 0, 0, 0.05)\"}} as=\"h4\">\n        Abilities\n      </Card.Header>\n      <Card.Body>\n        {_.sortBy(props.abilities, ['name']).map((x: Ability) => (\n          <p>\n            <strong>{x.name}: </strong>\n            {x.description}\n          </p>\n        ))}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default AbilityList;\n","import React from 'react';\nimport { Card } from 'react-bootstrap'\nimport { Row, Col } from 'react-bootstrap'\nimport { Model } from '../../types/KillTeam2021';\nimport { ModelTitle } from '../ModelTitle'\nimport { WeaponList } from './WeaponList'\nimport { StatBadge } from '../StatBadge'\nimport { EquipmentList } from './EquipmentList'\nimport { ActionList } from './ActionList'\nimport { KeywordList } from '../KeywordList'\nimport { WoundTrack } from './WoundTrack'\nimport AbilityList from './AbilityList';\nimport _ from 'lodash'\n\ntype Props = {\n  model: Model\n};\n\nexport function Datasheet(props: Props) {\n  return (\n    <Card className={props.model.selected > 0 ? \"included\" : \"excluded\"}>\n      <ModelTitle {...props.model} />\n      <Card.Body>\n        <Row>\n          <Col sm=\"10\">\n            {_.range(1,props.model.selected+1).map((i) => (\n              <WoundTrack wounds={props.model.stats.wounds} title={props.model.name || `${props.model.type} ${(props.model.selected > 1 ? i : '')}`} />\n            ))}\n            <WeaponList weapons={props.model.weapons} />\n            <Row>\n              <Col>\n                <AbilityList abilities={props.model.abilities} />\n                <EquipmentList equipment={props.model.equipment} />\n              </Col>\n              <Col>\n                <ActionList actions={props.model.actions} />\n              </Col>\n            </Row>\n          </Col>\n          <Col sm=\"1\">\n            <StatBadge name=\"M\" value={`${props.model.stats.movement}●`}/>\n            <StatBadge name=\"GA\" value={`${props.model.stats.groupActivation}`}/>\n            <StatBadge name=\"DF\" value={`${props.model.stats.defence}`}/>\n          </Col>\n          <Col sm=\"1\">\n            <StatBadge name=\"W\" value={`${props.model.stats.wounds}`}/>\n            <StatBadge name=\"APL\" value={`${props.model.stats.actionPointLimit}`}/>\n            <StatBadge name=\"Sv\" value={`${props.model.stats.save}+`}/>\n          </Col>\n        </Row>\n      </Card.Body>\n      <KeywordList faction={props.model.faction ? `${props.model.faction} 💀` : null} keywords={props.model.keywords} />\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Ability } from '../../types/Ability';\nimport { Table } from 'react-bootstrap';\nimport _ from 'lodash'\n\ntype Props = {\n  rules: Ability[]\n};\n\nexport function RuleList(props: Props) {\n  return props.rules.length === 0 ? <></> : (\n    <Table striped bordered>\n      <tbody>\n        {_.sortBy(props.rules, ['name']).map((x: Ability) => (\n          <tr>\n            <td><strong>{x.name}</strong></td>\n            <td>{x.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n","import React, { MouseEvent } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { CloseButton } from '../CloseButton';\nimport { Model } from '../../types/KillTeam2021';\nimport { Datasheet } from './Datasheet';\nimport { RuleList } from './RuleList';\nimport _ from 'lodash'\n\ntype Props = {\n  name: string,\n  models: Model[],\n  onClose: (event: MouseEvent<HTMLButtonElement>) => void,\n};\n\nexport function Roster(props: Props) {\n  const headingStyle = {\n    background: '#FF6F2D',\n    color: 'black',\n    padding: '10px',\n    width: '100%',\n    display: 'flex',\n  };\n  return <>\n    <h1 style={headingStyle}>\n      <Col>\n        {props.name}\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        <CloseButton onClose={props.onClose}/>\n      </Col>\n    </h1>\n    {props.models.map((model: Model) => (\n        <Datasheet model={model}/>\n    ))}\n    <h2 style={{...headingStyle, breakBefore: 'always'}}>Rules</h2>\n    <RuleList rules={_.uniqBy(_.flatten(props.models.map((m) => (m.rules))), 'name')}/>\n  </>\n}\n","import _ from 'lodash'\nimport { Ability } from '../../types/Ability'\n\nconst phasePatterns = {\n  scouting: [\n    / scouting /\n  ],\n  deployment: [\n    / before the first battle round /,\n    / set up /,\n    / cult ambush /\n  ],\n  initiative: [\n    / start of each battle round /,\n    / beginning of each battle round /,\n    / at the beginning of the battle round /\n  ],\n  movement: [\n    / movement phase /,\n    / climbs? /,\n    / normal move /,\n    / advances? /,\n    / charges? /,\n    / falls? back /,\n    / reacts? /,\n    / overwatch /,\n    / retreats? /,\n    / fly /,\n    / after this model has charged /,\n    / from reserves? /,\n    / can move across /,\n    / setup within /\n  ],\n  psychic: [\n    / psychic /,\n    / deny the witch /,\n    / perils of the warp /,\n    / psychich / // handle typo\n  ],\n  shooting: [\n    / shooting phase /,\n    / shots? /,\n    / ballistic skill /,\n    / ranged /,\n    / range characteristic /,\n    / half range /,\n    / long range /,\n    / short range /,\n    / grenades? /,\n    / shoots? /,\n    / shooting /,\n    / fire[sd]+ /,\n    / firing /,\n    / obscured /,\n    / obcured /, // handle typo\n    / order(ed)? /,\n    / voice of command /,\n    / invulnerable save /,\n    / demolition charges? /,\n    / liberator autostubs /,\n    / obscurred /, // handle typo\n    / look out sir! /,\n    / pistol /,\n    / heavy weapons?/,\n    / add [0-9] to saving throws /\n  ],\n  fight: [\n    / fight phase /,\n    / fights? /,\n    / weapon skill /,\n    / attacks characteristics? /,\n    / strength characteristics? /,\n    / piles? in /,\n    / consolidates? /,\n    / melee /,\n    / close combat /,\n    / death to the false emperor /,\n    / additional attacks? /,\n    / invulnerable save /,\n    / look out sir! /,\n    / intervening terrain /,\n    / terrain that is between the two models /,\n    / damage characteristic is [0-9] in a battle round in which this model charged /,\n    / add [0-9] to saving throws /\n  ],\n  morale: [\n    / nerve /,\n    / leadership /\n  ]\n}\n\nconst genericPatterns = [\n  / weapon /,\n  / hit rolls? /,\n  / attack(s|ing)? /,\n  / saves? /,\n  / saving throws? /,\n  / injury rolls? /,\n  / wound rolls? /,\n  / loses? a wound /,\n  / fall(ing)? damage /,\n  / the bearer is taken out of action /,\n  / toughness characteristic /,\n  / suffers? a mortal wound /,\n  / taken out of action /,\n  / this weapon/,\n  / reduced to 0 wounds /\n]\n\nconst antiPatterns = {\n  deployment: [\n    / from reserve /\n  ],\n  movement: [\n    / previous movement phase /,\n    / preceding movement phase /,\n    / if the firing model moved /,\n    / moved during the movement phase /,\n    / round in which it charges or is charged /,\n    / in which it made a successful charge /,\n    / even if it fell back in the movement phase /,\n    / model that can fly /,\n    / as if it were the movement phase /,\n    / stunned /,\n    / penalty for moving /,\n    / as if the model had remained stationary /,\n    / demolition charge /\n  ],\n  psychic: [\n    / after all of this weapon's attacks have been resolved /\n  ],\n  shooting: [\n    / when (it|this model) fires overwatch /,\n    / invulnerable save (against attacks made )?in the fight phase /,\n    / as if it were your shooting phase /,\n    / tactical support turret /,\n    / out of action in the shooting phase /,\n    / mordian /\n  ],\n  fight: [\n    / the ordered model immediately fights /,\n    / shots equal to its attacks characteristic /,\n    / stunned /,\n    / target enemies at [0-9]{1,2}\" or less /,\n    / within half range /,\n    / tactical support turret /\n  ],\n  morale: [\n    / target model's leadership /,\n    / weapon against a model which has a leadership /,\n    / subtract 1 from its leadership / // phantasm grenade effect\n  ]\n}\n\nexport const calculatePhases = (description: string) => {\n  const minDesc = ' ' + description.toLowerCase().replace(/[.,)(]/g, '') + ' '\n  const phases : string[] = []\n  _.forIn(phasePatterns, (patterns, phase) => {\n    if (_.some(patterns, (re) => (re.test(minDesc)))) {\n      phases.push(phase)\n    }\n  })\n  // If there's no fight or shoot yet, test some generic patterns that could be either\n  if (!phases.includes('fight') && !phases.includes('shooting')) {\n    if (_.some(genericPatterns, (re) => (re.test(minDesc)))) {\n      phases.push('fight', 'shooting')\n    }\n  }\n  // Remove phases for some patterns that get picked up incorrectly\n  _.forIn(antiPatterns, (patterns, phase) => {\n    if (_.some(patterns, (re) => (re.test(minDesc)))) {\n      _.remove(phases, (p) => (p === phase))\n    }\n  })\n  // OK, done\n  return phases\n}\n\nexport const parseAdditionalAttacks = (description: string) => {\n  const patterns = [\n    /Add ([1-9]{1}) to this model's Attacks characteristic/,\n    / ([1-9]|an|one|two) additional attack/,\n    /(one) \\(and only one\\) attack with this weapon./\n  ]\n  const antiPatterns = [\n    /if a model/,\n    /if the bearer/,\n    /unless/\n  ]\n  return _.sum(_.map(patterns, (pattern) => {\n    const match = description.match(pattern)\n    if (match) {\n      if (_.some(antiPatterns, (re) => (re.test(description)))) {\n        return 0\n      }\n      if (match[1] === 'an' || match[1] === 'one') return 1\n      if (match[1] === 'two') return 2\n      return parseInt(match[1] || match[2])\n    }\n    return 0\n  }))\n}\n\nexport const invulnerableSave = (abilities: Ability[]) => {\n  const patterns = [\n    /models with this ability have a ([1-6]{1})\\+ invulnerable save/,\n    /has a ([1-6]{1})\\+ invulnerable save($|\\.|,| and| instead of)/,\n    /has an invulnerable save of ([1-6]{1})\\+/\n  ]\n  const saves = _.map(abilities, (a) => {\n    return _.min(_.map(patterns, (pattern) => {\n      const match = a.description.match(pattern)\n      if (match) {\n        return parseInt(match[1])\n      }\n      return null\n    }))\n  })\n  return _.min(saves)\n}\n","import { v4 as uuidv4 } from 'uuid'\nimport _ from 'lodash'\nimport hash from 'node-object-hash'\nimport * as XPath from 'xpath-ts'\nimport { parseAdditionalAttacks, calculatePhases, invulnerableSave } from './Abilities'\n\n// useNamespaces is NOT a React hook, so:\n// eslint-disable-next-line\nconst xpath = XPath.useNamespaces({ roster: 'http://www.battlescribe.net/schema/rosterSchema' })\n\nconst stat = (name, model) => {\n  const nodes = xpath(`roster:profiles/roster:profile[@typeName='Model']//roster:characteristic[@name='${name}']`, model)\n  if (nodes.length > 0) {\n    return parseInt(nodes[0].childNodes[0].nodeValue)\n  } else { return '' }\n}\n\nconst weaponStat = (name, weapon, numeric) => {\n  const nodes = xpath(`roster:characteristics/roster:characteristic[@name='${name}']`, weapon)\n  if (nodes.length > 0) {\n    return numeric ? parseInt(nodes[0].childNodes[0].nodeValue) : nodes[0].childNodes[0].nodeValue\n  } else { return '' }\n}\n\nconst points = (model) => {\n  const costNode = xpath('.//roster:costs/roster:cost[@name=\\'pts\\']', model)\n  return _.sumBy(costNode, (x) => parseInt(x.getAttribute('value')))\n}\n\nconst parseForceRule = (rule) => {\n  const description = xpath('roster:description', rule)[0].childNodes[0].nodeValue\n  return {\n    name: rule.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parseAbility = (ability) => {\n  const description = xpath(\".//roster:characteristic[@name='Description']\", ability)[0].childNodes[0].nodeValue\n  return {\n    name: ability.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parseWeapon = (weapon, userStrength) => {\n  let strength = weaponStat('S', weapon, false)\n  if (strength === 'User') {\n    strength = userStrength\n  }\n  let match = /x([0-9]+)/i.exec(strength)\n  if (match) {\n    strength = userStrength * parseInt(match[1])\n  }\n  match = /\\+([0-9]+)/i.exec(strength)\n  if (match) {\n    strength = userStrength + parseInt(match[1])\n  }\n  let weaponType = weaponStat('Type', weapon, false)\n  if (weaponType !== 'Melee') { weaponType = weaponType.split(' ').slice(0, -1).join(' ') }\n  return {\n    name: weapon.getAttribute('name'),\n    range: weaponStat('Range', weapon, true),\n    type: weaponType,\n    shots: weaponStat('Type', weapon, false).split(' ').slice(-1)[0],\n    strength,\n    armourPiercing: weaponStat('AP', weapon, true),\n    damage: weaponStat('D', weapon, false),\n    abilities: weaponStat('Abilities', weapon, false)\n  }\n}\n\nconst parseWargear = (wargear) => {\n  const description = xpath(\".//roster:characteristic[@name='Ability']\", wargear)[0].childNodes[0].nodeValue\n  return {\n    name: wargear.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parsePsychicPower = (power) => {\n  let description = xpath(\".//roster:characteristic[@name='Psychic Power']\", power)[0].childNodes[0].nodeValue\n  const warpChargeDescription = description.match(/warp charge value of ([0-9]+)\\.(.*)/)\n  let charge = null\n  if (warpChargeDescription.length > 2) {\n    charge = parseInt(warpChargeDescription[1])\n    description = warpChargeDescription[2]\n  }\n  return {\n    name: power.getAttribute('name'),\n    charge,\n    description\n  }\n}\n\nexport const additionalAttacks = (weapons, abilities) => {\n  const descriptions = _.map(weapons, (w) => w.abilities).concat(_.map(abilities, (a) => a.description))\n  const attacks = _.map(descriptions, (d) => parseAdditionalAttacks(d))\n  return _.sum(attacks)\n}\n\nconst parseModel = (model) => {\n  const wargear = xpath(\".//roster:profile[@typeName='Wargear']\", model).map(parseWargear)\n  const specialismSelection = xpath(\"roster:selections/roster:selection[roster:selections/roster:selection/roster:profiles/roster:profile/@typeName='Ability']\", model)\n  const abilities = xpath(\".//roster:profile[@typeName='Ability']\", model).map(parseAbility).concat(wargear)\n  const stats = {\n    movement: stat('M', model),\n    weapon_skill: stat('WS', model),\n    ballistic_skill: stat('BS', model),\n    strength: stat('S', model),\n    toughness: stat('T', model),\n    wounds: stat('W', model),\n    attacks: stat('A', model),\n    leadership: stat('Ld', model),\n    save: stat('Sv', model),\n    invulnerable_save: invulnerableSave(abilities)\n  }\n  const closeCombatWeapon = {\n    name: 'Bare fists',\n    range: '-',\n    type: 'Melee',\n    strength: stats.strength,\n    armourPiercing: 0,\n    damage: 1,\n    abilities: 'Default close combat weapon available to all models'\n  }\n  const weapons = xpath(\".//roster:profile[@typeName='Weapon']\", model).map((x) => (parseWeapon(x, stats.strength))).concat([closeCombatWeapon])\n  stats.additional_attacks = additionalAttacks(weapons, abilities)\n  const psychicPowers = xpath(\"roster:selections/roster:selection/roster:profiles/roster:profile[@typeName='Psychic Power']\", model).map(parsePsychicPower)\n  const category = xpath(\"roster:categories/roster:category[@primary='true']\", model)[0].getAttribute('name')\n  const faction = xpath(\"roster:categories/roster:category[@primary='false' and starts-with(@name,'Faction: ')]\", model)\n  const keywords = xpath(\"roster:categories/roster:category[@primary='false' and not(starts-with(@name,'Faction: '))]\", model).map((x) => x.getAttribute('name'))\n  _.remove(keywords, (x) => (x === 'Model'))\n  const details = {\n    name: model.getAttribute('customName'),\n    type: model.getAttribute('name'),\n    category: category === 'Non-specialist' ? null : category,\n    stats,\n    abilities,\n    weapons,\n    wargear,\n    psychicPowers,\n    specialism: specialismSelection.length > 0 ? specialismSelection[0].getAttribute('name') : null,\n    faction: faction.length > 0 ? faction[0].getAttribute('name').split(': ', 2)[1] : null,\n    keywords,\n    points: points(model)\n  }\n  return { ...details, hash: hash([]).hash(details) }\n}\n\nexport const parseBattlescribeXML = (doc) => {\n  const models = []\n  const name = xpath('/roster:roster', doc)[0].getAttribute('name')\n  const forceRules = xpath('//roster:force/roster:rules/roster:rule', doc).map(parseForceRule)\n  for (const category of xpath('//roster:force/roster:categories/roster:category', doc)) {\n    const categoryId = category.getAttribute('entryId')\n    for (const model of xpath(`//roster:selection[@type='model' and roster:categories/roster:category/@entryId='${categoryId}']`, doc)) {\n      models.push(parseModel(model))\n    }\n  }\n  const uniqueModels = _.groupBy(models, (m) => m.hash)\n  return {\n    system: 'KillTeam2018',\n    name,\n    forceRules,\n    models: _.map(uniqueModels, (model) => ({\n      ...model[0],\n      uuid: uuidv4(),\n      count: model.length,\n      selected: model.length\n    }))\n  }\n}\n","import { v4 as uuidv4 } from 'uuid'\nimport _ from 'lodash'\nimport hash from 'node-object-hash'\nimport * as XPath from 'xpath-ts'\nimport { Roster, Model, Weapon, Equipment, Action } from '../../types/KillTeam2021';\nimport { Ability } from '../../types/Ability';\n\n// useNamespaces is NOT a React hook, so:\n// eslint-disable-next-line\nconst xpSelect = XPath.useNamespaces({ bs: 'http://www.battlescribe.net/schema/rosterSchema' })\n\nconst stat = (name: string, model: Element) : number => {\n  const node = xpSelect(`bs:profiles/bs:profile[@typeName='Operative']//bs:characteristic[@name='${name}']/text()`, model, true)\n  if (node) {\n    return parseInt(node.toString())\n  } else { return 0 }\n}\n\nconst parseWeapon = (weapon : Node) : Weapon => {\n  return {\n    name: xpSelect('string(@name)', weapon, true).toString(),\n    melee: xpSelect('string(@name)', weapon, true).toString().startsWith(\"⚔\"),\n    attacks: parseInt(xpSelect(\".//bs:characteristic[@name='A']/text()\", weapon, true).toString()),\n    hit: parseInt(xpSelect(\".//bs:characteristic[@name='WS/BS']/text()\", weapon, true).toString()),\n    damage: parseInt(xpSelect(\".//bs:characteristic[@name='D']/text()\", weapon, true).toString().split('/')[0]),\n    specialRules: (xpSelect(\".//bs:characteristic[@name='SR']/text()\", weapon, true) || \"-\").toString(),\n    criticalDamage: parseInt(xpSelect(\".//bs:characteristic[@name='D']/text()\", weapon, true).toString().split('/')[1]),\n    criticalRules: (xpSelect(\".//bs:characteristic[@name='!']/text()\", weapon, true) || \"-\").toString(),\n  }\n}\n\nconst parseAbility = (ability : Node) : Ability => {\n  return {\n    name: xpSelect('string(@name)', ability, true).toString(),\n    description: (xpSelect(\".//bs:characteristic[@name='Ability']/text()\", ability, true) || \"-\").toString(),\n    phases: []\n  }\n}\n\nconst parseAction = (action : Node) : Action => {\n  return {\n    name: xpSelect('string(@name)', action, true).toString(),\n    description: (xpSelect(\".//bs:characteristic[@name='Unique Action']/text()\", action, true) || \"-\").toString(),\n    cost: 1,\n  }\n}\n\nconst parseEquipment = (equipment : Node) : Equipment => {\n  const description = xpSelect(\".//bs:characteristic[@name='Equipment']/text()\", equipment, true)\n  return {\n    name: xpSelect('string(@name)', equipment, true).toString(),\n    cost: parseInt(xpSelect(\"string(.//bs:cost/@value)\", equipment, true).toString()),\n    description: description ? description.toString() : null,\n  }\n}\n\nconst parseRule = (rule : Node) : Ability => {\n  return {\n    name: xpSelect('string(@name)', rule, true).toString(),\n    description: (xpSelect(\".//bs:description/text()\", rule, true) || \"-\").toString(),\n    phases: []\n  }\n}\n\nconst factionKeywords = [\n  \"Brood Coven\",\n  \"Cadre Mercenary\",\n  \"Chaos Daemons\",\n  \"Commorrite\",\n  \"Craftworld\",\n  \"Death Guard\",\n  \"Ecclesiarchy\",\n  \"Forge World\",\n  \"Greenskin\",\n  \"Grey Knight\",\n  \"Hive Fleet\",\n  \"Hunter Cadre\",\n  \"Hunter Clade\",\n  \"Imperial Guard\",\n  \"Kommando\",\n  \"Space Marine\",\n  \"Talons of the Emperor\",\n  \"Thousand Sons\",\n  \"Tomb World\",\n  \"Traitor Space Marine\",\n  \"Troupe\",\n  \"Veteran Guardsmen\",\n];\n\nconst parseModel = (model : Element) : Model => {\n  const allKeywords = (xpSelect(\"bs:categories/bs:category[@primary='false']/@name\", model) as Node[]).map((x) => (x.textContent || '').replace(\"💀\",\"\"));\n  const faction = _.intersection(allKeywords, factionKeywords).pop() || null;\n  const keywords = _.remove(allKeywords, (x) => (x !== faction));\n  const details = {\n    name: xpSelect('string(@customName)', model, true).toString(),\n    type: xpSelect('string(@name)', model, true).toString(),\n    stats: {\n      movement: stat(\"M\", model),\n      actionPointLimit: stat(\"APL\", model),\n      groupActivation: stat(\"GA\", model),\n      defence: stat(\"DF\", model),\n      save: stat(\"SV\", model),\n      invulnerable_save: null,\n      wounds: stat(\"W\", model),\n    },\n    weapons: (xpSelect(\".//bs:profile[@typeName='Weapons']\", model) as Node[]).map(parseWeapon),\n    equipment: (xpSelect(\".//bs:selection[(@type='upgrade') and (.//bs:cost/@value!=\\\"0.0\\\")]\", model) as Node[]).map(parseEquipment),\n    abilities: (xpSelect(\".//bs:profile[@typeName='Abilities']\", model) as Node[]).map(parseAbility),\n    actions: (xpSelect(\".//bs:profile[@typeName='Unique Actions']\", model) as Node[]).map(parseAction),\n    rules: (xpSelect(\".//bs:rules/bs:rule\", model) as Node[]).map(parseRule),\n    keywords,\n    faction,\n    uuid: \"\",\n    count: 0,\n    selected: 0,\n  };\n  return { ...details, hash: hash().hash({type: details.type, weapons: details.weapons, equipment: details.equipment}) }\n}\n\nexport const parseBattlescribeXML = (doc : Document) : Roster => {\n  const models = []\n  const name = xpSelect('string(/bs:roster/@name)', doc, true).toString()\n  for (const model of xpSelect('//bs:selection[@type=\\'model\\']', doc) as Element[]) {\n    models.push(parseModel(model))\n  }\n  const uniqueModels = _.groupBy(models, (m) => m.hash)\n  return {\n    system: \"KillTeam2021\",\n    name,\n    models: _.map(uniqueModels, (model) => ({\n      ...model[0],\n      uuid: uuidv4(),\n      count: model.length,\n      selected: model.length\n    }))\n  }\n}\n","import { parseBattlescribeXML as parseKillTeam2018 } from './parsers/KillTeam2018/BattlescribeParser'\nimport { parseBattlescribeXML as parseKillTeam2021 } from './parsers/KillTeam2021/BattlescribeParser'\nimport JSZip from 'jszip'\nimport { DOMParserImpl } from 'xmldom-ts'\nimport * as XPath from 'xpath-ts'\nimport { Roster as Roster2018 } from './types/KillTeam2018';\nimport { Roster as Roster2021 } from './types/KillTeam2021';\n\n// useNamespaces is NOT a React hook, so:\n// eslint-disable-next-line\nconst xpSelect = XPath.useNamespaces({ bs: 'http://www.battlescribe.net/schema/rosterSchema' })\n\nconst unzip = async (file: string) : Promise<string> => {\n  if (file.charAt(0) !== 'P') {\n    return file\n  } else {\n    const jszip = new JSZip()\n    const zip = await jszip.loadAsync(file)\n    return zip.file(/[^/]+\\.ros/)[0].async('string') // Get roster files that are in the root\n  }\n}\n\nconst parseFile = (file: string) : Roster2018 | Roster2021 => {\n  const doc = new DOMParserImpl().parseFromString(file)\n  const gameSystemId = (xpSelect('/bs:roster/@gameSystemId', doc, true) as Node).nodeValue\n  switch (gameSystemId) {\n    case 'a467-5f42-d24c-6e5b':\n      return parseKillTeam2018(doc) as Roster2018\n    case '3b7e-7dab-f79f-2e74':\n      return parseKillTeam2021(doc)\n    default:\n      throw new Error('Unsupported game system!')\n  }\n}\n\nexport const loadFile = async (file: File) : Promise<Roster2018 | Roster2021> => {\n  const reader = new FileReader()\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort()\n      reject(new DOMException('Problem parsing input file.'))\n    }\n    reader.onloadend = async () => {\n      const content = reader.result as string\n      const file = await unzip(content)\n      resolve(parseFile(file))\n    }\n    reader.readAsBinaryString(file)\n  })\n}\n\nexport const loadFiles = (files: File[]) : Promise<Roster2018 | Roster2021> => {\n  return loadFile(files[0])\n}\n","import React, { useState } from 'react'\nimport Homepage from './components/Homepage'\nimport { Roster as RosterView2018 } from './components/KillTeam2018/Roster'\nimport { Roster as RosterView2021 } from './components/KillTeam2021/Roster'\nimport { Container } from 'react-bootstrap'\nimport { loadFiles } from './FileLoader'\nimport { Roster as Roster2018 } from './types/KillTeam2018'\nimport { Roster as Roster2021 } from './types/KillTeam2021'\n\nexport function App() {\n\n  const [roster, setRoster] = useState<Roster2018|Roster2021|null>(null)\n\n  const handleUpload = async (acceptedFiles: File[]) => {\n    const r = await loadFiles(acceptedFiles);\n    setRoster(r)\n  }\n\n  const handleClose = () => {\n    setRoster(null)\n  }\n\n  const handleSelectionChanged = (uuid: string, selectedCount: number) => {\n    if (roster && isRosterKT18(roster)) {\n      setRoster(Object.assign({models: roster.models.map((model) => (\n        model.uuid !== uuid\n          ? model\n          : Object.assign(\n              model,\n              { selected: selectedCount }\n            )\n      ))}, roster))\n    }\n  }\n\n  const isRosterKT18 = (roster: any): roster is Roster2018 => (roster.system === \"KillTeam2018\")\n  const isRosterKT21 = (roster: any): roster is Roster2021 => (roster.system === \"KillTeam2021\")\n\n  return (\n    <Container fluid='lg'>\n      {roster === null ? <Homepage onUpload={handleUpload} /> : <></>}\n      {roster && isRosterKT18(roster) ? <RosterView2018 name={roster.name} models={roster.models} onClose={handleClose} forceRules={roster.forceRules} onSelectionChanged={handleSelectionChanged} /> : <></>}\n      {roster && isRosterKT21(roster) ? <RosterView2021 name={roster.name} models={roster.models} onClose={handleClose} /> : <></>}\n    </Container>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport * as Sentry from \"@sentry/react\";\n// import { Integrations } from \"@sentry/tracing\";\n\nSentry.init({\n  dsn: \"https://6fe3e632b45a44c086068e13f3b1a783@o464596.ingest.sentry.io/5473956\",\n  // integrations: [\n  //   new Integrations.BrowserTracing(),\n  // ],\n  // tracesSampleRate: 0.0,\n});\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// Enable offline use with a service worker\n// See https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.register()\n"],"sourceRoot":""}