{"version":3,"sources":["components/Intro.tsx","components/Homepage.tsx","components/Phase.tsx","components/AbilityList.tsx","components/StatsTable.tsx","components/SpecialistIcon.tsx","components/CategoryIcon.tsx","components/ModelTitle.tsx","components/NoPhaseDetails.tsx","components/StatBadge.tsx","components/MovementPhaseDetails.tsx","components/ScoutingPhaseDetails.tsx","components/DeploymentPhaseDetails.tsx","components/InitiativePhaseDetails.tsx","components/PsychicPowerList.tsx","components/PsychicPhaseDetails.tsx","components/WeaponList.tsx","components/ShootingPhaseDetails.tsx","components/FightPhaseDetails.tsx","components/MoralePhaseDetails.tsx","components/CloseButton.tsx","components/Roster.tsx","parsers/killteam/Abilities.ts","BattlescribeParser.js","FileLoader.js","App.tsx","serviceWorker.js","index.tsx"],"names":["Intro","Jumbotron","className","Homepage","props","Row","Col","Card","Header","as","Body","style","minHeight","Text","href","onDrop","onUpload","accept","getRootProps","getInputProps","Alert","variant","textAlign","Phase","pageBreakAfter","background","color","padding","width","textTransform","display","name","flexGrow","note","children","AbilityList","abilities","phase","filter","x","phases","indexOf","length","highlight","Table","striped","bordered","size","_","sortBy","map","description","StatsTable","movement","weapon_skill","isNaN","ballistic_skill","strength","toughness","wounds","attacks","additional_attacks","leadership","save","invulnerable_save","points","SpecialistIcon","specialism","height","marginRight","alt","src","toLowerCase","CategoryIcon","category","ModelTitle","titleComponents","without","model","type","justifyContent","selected","join","slice","showSelector","value","slideStop","onSelectionChanged","uuid","target","step","max","count","min","NoPhaseDetails","opacity","weapons","w","concat","wargear","stats","sm","Badge","pill","faction","keywords","keyword","StatBadge","paddingTop","border","flexDirection","borderRadius","fontSize","lineHeight","fontWeight","secondaryValue","MovementPhaseDetails","ScoutingPhaseDetails","hasScoutingPhase","DeploymentPhaseDetails","hasDeploymentPhase","InitiativePhaseDetails","hasInitiativePhase","PsychicPowerList","powers","charge","PsychicPhaseDetails","psychicPowers","hasPsychicPhase","WeaponList","range","shots","armourPiercing","damage","ShootingPhaseDetails","hasRangedWeapons","userStrength","FightPhaseDetails","MoralePhaseDetails","CloseButton","Button","onClick","onClose","Roster","sortedModels","models","selectedModels","sumBy","forceRules","some","phasePatterns","scouting","deployment","initiative","psychic","shooting","fight","morale","genericPatterns","antiPatterns","calculatePhases","minDesc","replace","forIn","patterns","re","test","push","includes","remove","p","invulnerableSave","saves","a","pattern","match","parseInt","xpath","XPath","roster","stat","nodes","childNodes","nodeValue","weaponStat","weapon","numeric","costNode","getAttribute","parseForceRule","rule","parseAbility","ability","parseWargear","parsePsychicPower","power","warpChargeDescription","additionalAttacks","descriptions","d","sum","parseAdditionalAttacks","parseModel","specialismSelection","closeCombatWeapon","exec","weaponType","split","parseWeapon","details","hash","parseBattlescribeXML","xml","doc","DOMParser","parseFromString","categoryId","uniqueModels","groupBy","m","uuidv4","unzip","file","jszip","JSZip","loadAsync","zip","async","parseFile","loadFile","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onloadend","result","readAsBinaryString","App","useState","setName","setModels","setForceRules","handleUpload","acceptedFiles","Container","fluid","selectedCount","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Sentry","dsn","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3e539587.chunk.js","sourcesContent":["import React from 'react';\nimport { Jumbotron } from 'react-bootstrap'\n\nfunction Intro() {\n  return <Jumbotron>\n    <h1>\n      Dataslate\n    </h1>\n    <p className='lead'>\n      Easy-to-use datasheets for Warhammer 40,000: Kill Team\n    </p>\n    <ul>\n      <li>All the info you need, when you need it</li>\n      <li>Stats and abilities organised by phase</li>\n      <li>No wasted space for identical models</li>\n      <li>Designed for print or screen</li>\n      <li>Clear, uncluttered layout for easy reference</li>\n    </ul>\n  </Jumbotron>\n}\n\nexport default Intro;\n","import React from 'react';\nimport Dropzone from 'react-dropzone'\nimport type { DropzoneOptions } from 'react-dropzone'\nimport Intro from './Intro'\nimport { Row, Col, Alert, Card } from 'react-bootstrap'\n\ntype Props = {\n  onUpload: DropzoneOptions[\"onDrop\"],\n}\n\nfunction Homepage(props: Props) {\n  return <>\n    <Intro />\n    <Row>\n      <Col>\n        <Card>\n          <Card.Header as=\"h3\">Step 1</Card.Header>\n          <Card.Body style={{minHeight: '12em'}}>\n            <Card.Text>\n              Build your force in{' '}\n              <a href='https://battlescribe.net/'>Battlescribe</a>.\n            </Card.Text>\n            <Card.Text>\n              Currently only Kill Team rosters are supported.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col>\n        <Card>\n          <Card.Header as=\"h3\">Step 2</Card.Header>\n          <Card.Body style={{minHeight: '12em'}}>\n            <Dropzone onDrop={props.onUpload} accept='.ros,.rosz'>\n              {({ getRootProps, getInputProps }) => (\n                <Alert variant='primary' {...getRootProps()} style={{ textAlign: 'center' }}>\n                  <input {...getInputProps()} />\n                  <p>Drop your roster file here, or click to select one.</p>\n                  <p><em>(*.rosz and *.ros accepted)</em></p>\n                </Alert>\n              )}\n            </Dropzone>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col>\n        <Card>\n          <Card.Header as=\"h3\">Step 3</Card.Header>\n          <Card.Body style={{minHeight: '12em'}}>\n            <Card.Text>\n              Print your datasheets out, and never forget an ability again!\n            </Card.Text>\n            <Card.Text>\n              Prepare to dominate your foes!\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    <footer>\n      Built with <a href='https://reactjs.org/'>React</a> and <a href='https://getbootstrap.com'>Bootstrap</a>.\n      Icons courtesy of <a href='https://killteam.app/'>Companion for Kill Team</a>.\n      Released as <a href='https://github.com/floppy/dataslate'>Open Source</a>,\n      report problems <a href='https://github.com/floppy/dataslate/issues/new'>on GitHub</a>.\n    </footer>\n  </>\n}\n\nexport default Homepage;\n","import React from 'react';\nimport { Col } from 'react-bootstrap'\n\ntype Props = {\n  name: string,\n  note?: string,\n  children: React.ReactNode,\n};\n\nfunction Phase(props: Props) {\n  return <div style={{\n    pageBreakAfter: 'always',\n  }}>\n    <h1 style={{\n      background: 'black',\n      color: 'white',\n      padding: '10px',\n      width: '100%',\n      textTransform: 'capitalize',\n      display: 'flex',\n    }}>\n      <Col>\n        {props.name} Phase\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        {props.note && (\n          <small>{props.note}</small>\n        )}\n      </Col>\n    </h1>\n    {props.children}\n  </div>\n}\n\nexport default Phase;\n","import React from 'react';\nimport { Ability } from '../types';\nimport { Table } from 'react-bootstrap';\nimport _ from 'lodash'\n\ntype Props = {\n  abilities: Ability[],\n  phase: string,\n  highlight?: boolean,\n};\n\nfunction AbilityList(props: Props) {\n  const abilities = props.phase ?\n    props.abilities.filter((x) => (x.phases.indexOf(props.phase) >= 0)) :\n    props.abilities.filter((x) => (x.phases.length === 0))\n  const variant = props.highlight ? \"primary\" : \"\";\n\n  return abilities.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\" variant={variant}>\n      <thead>\n        <tr>\n          <th>Ability</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(abilities, ['name']).map((x: Ability) => (\n          <tr>\n            <td>{x.name}</td>\n            <td>{x.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default AbilityList;\n","import React from 'react'\nimport { Table } from 'react-bootstrap'\n\ntype Props = {\n  movement: number,\n  weapon_skill: number,\n  ballistic_skill: number,\n  strength: number,\n  toughness: number,\n  wounds: number,\n  attacks: number,\n  additional_attacks: number,\n  leadership: number,\n  save: number,\n  invulnerable_save: number,\n  points: number,\n}\n\nfunction StatsTable (props: Props) {\n  return (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>M</th>\n          <th>WS</th>\n          <th>BS</th>\n          <th>S</th>\n          <th>T</th>\n          <th>W</th>\n          <th>A</th>\n          <th>Ld</th>\n          <th>Sv</th>\n          <th>Points</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{props.movement}&quot;</td>\n          <td>{props.weapon_skill}+</td>\n          <td>{isNaN(props.ballistic_skill) ? '-' : props.ballistic_skill+\"+\"}</td>\n          <td>{props.strength}</td>\n          <td>{props.toughness}</td>\n          <td>{props.wounds}</td>\n          <td>{props.attacks}\n          { props.additional_attacks ? <strong>{' +'}{props.additional_attacks}</strong> : null}\n          </td>\n          <td>{props.leadership}</td>\n          <td>{props.save}+\n          { props.invulnerable_save ? <>{' / '}<strong>{props.invulnerable_save}++</strong></> : null}</td>\n          <td>{props.points}</td>\n        </tr>\n      </tbody>\n    </Table>\n  )\n}\n\nexport default StatsTable\n","import React from 'react';\n\ntype Props = {\n  specialism: string;\n};\n\nexport function SpecialistIcon(props: Props) {\n  return (props.specialism\n    ? <img className='specialism' style={{height: '1em', marginRight: '10px'}} alt={props.specialism} src={`/icons/${props.specialism.toLowerCase()}.svg`}/>\n    : <></>\n  );\n}\n","import React from 'react';\n\ntype Props = {\n  category: string;\n};\n\nexport function CategoryIcon(props: Props) {\n  return (props.category && props.category.toLowerCase() !== 'specialist' && props.category.toLowerCase() !== 'specialist retainer'\n    ? <img className='category' style={{height: '1em', marginRight: '10px'}} alt={props.category} src={`/icons/${props.category.toLowerCase()}.svg`}/>\n    : <></>\n);\n}\n","import React from 'react';\nimport { SpecialistIcon } from './SpecialistIcon';\nimport { CategoryIcon } from './CategoryIcon';\nimport { Col } from 'react-bootstrap'\nimport ReactBootstrapSlider from 'react-bootstrap-slider';\nimport { Model } from '../types';\nimport _ from 'lodash'\n\ntype Props = {\n  showSelector?: boolean,\n  onSelectionChanged?: (uuid: string, value: number) => void,\n  model: Model\n};\n\nexport function ModelTitle(props: Props) {\n  const headingStyle = {\n    background: 'lightgrey',\n    color: 'black',\n    padding: '5px',\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-between',\n  }\n  const titleComponents = _.without([\n    props.model.name,\n    props.model.type,\n    (props.model.category === \"Specialist\" || props.model.category === \"Specialist Retainer\"\n      ? props.model.specialism\n      : props.model.category)\n  ],null, \"\");\n  return (\n    <h2 style={headingStyle}>\n      <Col>\n        {(props.model.category === \"Specialist\" || props.model.category === \"Specialist Retainer\") && <SpecialistIcon specialism={props.model.specialism} />}\n        {props.model.category && <CategoryIcon category={props.model.category} />}\n        {props.model.selected > 1 && (\n          <small>{props.model.selected} x </small>\n        )}\n        <strong>{titleComponents[0]} </strong>\n        <small>{_.join(_.slice(titleComponents,1), \", \")}</small>\n      </Col>\n      {props.showSelector && (\n        <Col style={{flexGrow: 0}}>\n          <ReactBootstrapSlider\n            value={props.model.selected}\n            slideStop={(x: any) => props.onSelectionChanged && props.onSelectionChanged(props.model.uuid, x.target.value)}\n            step={1}\n            max={props.model.count}\n            min={0} />\n        </Col>\n      )}\n    </h2>\n  );\n}\n","import React from 'react';\nimport StatsTable from './StatsTable';\nimport AbilityList from './AbilityList';\nimport { Badge } from 'react-bootstrap'\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n  onSelectionChanged: (uuid: string, value: number) => void,\n};\n\nexport function NoPhaseDetails(props: Props) {\n  return (\n    <Row style={{opacity: props.model.selected > 0 ? \"1\" : \"0.25\"}}>\n      <Col>\n        <ModelTitle model={props.model} showSelector onSelectionChanged={props.onSelectionChanged} />\n        {props.model.category === \"Commander\" && <div>Commander specialism: <strong>{props.model.specialism}</strong></div>}\n        <p>{props.model.weapons.map((w) => (w.name)).concat(props.model.wargear.map((w) => (w.name))).join(\", \")}</p>\n        <StatsTable {...props.model.stats} points={props.model.points} />\n        <AbilityList abilities={props.model.abilities} phase=''/>\n      </Col>\n      <Col sm='auto'>\n        <div>\n          <Badge pill variant=\"primary\" className=\"mb-2\" style={{\n            textTransform: \"uppercase\",\n            marginRight: \"10px\",\n            display: \"block\",\n          }}>\n            {props.model.faction}\n          </Badge>\n          {props.model.keywords.map((keyword: string) => (\n            <Badge pill variant=\"secondary\" className=\"mb-2\" style={{\n              textTransform: \"uppercase\",\n              marginRight: \"10px\",\n              display: \"block\",\n            }}>\n              {keyword}\n            </Badge>\n          ))}\n        </div>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react'\nimport CSS from 'csstype'\n\ntype Props = {\n  name: string,\n  value: string,\n  secondaryValue?: string | null,\n}\n\nfunction StatBadge (props: Props) {\n  const badgeStyle: CSS.Properties = {\n    paddingTop: '.2vw',\n    border: '1px solid black',\n    width: '5vw',\n    height: '5vw',\n    background: 'black',\n    color: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    borderRadius: '50%',\n  };\n  const nameStyle: CSS.Properties = {\n    fontSize: '1vw',\n    lineHeight: '1vw',\n  };\n  const valueStyle: CSS.Properties = {\n    fontSize: '3vw',\n    lineHeight: '3vw',\n    fontWeight: 'bold'\n  }\n  return (\n    <div className='statbadge mb-4' style={badgeStyle}>\n      <div className='name' style={nameStyle}>{props.name}</div>\n      <div className='value' style={valueStyle}>\n        { props.value }\n        { props.secondaryValue\n          ? <small>{props.secondaryValue}</small>\n          : <></>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default StatBadge\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport StatBadge from './StatBadge';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function MovementPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='movement'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"M\" value={`${props.model.stats.movement}`}/>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function ScoutingPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='scouting'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasScoutingPhase(model: Model) {\n  return ((model.abilities.filter((x) => (x.phases.indexOf(\"scouting\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function DeploymentPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='deployment'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasDeploymentPhase(model: Model) {\n  return ((model.abilities.filter((x) => (x.phases.indexOf(\"deployment\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function InitiativePhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='initiative'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasInitiativePhase(model: Model) {\n  return ((model.abilities.filter((x) => (x.phases.indexOf(\"initiative\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport { PsychicPower } from '../types';\nimport { Table } from 'react-bootstrap';\nimport _ from 'lodash'\n\ntype Props = {\n  powers: PsychicPower[],\n};\n\nfunction PsychicPowerList(props: Props) {\n  return props.powers.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Power</th>\n          <th>Warp Charge</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(props.powers, ['name']).map((x: PsychicPower) => (\n          <tr>\n            <td>{x.name}</td>\n            <td>{x.charge}</td>\n            <td>{x.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default PsychicPowerList;\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport PsychicPowerList from './PsychicPowerList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function PsychicPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <PsychicPowerList powers={props.model.psychicPowers}/>\n        <AbilityList abilities={props.model.abilities} phase='psychic'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasPsychicPhase(model: Model) {\n  return (model.psychicPowers.length > 0 || (model.abilities.filter((x) => (x.phases.indexOf(\"psychic\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport { Weapon } from '../types';\nimport { Table } from 'react-bootstrap';\nimport _ from 'lodash'\n\ntype Props = {\n  weapons: Weapon[],\n  phase: string,\n  userStrength: number,\n};\n\nfunction WeaponList(props: Props) {\n  const weapons = props.phase === 'shooting'\n    ? props.weapons.filter((x) => (x.type !== \"Melee\"))\n    : props.weapons.filter((x) => (x.type === \"Melee\"))\n\n  return weapons.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Weapon</th>\n          {props.phase === \"shooting\" && <th>Range</th>}\n          {props.phase === \"shooting\" && <th>Type</th>}\n          {props.phase === \"shooting\" && <th>Shots</th>}\n          <th>S</th>\n          <th>AP</th>\n          <th>D</th>\n          <th>Abilities</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(weapons, ['name']).map((x: Weapon) => (\n          <tr>\n            <td style={{\"whiteSpace\": \"nowrap\"}}>{x.name}</td>\n            {props.phase === \"shooting\" && <td>{x.range}&quot;</td>}\n            {props.phase === \"shooting\" && <td style={{\"whiteSpace\": \"nowrap\"}}>{x.type}</td>}\n            {props.phase === \"shooting\" && <td style={{\"whiteSpace\": \"nowrap\"}}>{x.shots}</td>}\n            <td>{x.strength}</td>\n            <td>{x.armourPiercing}</td>\n            <td>{x.damage}</td>\n            <td>{x.abilities}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default WeaponList;\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from './AbilityList';\nimport WeaponList from './WeaponList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function ShootingPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        {hasRangedWeapons(props.model) && <WeaponList weapons={props.model.weapons} phase='shooting' userStrength={props.model.stats.strength}/>}\n        <AbilityList abilities={props.model.abilities} phase='shooting'/>\n      </Col>\n      <Col sm='auto'>\n        {hasRangedWeapons(props.model) && <StatBadge name=\"BS\" value={`${props.model.stats.ballistic_skill}`} secondaryValue=\"+\"/>}\n        <StatBadge name=\"T\" value={`${props.model.stats.toughness}`}/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"Sv\" value={`${props.model.stats.save}`} secondaryValue=\"+\"/>\n        { props.model.stats.invulnerable_save\n          ? <StatBadge name=\"Inv\" value={`${props.model.stats.invulnerable_save}`} secondaryValue=\"+\"/>\n          : <></>\n        }\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasRangedWeapons(model: Model) {\n  return !isNaN(model.stats.ballistic_skill) && (model.weapons.filter((x) => (x.type !== \"Melee\")).length > 0)\n}\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from './AbilityList';\nimport WeaponList from './WeaponList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function FightPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <WeaponList weapons={props.model.weapons} phase='fight' userStrength={props.model.stats.strength}/>\n        <AbilityList abilities={props.model.abilities} phase='fight'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"A\" value={`${props.model.stats.attacks}`} secondaryValue={ props.model.stats.additional_attacks ? `+${props.model.stats.additional_attacks}` : null}/>\n        <StatBadge name=\"T\" value={`${props.model.stats.toughness}`}/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"WS\" value={`${props.model.stats.weapon_skill}`} secondaryValue=\"+\"/>\n        <StatBadge name=\"Sv\" value={`${props.model.stats.save}`} secondaryValue=\"+\"/>\n        { props.model.stats.invulnerable_save\n          ? <StatBadge name=\"Inv\" value={`${props.model.stats.invulnerable_save}`} secondaryValue=\"+\"/>\n          : <></>\n        }\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from './AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function MoralePhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='morale'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"Ld\" value={`${props.model.stats.leadership}`}/>\n      </Col>\n    </Row>\n  );\n}\n","import React, { MouseEvent } from 'react';\nimport { Button } from 'react-bootstrap';\n\ntype Props = {\n  onClose: (event: MouseEvent<HTMLButtonElement>) => void,\n};\n\nexport function CloseButton(props: Props) {\n  return (<Button variant=\"primary\" className='d-print-none' onClick={props.onClose}>Close</Button>);\n}\n","import React, { MouseEvent } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { Model, Ability } from '../types';\nimport Phase from './Phase';\nimport AbilityList from './AbilityList';\nimport { NoPhaseDetails } from './NoPhaseDetails';\nimport { MovementPhaseDetails } from './MovementPhaseDetails';\nimport { ScoutingPhaseDetails, hasScoutingPhase } from './ScoutingPhaseDetails';\nimport { DeploymentPhaseDetails, hasDeploymentPhase } from './DeploymentPhaseDetails';\nimport { InitiativePhaseDetails, hasInitiativePhase } from './InitiativePhaseDetails';\nimport { PsychicPhaseDetails, hasPsychicPhase } from './PsychicPhaseDetails';\nimport { ShootingPhaseDetails } from './ShootingPhaseDetails';\nimport { FightPhaseDetails } from './FightPhaseDetails';\nimport { MoralePhaseDetails } from './MoralePhaseDetails';\nimport { CloseButton } from './CloseButton';\nimport _ from 'lodash'\n\ntype Props = {\n  name: string,\n  models: Model[],\n  forceRules: Ability[],\n  onClose: (event: MouseEvent<HTMLButtonElement>) => void,\n  onSelectionChanged: (uuid: string, value: number) => void,\n};\n\nexport function Roster(props: Props) {\n  // Display models sorted by category and type\n  const sortedModels = _.sortBy(props.models, (x: Model) => ([x.category == null, x.category, x.type]))\n  // Work out which models are actually selected\n  const selectedModels = _.filter(sortedModels, (x: Model) => (x.selected > 0))\n  return <>\n    <h1 style={{\n      background: 'black',\n      color: 'white',\n      padding: '10px',\n      width: '100%',\n      textTransform: 'capitalize',\n      display: 'flex',\n    }}>\n      <Col>\n        {props.name}\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        <small>{_.sumBy(props.models, (model: Model) => (model.selected * model.points))}pts</small>\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        <CloseButton onClose={props.onClose}/>\n      </Col>\n    </h1>\n    <>\n      <AbilityList abilities={props.forceRules} phase=\"\" highlight/>\n      {sortedModels.map((model: Model) => (\n        <NoPhaseDetails model={model} onSelectionChanged={props.onSelectionChanged}/>\n      ))}\n    </>\n    {_.some(selectedModels, hasScoutingPhase) &&\n      <Phase name=\"scouting\">\n        <>\n          <AbilityList abilities={props.forceRules} phase=\"scouting\" highlight/>\n          {selectedModels.map((model: Model) => (\n            hasScoutingPhase(model) &&\n            <ScoutingPhaseDetails model={model}/>\n          ))}\n        </>\n      </Phase>\n    }\n    {_.some(selectedModels, hasDeploymentPhase) &&\n      <Phase name=\"deployment\">\n        <>\n          <AbilityList abilities={props.forceRules} phase=\"deployment\" highlight/>\n          {selectedModels.map((model: Model) => (\n            hasDeploymentPhase(model) &&\n            <DeploymentPhaseDetails model={model}/>\n          ))}\n        </>\n      </Phase>\n    }\n    {_.some(selectedModels, hasInitiativePhase) &&\n      <Phase name=\"initiative\">\n        <>\n          <AbilityList abilities={props.forceRules} phase=\"initiative\" highlight/>\n          {selectedModels.map((model: Model) => (\n            hasInitiativePhase(model) &&\n            <InitiativePhaseDetails model={model}/>\n          ))}\n        </>\n      </Phase>\n    }\n    <Phase name=\"movement\">\n      <>\n        <AbilityList abilities={props.forceRules} phase=\"movement\" highlight/>\n        {selectedModels.map((model: Model) => (\n          <MovementPhaseDetails model={model}/>\n        ))}\n      </>\n    </Phase>\n    {_.some(selectedModels, hasPsychicPhase) &&\n      <Phase name=\"psychic\">\n        <>\n          <AbilityList abilities={props.forceRules} phase=\"psychic\" highlight/>\n          {selectedModels.map((model: Model) => (\n            hasPsychicPhase(model) &&\n            <PsychicPhaseDetails model={model}/>\n          ))}\n        </>\n      </Phase>\n    }\n    <Phase name=\"shooting\">\n      <>\n        <AbilityList abilities={props.forceRules} phase=\"shooting\" highlight />\n        {selectedModels.map((model: Model) => (\n          <ShootingPhaseDetails model={model}/>\n        ))}\n      </>\n    </Phase>\n    <Phase name=\"fight\">\n      <>\n        <AbilityList abilities={props.forceRules} phase=\"fight\" highlight/>\n        {selectedModels.map((model: Model) => (\n          <FightPhaseDetails model={model}/>\n        ))}\n      </>\n    </Phase>\n    <Phase name=\"morale\">\n      <>\n        <AbilityList abilities={props.forceRules} phase=\"morale\" highlight/>\n        {selectedModels.map((model: Model) => (\n          <MoralePhaseDetails model={model}/>\n        ))}\n      </>\n    </Phase>\n  </>\n}\n","import _ from 'lodash'\nimport { Ability } from '../../types'\n\nconst phasePatterns = {\n  scouting: [\n    / scouting /\n  ],\n  deployment: [\n    / before the first battle round /,\n    / set up /,\n    / cult ambush /\n  ],\n  initiative: [\n    / start of each battle round /,\n    / beginning of each battle round /,\n    / at the beginning of the battle round /\n  ],\n  movement: [\n    / movement phase /,\n    / climbs? /,\n    / normal move /,\n    / advances? /,\n    / charges? /,\n    / falls? back /,\n    / reacts? /,\n    / overwatch /,\n    / retreats? /,\n    / fly /,\n    / after this model has charged /,\n    / from reserves? /,\n    / can move across /,\n    / setup within /\n  ],\n  psychic: [\n    / psychic /,\n    / deny the witch /,\n    / perils of the warp /,\n    / psychich / // handle typo\n  ],\n  shooting: [\n    / shooting phase /,\n    / shots? /,\n    / ballistic skill /,\n    / ranged /,\n    / range characteristic /,\n    / half range /,\n    / long range /,\n    / short range /,\n    / grenades? /,\n    / shoots? /,\n    / shooting /,\n    / fire[sd]+ /,\n    / firing /,\n    / obscured /,\n    / obcured /, // handle typo\n    / order(ed)? /,\n    / voice of command /,\n    / invulnerable save /,\n    / demolition charges? /,\n    / liberator autostubs /,\n    / obscurred /, // handle typo\n    / look out sir! /,\n    / pistol /,\n    / heavy weapons?/,\n    / add [0-9] to saving throws /\n  ],\n  fight: [\n    / fight phase /,\n    / fights? /,\n    / weapon skill /,\n    / attacks characteristics? /,\n    / strength characteristics? /,\n    / piles? in /,\n    / consolidates? /,\n    / melee /,\n    / close combat /,\n    / death to the false emperor /,\n    / additional attacks? /,\n    / invulnerable save /,\n    / look out sir! /,\n    / intervening terrain /,\n    / terrain that is between the two models /,\n    / damage characteristic is [0-9] in a battle round in which this model charged /,\n    / add [0-9] to saving throws /\n  ],\n  morale: [\n    / nerve /,\n    / leadership /\n  ]\n}\n\nconst genericPatterns = [\n  / weapon /,\n  / hit rolls? /,\n  / attack(s|ing)? /,\n  / saves? /,\n  / saving throws? /,\n  / injury rolls? /,\n  / wound rolls? /,\n  / loses? a wound /,\n  / fall(ing)? damage /,\n  / the bearer is taken out of action /,\n  / toughness characteristic /,\n  / suffers? a mortal wound /,\n  / taken out of action /,\n  / this weapon/,\n  / reduced to 0 wounds /\n]\n\nconst antiPatterns = {\n  deployment: [\n    / from reserve /\n  ],\n  movement: [\n    / previous movement phase /,\n    / preceding movement phase /,\n    / if the firing model moved /,\n    / moved during the movement phase /,\n    / round in which it charges or is charged /,\n    / in which it made a successful charge /,\n    / even if it fell back in the movement phase /,\n    / model that can fly /,\n    / as if it were the movement phase /,\n    / stunned /,\n    / penalty for moving /,\n    / as if the model had remained stationary /,\n    / demolition charge /\n  ],\n  psychic: [\n    / after all of this weapon's attacks have been resolved /\n  ],\n  shooting: [\n    / when (it|this model) fires overwatch /,\n    / invulnerable save (against attacks made )?in the fight phase /,\n    / as if it were your shooting phase /,\n    / tactical support turret /,\n    / out of action in the shooting phase /,\n    / mordian /\n  ],\n  fight: [\n    / the ordered model immediately fights /,\n    / shots equal to its attacks characteristic /,\n    / stunned /,\n    / target enemies at [0-9]{1,2}\" or less /,\n    / within half range /,\n    / tactical support turret /\n  ],\n  morale: [\n    / target model's leadership /,\n    / weapon against a model which has a leadership /,\n    / subtract 1 from its leadership / // phantasm grenade effect\n  ]\n}\n\nexport const calculatePhases = (description: string) => {\n  const minDesc = ' ' + description.toLowerCase().replace(/[.,)(]/g, '') + ' '\n  const phases : string[] = []\n  _.forIn(phasePatterns, (patterns, phase) => {\n    if (_.some(patterns, (re) => (re.test(minDesc)))) {\n      phases.push(phase)\n    }\n  })\n  // If there's no fight or shoot yet, test some generic patterns that could be either\n  if (!phases.includes('fight') && !phases.includes('shooting')) {\n    if (_.some(genericPatterns, (re) => (re.test(minDesc)))) {\n      phases.push('fight', 'shooting')\n    }\n  }\n  // Remove phases for some patterns that get picked up incorrectly\n  _.forIn(antiPatterns, (patterns, phase) => {\n    if (_.some(patterns, (re) => (re.test(minDesc)))) {\n      _.remove(phases, (p) => (p === phase))\n    }\n  })\n  // OK, done\n  return phases\n}\n\nexport const parseAdditionalAttacks = (description: string) => {\n  const patterns = [\n    /Add ([1-9]{1}) to this model's Attacks characteristic/,\n    / ([1-9]|an|one|two) additional attack/,\n    /(one) \\(and only one\\) attack with this weapon./\n  ]\n  const antiPatterns = [\n    /if a model/,\n    /if the bearer/,\n    /unless/\n  ]\n  return _.sum(_.map(patterns, (pattern) => {\n    const match = description.match(pattern)\n    if (match) {\n      if (_.some(antiPatterns, (re) => (re.test(description)))) {\n        return 0\n      }\n      if (match[1] === 'an' || match[1] === 'one') return 1\n      if (match[1] === 'two') return 2\n      return parseInt(match[1] || match[2])\n    }\n    return 0\n  }))\n}\n\nexport const invulnerableSave = (abilities: Ability[]) => {\n  const patterns = [\n    /models with this ability have a ([1-6]{1})\\+ invulnerable save/,\n    /has a ([1-6]{1})\\+ invulnerable save($|\\.|,| and| instead of)/,\n    /has an invulnerable save of ([1-6]{1})\\+/\n  ]\n  const saves = _.map(abilities, (a) => {\n    return _.min(_.map(patterns, (pattern) => {\n      const match = a.description.match(pattern)\n      if (match) {\n        return parseInt(match[1])\n      }\n      return null\n    }))\n  })\n  return _.min(saves)\n}\n","import { v4 as uuidv4 } from 'uuid'\nimport { DOMParser } from 'xmldom'\nimport _ from 'lodash'\nimport hash from 'node-object-hash'\nimport * as XPath from 'xpath-ts'\nimport { parseAdditionalAttacks, calculatePhases, invulnerableSave } from './parsers/killteam/Abilities'\n\n// useNamespaces is NOT a React hook, so:\n// eslint-disable-next-line\nconst xpath = XPath.useNamespaces({ roster: 'http://www.battlescribe.net/schema/rosterSchema' })\n\nconst stat = (name, model) => {\n  const nodes = xpath(`roster:profiles/roster:profile[@typeName='Model']//roster:characteristic[@name='${name}']`, model)\n  if (nodes.length > 0) {\n    return parseInt(nodes[0].childNodes[0].nodeValue)\n  } else { return '' }\n}\n\nconst weaponStat = (name, weapon, numeric) => {\n  const nodes = xpath(`roster:characteristics/roster:characteristic[@name='${name}']`, weapon)\n  if (nodes.length > 0) {\n    return numeric ? parseInt(nodes[0].childNodes[0].nodeValue) : nodes[0].childNodes[0].nodeValue\n  } else { return '' }\n}\n\nconst points = (model) => {\n  const costNode = xpath('.//roster:costs/roster:cost[@name=\\'pts\\']', model)\n  return _.sumBy(costNode, (x) => parseInt(x.getAttribute('value')))\n}\n\nconst parseForceRule = (rule) => {\n  const description = xpath('roster:description', rule)[0].childNodes[0].nodeValue\n  return {\n    name: rule.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parseAbility = (ability) => {\n  const description = xpath(\".//roster:characteristic[@name='Description']\", ability)[0].childNodes[0].nodeValue\n  return {\n    name: ability.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parseWeapon = (weapon, userStrength) => {\n  let strength = weaponStat('S', weapon, false)\n  if (strength === 'User') {\n    strength = userStrength\n  }\n  let match = /x([0-9]+)/i.exec(strength)\n  if (match) {\n    strength = userStrength * parseInt(match[1])\n  }\n  match = /\\+([0-9]+)/i.exec(strength)\n  if (match) {\n    strength = userStrength + parseInt(match[1])\n  }\n  let weaponType = weaponStat('Type', weapon, false)\n  if (weaponType !== 'Melee') { weaponType = weaponType.split(' ').slice(0, -1).join(' ') }\n  return {\n    name: weapon.getAttribute('name'),\n    range: weaponStat('Range', weapon, true),\n    type: weaponType,\n    shots: weaponStat('Type', weapon, false).split(' ').slice(-1)[0],\n    strength,\n    armourPiercing: weaponStat('AP', weapon, true),\n    damage: weaponStat('D', weapon, false),\n    abilities: weaponStat('Abilities', weapon, false)\n  }\n}\n\nconst parseWargear = (wargear) => {\n  const description = xpath(\".//roster:characteristic[@name='Ability']\", wargear)[0].childNodes[0].nodeValue\n  return {\n    name: wargear.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parsePsychicPower = (power) => {\n  let description = xpath(\".//roster:characteristic[@name='Psychic Power']\", power)[0].childNodes[0].nodeValue\n  const warpChargeDescription = description.match(/warp charge value of ([0-9]+)\\.(.*)/)\n  let charge = null\n  if (warpChargeDescription.length > 2) {\n    charge = parseInt(warpChargeDescription[1])\n    description = warpChargeDescription[2]\n  }\n  return {\n    name: power.getAttribute('name'),\n    charge,\n    description\n  }\n}\n\nexport const additionalAttacks = (weapons, abilities) => {\n  const descriptions = _.map(weapons, (w) => w.abilities).concat(_.map(abilities, (a) => a.description))\n  const attacks = _.map(descriptions, (d) => parseAdditionalAttacks(d))\n  return _.sum(attacks)\n}\n\nconst parseModel = (model) => {\n  const wargear = xpath(\".//roster:profile[@typeName='Wargear']\", model).map(parseWargear)\n  const specialismSelection = xpath(\"roster:selections/roster:selection[roster:selections/roster:selection/roster:profiles/roster:profile/@typeName='Ability']\", model)\n  const abilities = xpath(\".//roster:profile[@typeName='Ability']\", model).map(parseAbility).concat(wargear)\n  const stats = {\n    movement: stat('M', model),\n    weapon_skill: stat('WS', model),\n    ballistic_skill: stat('BS', model),\n    strength: stat('S', model),\n    toughness: stat('T', model),\n    wounds: stat('W', model),\n    attacks: stat('A', model),\n    leadership: stat('Ld', model),\n    save: stat('Sv', model),\n    invulnerable_save: invulnerableSave(abilities)\n  }\n  const closeCombatWeapon = {\n    name: 'Bare fists',\n    range: '-',\n    type: 'Melee',\n    strength: stats.strength,\n    armourPiercing: 0,\n    damage: 1,\n    abilities: 'Default close combat weapon available to all models'\n  }\n  const weapons = xpath(\".//roster:profile[@typeName='Weapon']\", model).map((x) => (parseWeapon(x, stats.strength))).concat([closeCombatWeapon])\n  stats.additional_attacks = additionalAttacks(weapons, abilities)\n  const psychicPowers = xpath(\"roster:selections/roster:selection/roster:profiles/roster:profile[@typeName='Psychic Power']\", model).map(parsePsychicPower)\n  const category = xpath(\"roster:categories/roster:category[@primary='true']\", model)[0].getAttribute('name')\n  const faction = xpath(\"roster:categories/roster:category[@primary='false' and starts-with(@name,'Faction: ')]\", model)\n  const keywords = xpath(\"roster:categories/roster:category[@primary='false' and not(starts-with(@name,'Faction: '))]\", model).map((x) => x.getAttribute('name'))\n  _.remove(keywords, (x) => (x === 'Model'))\n  const details = {\n    name: model.getAttribute('customName'),\n    type: model.getAttribute('name'),\n    category: category === 'Non-specialist' ? null : category,\n    stats,\n    abilities,\n    weapons,\n    wargear,\n    psychicPowers,\n    specialism: specialismSelection.length > 0 ? specialismSelection[0].getAttribute('name') : null,\n    faction: faction.length > 0 ? faction[0].getAttribute('name').split(': ', 2)[1] : null,\n    keywords,\n    points: points(model)\n  }\n  return { ...details, hash: hash([]).hash(details) }\n}\n\nexport const parseBattlescribeXML = (xml) => {\n  const models = []\n  const doc = new DOMParser().parseFromString(xml)\n  const name = xpath('/roster:roster', doc)[0].getAttribute('name')\n  const forceRules = xpath('//roster:force/roster:rules/roster:rule', doc).map(parseForceRule)\n  for (const category of xpath('//roster:force/roster:categories/roster:category', doc)) {\n    const categoryId = category.getAttribute('entryId')\n    for (const model of xpath(`//roster:selection[@type='model' and roster:categories/roster:category/@entryId='${categoryId}']`, doc)) {\n      models.push(parseModel(model))\n    }\n  }\n  const uniqueModels = _.groupBy(models, (m) => m.hash)\n  return {\n    name,\n    forceRules,\n    models: _.map(uniqueModels, (model) => ({\n      ...model[0],\n      uuid: uuidv4(),\n      count: model.length,\n      selected: model.length\n    }))\n  }\n}\n","import { parseBattlescribeXML } from './BattlescribeParser'\nimport JSZip from 'jszip'\n\nconst unzip = async (file) => {\n  if (file[0] !== 'P') {\n    return file\n  } else {\n    const jszip = new JSZip()\n    const zip = await jszip.loadAsync(file)\n    return zip.file(/[^/]+\\.ros/)[0].async('string') // Get roster files that are in the root\n  }\n}\n\nconst parseFile = async (file) => {\n  const xml = await unzip(file)\n  return parseBattlescribeXML(xml)\n}\n\nexport const loadFile = async (file) => {\n  const reader = new FileReader()\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort()\n      reject(new DOMException('Problem parsing input file.'))\n    }\n    reader.onloadend = async () => {\n      resolve(parseFile(reader.result))\n    }\n    reader.readAsBinaryString(file)\n  })\n}\n\nexport const loadFiles = (files) => {\n  return loadFile(files[0])\n}\n","import React, { useState } from 'react'\nimport Homepage from './components/Homepage'\nimport { Roster } from './components/Roster'\nimport { Container } from 'react-bootstrap'\nimport { loadFiles } from './FileLoader'\nimport { Model, Ability } from './types'\n\nexport function App() {\n\n  const [name, setName] = useState<string>(\"\")\n  const [models, setModels] = useState<Model[]>([])\n  const [forceRules, setForceRules] = useState<Ability[]>([])\n\n  const handleUpload = async (acceptedFiles: File[]) => {\n    const roster = await loadFiles(acceptedFiles);\n    setName(roster.name)\n    setForceRules(roster.forceRules)\n    setModels(roster.models)\n  }\n\n  const handleClose = () => {\n    setForceRules([])\n    setModels([])\n    setName(\"\")\n  }\n\n  const handleSelectionChanged = (uuid: string, selectedCount: number) => (\n    setModels(models.map((model: Model) => (\n      model.uuid !== uuid\n        ? model\n        : {\n            ...model,\n            selected: selectedCount\n          }\n    )))\n  )\n\n  return (\n    <Container fluid='lg'>\n      {models.length === 0\n        ? <Homepage onUpload={handleUpload} />\n        : <Roster name={name} models={models} onClose={handleClose} forceRules={forceRules} onSelectionChanged={handleSelectionChanged} />}\n    </Container>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport * as Sentry from \"@sentry/react\";\n// import { Integrations } from \"@sentry/tracing\";\n\nSentry.init({\n  dsn: \"https://6fe3e632b45a44c086068e13f3b1a783@o464596.ingest.sentry.io/5473956\",\n  // integrations: [\n  //   new Integrations.BrowserTracing(),\n  // ],\n  // tracesSampleRate: 0.0,\n});\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// Enable offline use with a service worker\n// See https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.register()\n"],"sourceRoot":""}