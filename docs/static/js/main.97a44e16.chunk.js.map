{"version":3,"sources":["StatsTable.js","SpecialistIcon.tsx","CategoryIcon.tsx","Model.tsx","App.js","serviceWorker.js","index.js"],"names":["StatsTable","props","movement","weapon_skill","ballistic_skill","strength","toughness","wounds","attacks","leadership","save","SpecialistIcon","className","specialism","toLowerCase","CategoryIcon","category","Model","model","name","type","faction","keywords","map","keyword","stats","abilities","x","description","indexOf","weapons","pluralize","require","_","hash","dom","DOMParser","xpath","useNamespaces","stat","nodes","length","parseInt","childNodes","nodeValue","weaponStat","weapon","parseAbility","ability","getAttribute","parseWeapon","range","parseModel","App","parseFile","event","models","doc","parseFromString","target","result","categoryId","singular","push","setState","uniqBy","fileHandler","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onloadend","readAsText","state","onDrop","this","getRootProps","getInputProps","sortBy","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.97a44e16.chunk.js","sourcesContent":["import React from 'react';\n\nfunction StatsTable(props) {\n  return (\n    <table>\n    <tr>\n      <th>{\"M\"}</th>\n      <th>{\"WS\"}</th>\n      <th>{\"BS\"}</th>\n      <th>{\"S\"}</th>\n      <th>{\"T\"}</th>\n      <th>{\"W\"}</th>\n      <th>{\"A\"}</th>\n      <th>{\"Ld\"}</th>\n      <th>{\"Sv\"}</th>\n    </tr>\n    <tr>\n      <td>{props.movement}&quot;</td>\n      <td>{props.weapon_skill}+</td>\n      <td>{props.ballistic_skill}+</td>\n      <td>{props.strength}</td>\n      <td>{props.toughness}</td>\n      <td>{props.wounds}</td>\n      <td>{props.attacks}</td>\n      <td>{props.leadership}</td>\n      <td>{props.save}+</td>\n    </tr>\n  </table>\n  );\n}\n\nexport default StatsTable;\n","import React from 'react';\n\ntype Props = {\n  specialism: string;\n};\n\nexport function SpecialistIcon(props: Props) {\n  const icons: {\n    [index: string]: string;\n  } = {\n    'combat': '‚öîÔ∏è',\n    'comms': 'üìû',\n    'demolitions': 'üí£',\n    'ferocity': 'ü¶ñ',\n    'fortitude': 'üõ°Ô∏è',\n    'heavy': 'üí•',\n    'leadership': 'üé©',\n    'logistics': 'üöö',\n    'medic': '‚öïÔ∏è',\n    'melee': '‚öîÔ∏è',\n    'psyker': 'üß†',\n    'scout': 'üî¶',\n    'shooting': 'üî´',\n    'stealth': 'üëª',\n    'strategist': 'üó∫Ô∏è',\n    'strength': 'üí™',\n    'sniper': 'üéØ',\n    'veteran': 'üë¥',\n    'zealot': 'üò§'\n  };\n  return (<span className='specialism'>\n    {icons[props.specialism.toLowerCase()]}\n  </span>);\n}\n","import React from 'react';\n\ntype Props = {\n  category: string;\n};\n\nexport function CategoryIcon(props: Props) {\n  const icons: {\n    [index: string]: string;\n  } = {\n    'commander': 'üëë',\n    'leader': 'üé©',\n    'specialist': '',\n  };\n  return (<span className='category'>\n    {icons[props.category.toLowerCase()]}\n  </span>);\n}\n","import React from 'react';\nimport StatsTable from './StatsTable';\nimport { SpecialistIcon } from './SpecialistIcon';\nimport { CategoryIcon } from './CategoryIcon';\n\ntype Props = {\n  model: {\n    type: string,\n    name: string,\n    category: string,\n    specialism: string,\n    stats: {\n      movement: number,\n      weapon_skill: number,\n      ballistic_skill: number,\n      strength: number,\n      toughness: number,\n      wounds: number,\n      attacks: number,\n      leadership: number,\n      save: number,\n    },\n    abilities: [{\n      name: string,\n      description: string,\n    }],\n    weapons: [{\n      name: string,\n      range: number,\n      strength: number,\n    }],\n    faction: string,\n    keywords: [string],\n  },\n};\n\nfunction Model(props: Props ) {\n  return (\n    <div className=\"model\">\n      <h1>\n        {props.model.category && <CategoryIcon category={props.model.category} />}\n        {' '}\n        {props.model.specialism && <SpecialistIcon specialism={props.model.specialism} />}\n        {' '}\n        {props.model.name &&\n          <em>{props.model.name} - </em>\n        }\n        {props.model.type}\n      </h1>\n      <div>\n        {props.model.faction}\n      </div>\n      <div>\n        Keywords: {props.model.keywords.map((keyword: string) => (\n          <span className='keyword'>\n            {keyword}\n          </span>\n        ))}\n      </div>\n      <StatsTable {...props.model.stats}/>\n      <dl>\n        {props.model.abilities.map((x) => (\n          <>\n            <dt>{x.name}</dt>\n            <dd>{x.description}</dd>\n          </>\n        ))}\n      </dl>\n      {props.model.keywords.indexOf('Psyker') > 0 && <h2>\n        Psychic\n      </h2>}\n      <h2>\n        Fight\n      </h2>\n      <h2>\n        Shoot\n      </h2>\n      <ul>\n        {props.model.weapons.map((x) => (\n          <li>{x.name}</li>\n        ))}\n      </ul>\n      <h2>\n        Morale\n      </h2>\n    </div>\n  );\n}\n\nexport default Model;\n","import React from 'react';\nimport Model from './Model';\nimport Dropzone from 'react-dropzone';\nconst pluralize = require('pluralize');\nconst _ = require('lodash');\nconst hash = require('node-object-hash')([]);\nconst dom = require('xmldom').DOMParser;\nconst xpath = require('xpath').useNamespaces({\"roster\": \"http://www.battlescribe.net/schema/rosterSchema\"});\n\nconst stat = (name, model) => {\n  const nodes = xpath(`roster:profiles/roster:profile[@typeName='Model']//roster:characteristic[@name='${name}']`, model);\n  if (nodes.length > 0) {\n    return parseInt(nodes[0].childNodes[0].nodeValue);\n  }\n  else\n    return \"\";\n};\n\nconst weaponStat = (name, weapon) => {\n  const nodes = xpath(`roster:characteristics/roster:characteristic[@name='${name}']`, weapon);\n  if (nodes.length > 0) {\n    return parseInt(nodes[0].childNodes[0].nodeValue);\n  }\n  else\n    return \"\";\n};\n\nconst parseAbility = (ability) => ({\n  name: ability.getAttribute('name'),\n  description: xpath(\"roster:characteristics/roster:characteristic[@name='Description']\", ability)[0].childNodes[0].nodeValue,\n});\n\nconst parseWeapon = (weapon) => ({\n  name: weapon.getAttribute('name'),\n  range: weaponStat(\"Range\", weapon),\n  strength: weaponStat(\"S\", weapon),\n});\n\nconst parseModel = (model) => {\n  const abilities = xpath(\"roster:profiles/roster:profile[@typeName='Ability']\", model).map(parseAbility);\n  const weapons = xpath(\"roster:selections/roster:selection/roster:profiles/roster:profile[@typeName='Weapon']\", model).map(parseWeapon);\n  return {\n    name: model.getAttribute('customName'),\n    type: model.getAttribute('name'),\n    category: xpath(\"roster:categories/roster:category[@primary='true']\", model)[0].getAttribute('name'),\n    stats: {\n      movement: stat(\"M\", model),\n      weapon_skill: stat(\"WS\", model),\n      ballistic_skill: stat(\"BS\", model),\n      strength: stat(\"S\", model),\n      toughness: stat(\"T\", model),\n      wounds: stat(\"W\", model),\n      attacks: stat(\"A\", model),\n      leadership: stat(\"Ld\", model),\n      save: stat(\"Sv\", model),\n    },\n    abilities,\n    weapons,\n    faction: xpath(\"roster:categories/roster:category[@primary='false' and starts-with(@name,'Faction: ')]\", model)[0].getAttribute('name'),\n    keywords: xpath(\"roster:categories/roster:category[@primary='false' and not(starts-with(@name,'Faction: '))]\", model).map((x) => x.getAttribute('name')),\n  };\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      models: []\n    };\n  }\n\n  parseFile = (event) => {\n    var models = [];\n    var doc = new dom().parseFromString(event.target.result);\n    for (const category of xpath(\"//roster:force/roster:categories/roster:category\", doc)) {\n      const categoryId = category.getAttribute('entryId');\n      const categoryName = pluralize.singular(category.getAttribute('name'));\n      for (const model of xpath(`//roster:selection[@type='model' and roster:categories/roster:category/@entryId='${categoryId}']`, doc)) {\n        models.push(parseModel(model));\n      }\n    }\n    this.setState({models: _.uniqBy(models, hash.hash)});\n  };\n\n  fileHandler = (acceptedFiles) => {\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader()\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onloadend = this.parseFile;\n      reader.readAsText(file)\n    })\n  };\n\n  render() {\n    return (<>\n      <Dropzone onDrop={this.fileHandler}>\n        {({getRootProps, getInputProps}) => (\n          <section>\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <p>Drop a .ros file here, or click to select one</p>\n            </div>\n          </section>\n        )}\n      </Dropzone>\n      {\n        // Display models sorted by category and type\n        _.sortBy(this.state.models, (x) => ([x.category == null, x.category, x.type])).map((model) => (\n          <Model model={model}>\n          </Model>\n        ))\n      }\n    </>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}