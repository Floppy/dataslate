{"version":3,"sources":["components/Intro.tsx","components/Homepage.tsx","components/Phase.tsx","components/StatsTable.tsx","components/AbilityList.tsx","components/SpecialistIcon.tsx","components/CategoryIcon.tsx","components/ModelTitle.tsx","components/NoPhaseDetails.tsx","components/StatBadge.tsx","components/MovementPhaseDetails.tsx","components/PsychicPowerList.tsx","components/PsychicPhaseDetails.tsx","components/WeaponList.tsx","components/ShootingPhaseDetails.tsx","components/FightPhaseDetails.tsx","components/MoralePhaseDetails.tsx","components/CloseButton.tsx","components/Roster.tsx","BattlescribeParser.js","FileLoader.js","App.jsx","serviceWorker.js","index.tsx"],"names":["Intro","Jumbotron","className","Homepage","props","Row","Col","Card","Title","Text","href","onDrop","onUpload","accept","getRootProps","getInputProps","Alert","variant","style","textAlign","Phase","pageBreakAfter","background","color","padding","width","textTransform","display","name","flexGrow","note","children","StatsTable","Table","striped","bordered","size","movement","weapon_skill","isNaN","ballistic_skill","strength","toughness","wounds","attacks","additional_attacks","leadership","save","invulnerable_save","_","require","AbilityList","abilities","phase","filter","x","phases","indexOf","length","sortBy","map","description","SpecialistIcon","specialism","height","marginRight","alt","src","toLowerCase","CategoryIcon","category","ModelTitle","titleComponents","without","model","type","justifyContent","count","join","slice","showPoints","points","NoPhaseDetails","stats","sm","Badge","pill","faction","keywords","keyword","StatBadge","paddingTop","border","flexDirection","borderRadius","fontSize","lineHeight","fontWeight","value","secondaryValue","MovementPhaseDetails","PsychicPowerList","powers","charge","PsychicPhaseDetails","psychicPowers","hasPsychicPhase","WeaponList","weapons","range","armourPiercing","damage","ShootingPhaseDetails","userStrength","FightPhaseDetails","MoralePhaseDetails","CloseButton","Button","onClick","onClose","Roster","sortedModels","models","some","hasShootingPhase","DOMParser","xpath","useNamespaces","roster","hash","stat","nodes","parseInt","childNodes","nodeValue","weaponStat","weapon","numeric","costNode","sumBy","getAttribute","calculatePhases","test","push","uniq","sort","parseForceRule","rule","parseAbility","ability","parseWargear","wargear","parsePsychicPower","power","warpChargeDescription","match","invulnerableSave","saveRegexp","saves","a","min","parseModel","forceRules","specialismSelection","concat","closeCombatWeapon","exec","parseWeapon","descriptions","w","attackRegexp","d","sum","additionalAttacks","remove","details","split","parseBattlescribeXML","xml","doc","parseFromString","categoryId","uniqueModels","groupBy","m","JSZip","parseFile","file","Promise","resolve","loadAsync","then","zip","async","unzip","loadFile","reader","FileReader","reject","onerror","abort","DOMException","onloadend","result","readAsBinaryString","App","initialState","state","handleUpload","acceptedFiles","files","setState","Container","fluid","this","React","Component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0d3e841f.chunk.js","sourcesContent":["import React from 'react';\nimport { Jumbotron } from 'react-bootstrap'\n\nfunction Intro() {\n  return <Jumbotron>\n    <h1>\n      Scriptorum\n    </h1>\n    <p className='lead'>\n      Easy-to-use datasheets for Warhammer 40,000: Kill Team\n    </p>\n    <ul>\n      <li>All the info you need, when you need it</li>\n      <li>Stats and abilities organised by phase</li>\n      <li>No wasted space for identical mdels</li>\n      <li>Designed for print or screen</li>\n      <li>Clear, uncluttered layout for easy reference</li>\n    </ul>\n  </Jumbotron>\n}\n\nexport default Intro;\n","import React from 'react';\nimport Dropzone from 'react-dropzone'\nimport Intro from './Intro'\nimport { Row, Col, Alert, Card } from 'react-bootstrap'\n\ntype Props = {\n  onUpload: any,\n}\n\nfunction Homepage(props: Props) {\n  return <>\n    <Intro />\n    <Row>\n      <Col>\n        <Card>\n          <Card.Title>Step 1</Card.Title>\n          <Card.Text>\n            Build your force in{' '}\n            <a href='https://battlescribe.net/'>Battlescribe</a>\n          </Card.Text>\n        </Card>\n      </Col>\n      <Col>\n        <Card>\n          <Card.Title>Step 2</Card.Title>\n          <Card.Text><Dropzone onDrop={props.onUpload} accept='.ros,.rosz'>\n            {({ getRootProps, getInputProps }) => (\n              <Alert variant='primary' {...getRootProps()} style={{ textAlign: 'center' }}>\n                <input {...getInputProps()} />\n                <p>Drop your roster file here, or click to select one.</p>\n                <p><em>(*.rosz and *.ros accepted)</em></p>\n              </Alert>\n            )}\n          </Dropzone></Card.Text>\n        </Card>\n      </Col>\n      <Col>\n        <Card>\n          <Card.Title>Step 3</Card.Title>\n          <Card.Text>Print out, and dominate your foes!</Card.Text>\n        </Card>\n      </Col>\n    </Row>\n    <footer>\n      Built with <a href='https://reactjs.org/'>React</a> and <a href='https://getbootstrap.com'>Bootstrap</a>.\n      Icons courtesy of <a href='https://killteam.app/'>Companion for Kill Team</a>.\n      Released as <a href='https://github.com/floppy/scriptorum'>Open Source</a>,\n      report problems <a href='https://github.com/floppy/scriptorum/issues/new'>on GitHub</a>.\n    </footer>\n  </>\n}\n\nexport default Homepage;\n","import React from 'react';\nimport { Col } from 'react-bootstrap'\n\ntype Props = {\n  name: string,\n  note?: string,\n  children: React.ReactNode,\n};\n\nfunction Phase(props: Props) {\n  return <div style={{\n    pageBreakAfter: 'always',\n  }}>\n    <h1 style={{\n      background: 'black',\n      color: 'white',\n      padding: '10px',\n      width: '100%',\n      textTransform: 'capitalize',\n      display: 'flex',\n    }}>\n      <Col>\n        {props.name} Phase\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        {props.note && (\n          <small>{props.note}</small>\n        )}\n      </Col>\n    </h1>\n    {props.children}\n  </div>\n}\n\nexport default Phase;\n","import React from 'react'\nimport { Table } from 'react-bootstrap'\n\ntype Props = {\n  movement: number,\n  weapon_skill: number,\n  ballistic_skill: number,\n  strength: number,\n  toughness: number,\n  wounds: number,\n  attacks: number,\n  additional_attacks: number,\n  leadership: number,\n  save: number,\n  invulnerable_save: number,\n}\n\nfunction StatsTable (props: Props) {\n  return (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>M</th>\n          <th>WS</th>\n          <th>BS</th>\n          <th>S</th>\n          <th>T</th>\n          <th>W</th>\n          <th>A</th>\n          <th>Ld</th>\n          <th>Sv</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{props.movement}&quot;</td>\n          <td>{props.weapon_skill}+</td>\n          <td>{isNaN(props.ballistic_skill) ? '-' : props.ballistic_skill+\"+\"}</td>\n          <td>{props.strength}</td>\n          <td>{props.toughness}</td>\n          <td>{props.wounds}</td>\n          <td>{props.attacks}\n          { props.additional_attacks ? <strong>{' +'}{props.additional_attacks}</strong> : null}\n          </td>\n          <td>{props.leadership}</td>\n          <td>{props.save}+\n          { props.invulnerable_save ? <>{' / '}<strong>{props.invulnerable_save}++</strong></> : null}</td>\n        </tr>\n      </tbody>\n    </Table>\n  )\n}\n\nexport default StatsTable\n","import React from 'react';\nimport { Ability } from '../types';\nimport { Table } from 'react-bootstrap';\n\nconst _ = require('lodash')\n\ntype Props = {\n  abilities: Ability[],\n  phase: string,\n};\n\nfunction AbilityList(props: Props) {\n  const abilities = props.phase ?\n    props.abilities.filter((x) => (x.phases.indexOf(props.phase) >= 0)) :\n    props.abilities.filter((x) => (x.phases.length === 0))\n\n  return abilities.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Ability</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(abilities, ['name']).map((x: Ability) => (\n          <tr>\n            <td>{x.name}</td>\n            <td>{x.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default AbilityList;\n","import React from 'react';\n\ntype Props = {\n  specialism: string;\n};\n\nexport function SpecialistIcon(props: Props) {\n  return (props.specialism\n    ? <img className='specialism' style={{height: '1em', marginRight: '10px'}} alt={props.specialism} src={`/scriptorum/icons/${props.specialism.toLowerCase()}.svg`}/>\n    : <></>\n  );\n}\n","import React from 'react';\n\ntype Props = {\n  category: string;\n};\n\nexport function CategoryIcon(props: Props) {\n  return (props.category && props.category.toLowerCase() !== 'specialist'\n    ? <img className='category' style={{height: '1em', marginRight: '10px'}} alt={props.category} src={`/scriptorum/icons/${props.category.toLowerCase()}.svg`}/>\n    : <></>\n);\n}\n","import React from 'react';\nimport { SpecialistIcon } from './SpecialistIcon';\nimport { CategoryIcon } from './CategoryIcon';\nimport { Col } from 'react-bootstrap'\n\nimport { Model } from '../types';\n\nconst _ = require('lodash')\n\ntype Props = {\n  showPoints?: boolean,\n  model: Model\n};\n\nexport function ModelTitle(props: Props) {\n  const headingStyle = {\n    background: 'lightgrey',\n    color: 'black',\n    padding: '5px',\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-between',\n  }\n  const titleComponents = _.without([\n    props.model.name,\n    props.model.type,\n    (props.model.category === \"Specialist\"\n      ? props.model.specialism\n      : props.model.category)\n  ],null, \"\");\n  return (\n    <h2 style={headingStyle}>\n      <Col>\n        {props.model.category === \"Specialist\" && <SpecialistIcon specialism={props.model.specialism} />}\n        {props.model.category && <CategoryIcon category={props.model.category} />}\n        <strong>{titleComponents[0]} </strong>\n        {props.model.count > 1 && (\n          <small>x{props.model.count}</small>\n        )}\n        <small>{_.join(_.slice(titleComponents,1), \", \")}</small>\n      </Col>\n      {props.showPoints && (\n        <Col style={{flexGrow: 0, textAlign: 'right'}}>\n          <small>{props.model.points}pts</small>\n        </Col>\n      )}\n    </h2>\n  );\n}\n","import React from 'react';\nimport StatsTable from './StatsTable';\nimport AbilityList from './AbilityList';\nimport { Badge } from 'react-bootstrap'\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function NoPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model} showPoints={true}/>\n        {props.model.category === \"Commander\" && <div>Commander specialism: <strong>{props.model.specialism}</strong></div>}\n        <StatsTable {...props.model.stats}/>\n        <AbilityList abilities={props.model.abilities} phase=''/>\n      </Col>\n      <Col sm='auto'>\n        <div>\n          <Badge pill variant=\"primary\" className=\"mb-2\" style={{\n            textTransform: \"uppercase\",\n            marginRight: \"10px\",\n            display: \"block\",\n          }}>\n            {props.model.faction}\n          </Badge>\n          {props.model.keywords.map((keyword: string) => (\n            <Badge pill variant=\"secondary\" className=\"mb-2\" style={{\n              textTransform: \"uppercase\",\n              marginRight: \"10px\",\n              display: \"block\",\n            }}>\n              {keyword}\n            </Badge>\n          ))}\n        </div>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react'\nimport CSS from 'csstype'\n\ntype Props = {\n  name: string,\n  value: string,\n  secondaryValue?: string | null,\n}\n\nfunction StatBadge (props: Props) {\n  const badgeStyle: CSS.Properties = {\n    paddingTop: '.2vw',\n    border: '1px solid black',\n    width: '5vw',\n    height: '5vw',\n    background: 'black',\n    color: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    borderRadius: '50%',\n  };\n  const nameStyle: CSS.Properties = {\n    fontSize: '1vw',\n    lineHeight: '1vw',\n  };\n  const valueStyle: CSS.Properties = {\n    fontSize: '3vw',\n    lineHeight: '3vw',\n    fontWeight: 'bold'\n  }\n  return (\n    <div className='statbadge mb-4' style={badgeStyle}>\n      <div className='name' style={nameStyle}>{props.name}</div>\n      <div className='value' style={valueStyle}>\n        { props.value }\n        { props.secondaryValue\n          ? <small>{props.secondaryValue}</small>\n          : <></>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default StatBadge\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport StatBadge from './StatBadge';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function MovementPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='movement'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"M\" value={`${props.model.stats.movement}`}/>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { PsychicPower } from '../types';\nimport { Table } from 'react-bootstrap';\n\nconst _ = require('lodash')\n\ntype Props = {\n  powers: PsychicPower[],\n};\n\nfunction PsychicPowerList(props: Props) {\n  return props.powers.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Power</th>\n          <th>Warp Charge</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(props.powers, ['name']).map((x: PsychicPower) => (\n          <tr>\n            <td>{x.name}</td>\n            <td>{x.charge}</td>\n            <td>{x.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default PsychicPowerList;\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport PsychicPowerList from './PsychicPowerList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function PsychicPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <PsychicPowerList powers={props.model.psychicPowers}/>\n        <AbilityList abilities={props.model.abilities} phase='psychic'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasPsychicPhase(model: Model) {\n  return (model.psychicPowers.length > 0 || (model.abilities.filter((x) => (x.phases.indexOf(\"psychic\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport { Weapon } from '../types';\nimport { Table } from 'react-bootstrap';\n\nconst _ = require('lodash')\n\ntype Props = {\n  weapons: Weapon[],\n  phase: string,\n  userStrength: number,\n};\n\nfunction WeaponList(props: Props) {\n  const weapons = props.phase === 'shooting'\n    ? props.weapons.filter((x) => (x.type !== \"Melee\"))\n    : props.weapons.filter((x) => (x.type === \"Melee\"))\n\n  return weapons.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Weapon</th>\n          {props.phase === \"shooting\" && <th>Range</th>}\n          {props.phase === \"shooting\" && <th>Type</th>}\n          <th>S</th>\n          <th>AP</th>\n          <th>D</th>\n          <th>Abilities</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(weapons, ['name']).map((x: Weapon) => (\n          <tr>\n            <td style={{\"whiteSpace\": \"nowrap\"}}>{x.name}</td>\n            {props.phase === \"shooting\" && <td>{x.range}&quot;</td>}\n            {props.phase === \"shooting\" && <td style={{\"whiteSpace\": \"nowrap\"}}>{x.type}</td>}\n            <td>{x.strength}</td>\n            <td>{x.armourPiercing}</td>\n            <td>{x.damage}</td>\n            <td>{x.abilities}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default WeaponList;\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from './AbilityList';\nimport WeaponList from './WeaponList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function ShootingPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <WeaponList weapons={props.model.weapons} phase='shooting' userStrength={props.model.stats.strength}/>\n        <AbilityList abilities={props.model.abilities} phase='shooting'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"BS\" value={`${props.model.stats.ballistic_skill}`} secondaryValue=\"+\"/>\n        <StatBadge name=\"T\" value={`${props.model.stats.toughness}`}/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"Sv\" value={`${props.model.stats.save}`} secondaryValue=\"+\"/>\n        { props.model.stats.invulnerable_save\n          ? <StatBadge name=\"Inv\" value={`${props.model.stats.invulnerable_save}`} secondaryValue=\"+\"/>\n          : <></>\n        }\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasShootingPhase(model: Model) {\n  return !isNaN(model.stats.ballistic_skill) && (model.weapons.filter((x) => (x.type !== \"Melee\")).length > 0)\n}\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from './AbilityList';\nimport WeaponList from './WeaponList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function FightPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <WeaponList weapons={props.model.weapons} phase='fight' userStrength={props.model.stats.strength}/>\n        <AbilityList abilities={props.model.abilities} phase='fight'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"A\" value={`${props.model.stats.attacks}`} secondaryValue={ props.model.stats.additional_attacks ? `+${props.model.stats.additional_attacks}` : null}/>\n        <StatBadge name=\"T\" value={`${props.model.stats.toughness}`}/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"WS\" value={`${props.model.stats.weapon_skill}`} secondaryValue=\"+\"/>\n        <StatBadge name=\"Sv\" value={`${props.model.stats.save}`} secondaryValue=\"+\"/>\n        { props.model.stats.invulnerable_save\n          ? <StatBadge name=\"Inv\" value={`${props.model.stats.invulnerable_save}`} secondaryValue=\"+\"/>\n          : <></>\n        }\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from './AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function MoralePhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='morale'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"Ld\" value={`${props.model.stats.leadership}`}/>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\ntype Props = {\n  onClose: any,\n};\n\nexport function CloseButton(props: Props) {\n  return (<Button variant=\"primary\" className='d-print-none' onClick={props.onClose}>Close</Button>);\n}\n","import React from 'react';\nimport { Col } from 'react-bootstrap';\nimport { Model } from '../types';\nimport Phase from './Phase';\nimport { NoPhaseDetails } from './NoPhaseDetails';\nimport { MovementPhaseDetails } from './MovementPhaseDetails';\nimport { PsychicPhaseDetails, hasPsychicPhase } from './PsychicPhaseDetails';\nimport { ShootingPhaseDetails, hasShootingPhase } from './ShootingPhaseDetails';\nimport { FightPhaseDetails } from './FightPhaseDetails';\nimport { MoralePhaseDetails } from './MoralePhaseDetails';\nimport { CloseButton } from './CloseButton';\n\nconst _ = require('lodash')\n\ntype Props = {\n  name: string,\n  points: number,\n  models: Model[],\n  onClose: any,\n};\n\nfunction Roster(props: Props) {\n  // Display models sorted by category and type\n  const sortedModels = _.sortBy(props.models, (x: Model) => ([x.category == null, x.category, x.type]))\n  return <>\n    <h1 style={{\n      background: 'black',\n      color: 'white',\n      padding: '10px',\n      width: '100%',\n      textTransform: 'capitalize',\n      display: 'flex',\n    }}>\n      <Col>\n        {props.name}\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        <small>{props.points}pts</small>\n      </Col>\n      <Col style={{flexGrow: 0, textAlign: 'right'}}>\n        <CloseButton onClose={props.onClose}/>\n      </Col>\n    </h1>\n    <>\n      {sortedModels.map((model: Model) => (\n        <NoPhaseDetails model={model}/>\n      ))}\n    </>\n    <Phase name=\"movement\">\n      {sortedModels.map((model: Model) => (\n        <MovementPhaseDetails model={model}/>\n      ))}\n    </Phase>\n    {_.some(sortedModels, hasPsychicPhase) &&\n      <Phase name=\"psychic\">\n        {sortedModels.map((model: Model) => (\n          hasPsychicPhase(model) &&\n          <PsychicPhaseDetails model={model}/>\n        ))}\n      </Phase>\n    }\n    <Phase name=\"shooting\">\n      {sortedModels.map((model: Model) => (\n        hasShootingPhase(model) &&\n          <ShootingPhaseDetails model={model}/>\n      ))}\n    </Phase>\n    <Phase name=\"fight\">\n      {sortedModels.map((model: Model) => (\n        <FightPhaseDetails model={model}/>\n      ))}\n    </Phase>\n    <Phase name=\"morale\">\n      {sortedModels.map((model: Model) => (\n        <MoralePhaseDetails model={model}/>\n      ))}\n    </Phase>\n  </>\n}\n\nexport default Roster;\n","const DOMParser = require('xmldom').DOMParser\nconst xpath = require('xpath-ts').useNamespaces({ roster: 'http://www.battlescribe.net/schema/rosterSchema' })\n\nconst _ = require('lodash')\nconst hash = require('node-object-hash')([])\n\nconst stat = (name, model) => {\n  const nodes = xpath(`roster:profiles/roster:profile[@typeName='Model']//roster:characteristic[@name='${name}']`, model)\n  if (nodes.length > 0) {\n    return parseInt(nodes[0].childNodes[0].nodeValue)\n  } else { return '' }\n}\n\nconst weaponStat = (name, weapon, numeric) => {\n  const nodes = xpath(`roster:characteristics/roster:characteristic[@name='${name}']`, weapon)\n  if (nodes.length > 0) {\n    return numeric ? parseInt(nodes[0].childNodes[0].nodeValue) : nodes[0].childNodes[0].nodeValue\n  } else { return '' }\n}\n\nconst points = (model) => {\n  const costNode = xpath('.//roster:costs/roster:cost[@name=\\'pts\\']', model)\n  return _.sumBy(costNode, (x) => parseInt(x.getAttribute('value')))\n}\n\nexport const calculatePhases = (description) => {\n  const phases = []\n  if (/attacks characteristic/i.test(description)) { phases.push('fight') }\n  if (/strength characteristic/i.test(description)) { phases.push('fight') }\n  if (/ ranged /i.test(description)) { phases.push('shooting') }\n  if (/fight phase/i.test(description)) { phases.push('fight') }\n  if (/ charge/i.test(description)) { phases.push('movement') }\n  if (/ advance /i.test(description)) { phases.push('movement') }\n  if (/ move /i.test(description)) { phases.push('movement') }\n  if (/psychic/i.test(description)) { phases.push('psychic') }\n  if (/ shoot/i.test(description)) { phases.push('shooting') }\n  if (/obscured/i.test(description)) { phases.push('shooting') }\n  if (/nerve/i.test(description)) { phases.push('morale') }\n  if (/leadership/i.test(description)) { phases.push('morale') }\n  if (/ hit roll/i.test(description)) { phases.push('fight') && phases.push('shooting') }\n  if (/ reserve/i.test(description)) { phases.push('movement') }\n  return _.uniq(phases).sort()\n}\n\nconst parseForceRule = (rule) => {\n  const description = xpath('roster:description', rule)[0].childNodes[0].nodeValue\n  return {\n    name: rule.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parseAbility = (ability) => {\n  const description = xpath(\".//roster:characteristic[@name='Description']\", ability)[0].childNodes[0].nodeValue\n  return {\n    name: ability.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parseWeapon = (weapon, userStrength) => {\n  let strength = weaponStat('S', weapon, false)\n  if (strength === 'User') {\n    strength = userStrength\n  }\n  let match = /x([0-9]+)/i.exec(strength)\n  if (match) {\n    strength = userStrength * parseInt(match[1])\n  }\n  match = /\\+([0-9]+)/i.exec(strength)\n  if (match) {\n    strength = userStrength + parseInt(match[1])\n  }\n  return {\n    name: weapon.getAttribute('name'),\n    range: weaponStat('Range', weapon, true),\n    type: weaponStat('Type', weapon, false),\n    strength,\n    armourPiercing: weaponStat('AP', weapon, true),\n    damage: weaponStat('D', weapon, false),\n    abilities: weaponStat('Abilities', weapon, false)\n  }\n}\n\nconst parseWargear = (wargear) => {\n  const description = xpath(\".//roster:characteristic[@name='Ability']\", wargear)[0].childNodes[0].nodeValue\n  return {\n    name: wargear.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parsePsychicPower = (power) => {\n  let description = xpath(\".//roster:characteristic[@name='Psychic Power']\", power)[0].childNodes[0].nodeValue\n  const warpChargeDescription = description.match(/warp charge value of ([0-9]+)\\.(.*)/)\n  let charge = null\n  if (warpChargeDescription.length > 2) {\n    charge = parseInt(warpChargeDescription[1])\n    description = warpChargeDescription[2]\n  }\n  return {\n    name: power.getAttribute('name'),\n    charge,\n    description\n  }\n}\n\nconst additionalAttacks = (weapons, abilities) => {\n  const descriptions = _.map(weapons, (w) => w.abilities).concat(_.map(abilities, (a) => a.description))\n  const attackRegexp = / ([0-9]|an) additional attack|Add ([0-9]{1}) to this model's Attacks characteristic/\n  const attacks = _.map(descriptions, (d) => {\n    const match = d.match(attackRegexp)\n    if (match) {\n      if (match[1] === 'an') return 1\n      return parseInt(match[1] || match[2])\n    }\n    return null\n  })\n  return _.sum(attacks)\n}\n\nconst invulnerableSave = (abilities) => {\n  const saveRegexp = /model has a ([0-9]{1})\\+ invulnerable save/\n  const saves = _.map(abilities, (a) => {\n    const match = a.description.match(saveRegexp)\n    if (match) {\n      return parseInt(match[1])\n    }\n    return null\n  })\n  return _.min(saves)\n}\n\nconst parseModel = (model) => {\n  const forceRules = xpath('//roster:force/roster:rules/roster:rule', model).map(parseForceRule)\n  const wargear = xpath(\".//roster:profile[@typeName='Wargear']\", model).map(parseWargear)\n  const specialismSelection = xpath('roster:selections/roster:selection[roster:selections/roster:selection/roster:profiles]', model)\n  const abilities = xpath(\".//roster:profile[@typeName='Ability']\", model).map(parseAbility).concat(forceRules).concat(wargear)\n  const stats = {\n    movement: stat('M', model),\n    weapon_skill: stat('WS', model),\n    ballistic_skill: stat('BS', model),\n    strength: stat('S', model),\n    toughness: stat('T', model),\n    wounds: stat('W', model),\n    attacks: stat('A', model),\n    leadership: stat('Ld', model),\n    save: stat('Sv', model),\n    invulnerable_save: invulnerableSave(abilities)\n  }\n  const closeCombatWeapon = {\n    name: 'Bare fists',\n    range: '-',\n    type: 'Melee',\n    strength: stats.strength,\n    armourPiercing: 0,\n    damage: 1,\n    abilities: 'Default close combat weapon available to all models'\n  }\n  const weapons = xpath(\".//roster:profile[@typeName='Weapon']\", model).map((x) => (parseWeapon(x, stats.strength))).concat([closeCombatWeapon])\n  stats.additional_attacks = additionalAttacks(weapons, abilities)\n  const psychicPowers = xpath(\"roster:selections/roster:selection/roster:profiles/roster:profile[@typeName='Psychic Power']\", model).map(parsePsychicPower)\n  const category = xpath(\"roster:categories/roster:category[@primary='true']\", model)[0].getAttribute('name')\n  const faction = xpath(\"roster:categories/roster:category[@primary='false' and starts-with(@name,'Faction: ')]\", model)\n  const keywords = xpath(\"roster:categories/roster:category[@primary='false' and not(starts-with(@name,'Faction: '))]\", model).map((x) => x.getAttribute('name'))\n  _.remove(keywords, (x) => (x === 'Model'))\n  const details = {\n    name: model.getAttribute('customName'),\n    type: model.getAttribute('name'),\n    category: category === 'Non-specialist' ? null : category,\n    stats,\n    abilities,\n    weapons,\n    psychicPowers,\n    specialism: specialismSelection.length > 0 ? specialismSelection[0].getAttribute('name') : null,\n    faction: faction.length > 0 ? faction[0].getAttribute('name').split(': ', 2)[1] : null,\n    keywords,\n    points: points(model)\n  }\n  return { ...details, hash: hash.hash(details) }\n}\n\nexport const parseBattlescribeXML = (xml) => {\n  var models = []\n  var doc = new DOMParser().parseFromString(xml)\n  const name = xpath('/roster:roster', doc)[0].getAttribute('name')\n  for (const category of xpath('//roster:force/roster:categories/roster:category', doc)) {\n    const categoryId = category.getAttribute('entryId')\n    for (const model of xpath(`//roster:selection[@type='model' and roster:categories/roster:category/@entryId='${categoryId}']`, doc)) {\n      models.push(parseModel(model))\n    }\n  }\n  const points = _.sumBy(models, (x) => (x.points))\n  const uniqueModels = _.groupBy(models, (m) => m.hash)\n  return {\n    name,\n    points,\n    models: _.map(uniqueModels, (m) => (\n      { ...m[0], count: m.length }\n    ))\n  }\n}\n","import { parseBattlescribeXML } from './BattlescribeParser'\n\nconst JSZip = require('jszip')\n\nconst unzip = (file) => {\n  if (file[0] !== 'P') { return Promise.resolve(file) } else {\n    const jszip = new JSZip()\n    return jszip.loadAsync(file)\n      .then((zip) => (\n        zip.file(/[^/]+\\.ros/)[0].async('string') // Get roster files that are in the root\n      ))\n  }\n}\n\nconst parseFile = (file) => (\n  unzip(file).then(parseBattlescribeXML)\n)\n\nexport const loadFile = async (file) => {\n  const reader = new FileReader()\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort()\n      reject(new DOMException('Problem parsing input file.'))\n    }\n    reader.onloadend = async () => {\n      resolve(parseFile(reader.result))\n    }\n    reader.readAsBinaryString(file)\n  })\n}\n\nexport const loadFiles = (files) => {\n  return loadFile(files[0])\n}\n","import React from 'react'\nimport Homepage from './components/Homepage'\nimport Roster from './components/Roster'\nimport { Container } from 'react-bootstrap'\nimport { loadFiles } from './FileLoader'\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n    const initialState = {\n      name: null,\n      points: 0,\n      models: []\n    };\n    this.state = initialState;\n\n    this.handleUpload = (acceptedFiles) => {\n      loadFiles(acceptedFiles).then((result) => {\n        this.setState(result)\n      })\n    }\n\n    this.onClose = () => {\n      this.setState(initialState)\n    }\n\n  }\n\n  render () {\n    return (\n      <Container fluid=\"lg\">\n        {this.state.models.length === 0\n          ? <Homepage onUpload={this.handleUpload} />\n          : <Roster points={this.state.points} name={this.state.name} models={this.state.models} onClose={this.onClose}/>}\n      </Container>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// Enable offline use with a service worker\n// See https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.register()\n"],"sourceRoot":""}