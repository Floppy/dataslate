{"version":3,"sources":["components/Intro.tsx","components/Homepage.tsx","components/Phase.tsx","components/StatsTable.tsx","components/AbilityList.tsx","components/SpecialistIcon.tsx","components/CategoryIcon.tsx","components/ModelTitle.tsx","components/NoPhaseDetails.tsx","components/StatBadge.tsx","components/MovementPhaseDetails.tsx","components/PsychicPowerList.tsx","components/PsychicPhaseDetails.tsx","components/WeaponList.tsx","components/ShootingPhaseDetails.tsx","components/FightPhaseDetails.tsx","components/MoralePhaseDetails.tsx","components/Roster.tsx","BattlescribeParser.js","FileLoader.js","App.jsx","serviceWorker.js","index.tsx"],"names":["Intro","className","Alert","variant","href","Homepage","props","onDrop","onUpload","accept","getRootProps","getInputProps","style","textAlign","Phase","background","color","padding","width","textTransform","name","children","StatsTable","Table","striped","bordered","size","movement","weapon_skill","isNaN","ballistic_skill","strength","toughness","wounds","attacks","additional_attacks","leadership","save","invulnerable_save","_","require","AbilityList","abilities","phase","filter","x","phases","indexOf","length","sortBy","map","description","SpecialistIcon","marginRight","specialism","toLowerCase","CategoryIcon","category","ModelTitle","titleComponents","without","model","type","display","justifyContent","Col","join","slice","showPoints","flexGrow","points","NoPhaseDetails","Row","stats","sm","Badge","pill","faction","keywords","keyword","StatBadge","paddingTop","border","height","flexDirection","borderRadius","fontSize","lineHeight","fontWeight","value","secondaryValue","MovementPhaseDetails","PsychicPowerList","powers","charge","PsychicPhaseDetails","psychicPowers","hasPsychicPhase","WeaponList","weapons","range","armourPiercing","damage","ShootingPhaseDetails","userStrength","FightPhaseDetails","MoralePhaseDetails","Roster","sortedModels","models","some","hasShootingPhase","DOMParser","xpath","useNamespaces","roster","hash","stat","nodes","parseInt","childNodes","nodeValue","weaponStat","weapon","numeric","costNode","sumBy","getAttribute","calculatePhases","test","push","uniq","sort","parseForceRule","rule","parseAbility","ability","parseWargear","wargear","parsePsychicPower","power","warpChargeDescription","match","invulnerableSave","saveRegexp","saves","a","min","parseModel","forceRules","specialismSelection","concat","closeCombatWeapon","exec","parseWeapon","descriptions","w","attackRegexp","d","sum","additionalAttacks","remove","details","split","parseBattlescribeXML","xml","doc","parseFromString","categoryId","uniqBy","m","JSZip","parseFile","file","Promise","resolve","loadAsync","then","zip","async","unzip","loadFile","reader","FileReader","reject","onerror","abort","DOMException","onloadend","result","readAsBinaryString","App","state","handleUpload","acceptedFiles","files","setState","Container","this","React","Component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f11abc26.chunk.js","sourcesContent":["import React from 'react';\nimport { Alert } from 'react-bootstrap'\n\nfunction Intro() {\n  return <>\n    <h1>\n      Scriptorum\n    </h1>\n    <p className='lead'>\n      Readable datasheets for Warhammer 40k Kill Team\n    </p>\n    <ul>\n      <li>Organises abilities and weapons by phase</li>\n      <li>Merges identical models</li>\n      <li>Prints out as one datasheet per page</li>\n      <li>Clear, readable layout</li>\n    </ul>\n    <Alert variant='danger'>\n      Scriptorum is a work in progress, but it should work,\n      so try it out! If you spot any problems, please create an\n      issue <a href='https://github.com/Floppy/scriptorum/issues'>on GitHub</a> and\n      include your roster file if possible.\n    </Alert>\n  </>\n}\n\nexport default Intro;\n","import React from 'react';\nimport Dropzone from 'react-dropzone'\nimport Intro from './Intro'\nimport { Alert } from 'react-bootstrap'\n\ntype Props = {\n  onUpload: any,\n}\n\nfunction Homepage(props: Props) {\n  return <>\n    <Intro />\n    <Dropzone onDrop={props.onUpload} accept='.ros,.rosz'>\n      {({ getRootProps, getInputProps }) => (\n        <Alert variant='info' {...getRootProps()} style={{ textAlign: 'center' }}>\n          <input {...getInputProps()} />\n          <p>Drop a Battlescribe roster file here, or click to select one.</p>\n          <p><em>(*.rosz and *.ros accepted)</em></p>\n        </Alert>\n      )}\n    </Dropzone>\n    <footer>\n      Built with React and Bootstrap. Released as Open Source, code <a href='https://github.com/floppy/scriptorum'>on GitHub</a>.\n    </footer>\n  </>\n}\n\nexport default Homepage;\n","import React from 'react';\n\ntype Props = {\n  name: string,\n  children: React.ReactNode,\n};\n\nfunction Phase(props: Props) {\n  return <>\n    <h1 style={{\n      background: 'black',\n      color: 'white',\n      padding: '10px',\n      width: '100%',\n      textTransform: 'capitalize',\n    }}>\n      {props.name}\n    </h1>\n    {props.children}\n  </>\n}\n\nexport default Phase;\n","import React from 'react'\nimport { Table } from 'react-bootstrap'\n\ntype Props = {\n  movement: number,\n  weapon_skill: number,\n  ballistic_skill: number,\n  strength: number,\n  toughness: number,\n  wounds: number,\n  attacks: number,\n  additional_attacks: number,\n  leadership: number,\n  save: number,\n  invulnerable_save: number,\n}\n\nfunction StatsTable (props: Props) {\n  return (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>M</th>\n          <th>WS</th>\n          <th>BS</th>\n          <th>S</th>\n          <th>T</th>\n          <th>W</th>\n          <th>A</th>\n          <th>Ld</th>\n          <th>Sv</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{props.movement}&quot;</td>\n          <td>{props.weapon_skill}+</td>\n          <td>{isNaN(props.ballistic_skill) ? '-' : props.ballistic_skill+\"+\"}</td>\n          <td>{props.strength}</td>\n          <td>{props.toughness}</td>\n          <td>{props.wounds}</td>\n          <td>{props.attacks}\n          { props.additional_attacks ? <strong>{' +'}{props.additional_attacks}</strong> : null}\n          </td>\n          <td>{props.leadership}</td>\n          <td>{props.save}+\n          { props.invulnerable_save ? <>{' / '}<strong>{props.invulnerable_save}++</strong></> : null}</td>\n        </tr>\n      </tbody>\n    </Table>\n  )\n}\n\nexport default StatsTable\n","import React from 'react';\nimport { Ability } from '../types';\nimport { Table } from 'react-bootstrap';\n\nconst _ = require('lodash')\n\ntype Props = {\n  abilities: Ability[],\n  phase: string,\n};\n\nfunction AbilityList(props: Props) {\n  const abilities = props.phase ?\n    props.abilities.filter((x) => (x.phases.indexOf(props.phase) >= 0)) :\n    props.abilities.filter((x) => (x.phases.length === 0))\n\n  return abilities.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Ability</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(abilities, ['name']).map((x: Ability) => (\n          <tr>\n            <td>{x.name}</td>\n            <td>{x.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default AbilityList;\n","import React from 'react';\n\ntype Props = {\n  specialism: string;\n};\n\nexport function SpecialistIcon(props: Props) {\n  const icons: {\n    [index: string]: string;\n  } = {\n    'combat': '🤜',\n    'comms': '📻',\n    'demolitions': '💣',\n    'ferocity': '🦖',\n    'fortitude': '🛡️',\n    'heavy': '💥',\n    'leadership': '💀',\n    'logistics': '🚚',\n    'medic': '⚕️',\n    'melee': '🤜',\n    'psyker': '🧠',\n    'scout': '🔦',\n    'shooting': '🔫',\n    'stealth': '👻',\n    'strategist': '🗺️',\n    'strength': '💪',\n    'sniper': '🎯',\n    'veteran': '⭐',\n    'zealot': '😤',\n    '': ''\n  };\n  return (<span className='specialism' style={{marginRight: '10px'}}>\n    {props.specialism ? icons[props.specialism.toLowerCase()] : ''}\n  </span>);\n}\n","import React from 'react';\n\ntype Props = {\n  category: string;\n};\n\nexport function CategoryIcon(props: Props) {\n  const icons: {\n    [index: string]: string;\n  } = {\n    'commander': '👑',\n    'leader': '💀',\n    'specialist': '',\n  };\n  return (<span className='category' style={{marginRight: '10px'}}>\n    {props.category ? icons[props.category.toLowerCase()] : ''}\n  </span>);\n}\n","import React from 'react';\nimport { SpecialistIcon } from './SpecialistIcon';\nimport { CategoryIcon } from './CategoryIcon';\nimport { Col } from 'react-bootstrap'\n\nimport { Model } from '../types';\n\nconst _ = require('lodash')\n\ntype Props = {\n  showPoints?: boolean,\n  model: Model\n};\n\nexport function ModelTitle(props: Props) {\n  const headingStyle = {\n    background: 'lightgrey',\n    color: 'black',\n    padding: '5px',\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-between',\n  }\n  const titleComponents = _.without([\n    props.model.name,\n    props.model.type,\n    (props.model.category === \"Specialist\"\n      ? props.model.specialism\n      : props.model.category)\n  ],null, \"\");\n  return (\n    <h2 style={headingStyle}>\n      <Col>\n        {props.model.category === \"Specialist\" && <SpecialistIcon specialism={props.model.specialism} />}\n        {props.model.category && <CategoryIcon category={props.model.category} />}\n        <strong>{titleComponents[0]} </strong>\n        <small>{_.join(_.slice(titleComponents,1), \", \")}</small>\n      </Col>\n      {props.showPoints && (\n        <Col style={{flexGrow: 0, textAlign: 'right'}}>\n          <small>{props.model.points}pts</small>\n        </Col>\n      )}\n    </h2>\n  );\n}\n","import React from 'react';\nimport StatsTable from './StatsTable';\nimport AbilityList from './AbilityList';\nimport { Badge } from 'react-bootstrap'\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function NoPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model} showPoints={true}/>\n        {props.model.category === \"Commander\" && <div>Commander specialism: <strong>{props.model.specialism}</strong></div>}\n        <StatsTable {...props.model.stats}/>\n        <AbilityList abilities={props.model.abilities} phase=''/>\n      </Col>\n      <Col sm='auto'>\n        <div>\n          <Badge pill variant=\"danger\" className=\"mb-2\" style={{\n            textTransform: \"uppercase\",\n            marginRight: \"10px\",\n            display: \"block\",\n          }}>\n            {props.model.faction}\n          </Badge>\n          {props.model.keywords.map((keyword: string) => (\n            <Badge pill variant=\"primary\" className=\"mb-2\" style={{\n              textTransform: \"uppercase\",\n              marginRight: \"10px\",\n              display: \"block\",\n            }}>\n              {keyword}\n            </Badge>\n          ))}\n        </div>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react'\nimport CSS from 'csstype'\n\ntype Props = {\n  name: string,\n  value: string,\n  secondaryValue?: string | null,\n}\n\nfunction StatBadge (props: Props) {\n  const badgeStyle: CSS.Properties = {\n    paddingTop: '.2vw',\n    border: '1px solid black',\n    width: '5vw',\n    height: '5vw',\n    background: 'black',\n    color: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    borderRadius: '50%',\n  };\n  const nameStyle: CSS.Properties = {\n    fontSize: '1vw',\n    lineHeight: '1vw',\n  };\n  const valueStyle: CSS.Properties = {\n    fontSize: '3vw',\n    lineHeight: '3vw',\n    fontWeight: 'bold'\n  }\n  return (\n    <div className='statbadge mb-4' style={badgeStyle}>\n      <div className='name' style={nameStyle}>{props.name}</div>\n      <div className='value' style={valueStyle}>\n        { props.value }\n        { props.secondaryValue\n          ? <small>{props.secondaryValue}</small>\n          : <></>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default StatBadge\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport StatBadge from './StatBadge';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function MovementPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='movement'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"M\" value={`${props.model.stats.movement}`}/>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { PsychicPower } from '../types';\nimport { Table } from 'react-bootstrap';\n\nconst _ = require('lodash')\n\ntype Props = {\n  powers: PsychicPower[],\n};\n\nfunction PsychicPowerList(props: Props) {\n  return props.powers.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Power</th>\n          <th>Warp Charge</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(props.powers, ['name']).map((x: PsychicPower) => (\n          <tr>\n            <td>{x.name}</td>\n            <td>{x.charge}</td>\n            <td>{x.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default PsychicPowerList;\n","import React from 'react';\nimport AbilityList from './AbilityList';\nimport PsychicPowerList from './PsychicPowerList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function PsychicPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <PsychicPowerList powers={props.model.psychicPowers}/>\n        <AbilityList abilities={props.model.abilities} phase='psychic'/>\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasPsychicPhase(model: Model) {\n  return (model.psychicPowers.length > 0 || (model.abilities.filter((x) => (x.phases.indexOf(\"psychic\") >= 0))).length > 0)\n}\n","import React from 'react';\nimport { Weapon } from '../types';\nimport { Table } from 'react-bootstrap';\n\nconst _ = require('lodash')\n\ntype Props = {\n  weapons: Weapon[],\n  phase: string,\n  userStrength: number,\n};\n\nfunction WeaponList(props: Props) {\n  const weapons = props.phase === 'shooting'\n    ? props.weapons.filter((x) => (x.type !== \"Melee\"))\n    : props.weapons.filter((x) => (x.type === \"Melee\"))\n\n  return weapons.length === 0 ? <></> : (\n    <Table striped bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Weapon</th>\n          {props.phase === \"shooting\" && <th>Range</th>}\n          {props.phase === \"shooting\" && <th>Type</th>}\n          <th>S</th>\n          <th>AP</th>\n          <th>D</th>\n          <th>Abilities</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_.sortBy(weapons, ['name']).map((x: Weapon) => (\n          <tr>\n            <td style={{\"whiteSpace\": \"nowrap\"}}>{x.name}</td>\n            {props.phase === \"shooting\" && <td>{x.range}&quot;</td>}\n            {props.phase === \"shooting\" && <td style={{\"whiteSpace\": \"nowrap\"}}>{x.type}</td>}\n            <td>{x.strength}</td>\n            <td>{x.armourPiercing}</td>\n            <td>{x.damage}</td>\n            <td>{x.abilities}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default WeaponList;\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from './AbilityList';\nimport WeaponList from './WeaponList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function ShootingPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <WeaponList weapons={props.model.weapons} phase='shooting' userStrength={props.model.stats.strength}/>\n        <AbilityList abilities={props.model.abilities} phase='shooting'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"BS\" value={`${props.model.stats.ballistic_skill}`} secondaryValue=\"+\"/>\n        <StatBadge name=\"T\" value={`${props.model.stats.toughness}`}/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"Sv\" value={`${props.model.stats.save}`} secondaryValue=\"+\"/>\n        { props.model.stats.invulnerable_save\n          ? <StatBadge name=\"Inv\" value={`${props.model.stats.invulnerable_save}`} secondaryValue=\"+\"/>\n          : <></>\n        }\n      </Col>\n    </Row>\n  );\n}\n\nexport function hasShootingPhase(model: Model) {\n  return !isNaN(model.stats.ballistic_skill) && (model.weapons.filter((x) => (x.type !== \"Melee\")).length > 0)\n}\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from './AbilityList';\nimport WeaponList from './WeaponList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function FightPhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <WeaponList weapons={props.model.weapons} phase='fight' userStrength={props.model.stats.strength}/>\n        <AbilityList abilities={props.model.abilities} phase='fight'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"A\" value={`${props.model.stats.attacks}`} secondaryValue={ props.model.stats.additional_attacks ? `+${props.model.stats.additional_attacks}` : null}/>\n        <StatBadge name=\"T\" value={`${props.model.stats.toughness}`}/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"WS\" value={`${props.model.stats.weapon_skill}`} secondaryValue=\"+\"/>\n        <StatBadge name=\"Sv\" value={`${props.model.stats.save}`} secondaryValue=\"+\"/>\n        { props.model.stats.invulnerable_save\n          ? <StatBadge name=\"Inv\" value={`${props.model.stats.invulnerable_save}`} secondaryValue=\"+\"/>\n          : <></>\n        }\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport StatBadge from './StatBadge';\nimport AbilityList from './AbilityList';\nimport { Row, Col } from 'react-bootstrap'\nimport { ModelTitle } from './ModelTitle';\n\nimport { Model } from '../types';\n\ntype Props = {\n  model: Model\n};\n\nexport function MoralePhaseDetails(props: Props) {\n  return (\n    <Row>\n      <Col>\n        <ModelTitle model={props.model}/>\n        <AbilityList abilities={props.model.abilities} phase='morale'/>\n      </Col>\n      <Col sm='auto'>\n        <StatBadge name=\"Ld\" value={`${props.model.stats.leadership}`}/>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Model } from '../types';\nimport Phase from './Phase';\nimport { NoPhaseDetails } from './NoPhaseDetails';\nimport { MovementPhaseDetails } from './MovementPhaseDetails';\nimport { PsychicPhaseDetails, hasPsychicPhase } from './PsychicPhaseDetails';\nimport { ShootingPhaseDetails, hasShootingPhase } from './ShootingPhaseDetails';\nimport { FightPhaseDetails } from './FightPhaseDetails';\nimport { MoralePhaseDetails } from './MoralePhaseDetails';\n\nconst _ = require('lodash')\n\ntype Props = {\n  name: string,\n  points: number,\n  models: Model[],\n};\n\nfunction Roster(props: Props) {\n  // Display models sorted by category and type\n  const sortedModels = _.sortBy(props.models, (x: Model) => ([x.category == null, x.category, x.type]))\n  return <>\n    <Phase name={props.name}>\n      <>\n        <span>{`${props.points}pts`}</span>\n        {sortedModels.map((model: Model) => (\n          <NoPhaseDetails model={model}/>\n        ))}\n      </>\n    </Phase>\n    <Phase name=\"movement\">\n      {sortedModels.map((model: Model) => (\n        <MovementPhaseDetails model={model}/>\n      ))}\n    </Phase>\n    {_.some(sortedModels, hasPsychicPhase) &&\n      <Phase name=\"psychic\">\n        {sortedModels.map((model: Model) => (\n          hasPsychicPhase(model) &&\n          <PsychicPhaseDetails model={model}/>\n        ))}\n      </Phase>\n    }\n    <Phase name=\"shooting\">\n      {sortedModels.map((model: Model) => (\n        hasShootingPhase(model) &&\n          <ShootingPhaseDetails model={model}/>\n      ))}\n    </Phase>\n    <Phase name=\"fight\">\n      {sortedModels.map((model: Model) => (\n        <FightPhaseDetails model={model}/>\n      ))}\n    </Phase>\n    <Phase name=\"morale\">\n      {sortedModels.map((model: Model) => (\n        <MoralePhaseDetails model={model}/>\n      ))}\n    </Phase>\n  </>\n}\n\nexport default Roster;\n","const DOMParser = require('xmldom').DOMParser\nconst xpath = require('xpath-ts').useNamespaces({ roster: 'http://www.battlescribe.net/schema/rosterSchema' })\n\nconst _ = require('lodash')\nconst hash = require('node-object-hash')([])\n\nconst stat = (name, model) => {\n  const nodes = xpath(`roster:profiles/roster:profile[@typeName='Model']//roster:characteristic[@name='${name}']`, model)\n  if (nodes.length > 0) {\n    return parseInt(nodes[0].childNodes[0].nodeValue)\n  } else { return '' }\n}\n\nconst weaponStat = (name, weapon, numeric) => {\n  const nodes = xpath(`roster:characteristics/roster:characteristic[@name='${name}']`, weapon)\n  if (nodes.length > 0) {\n    return numeric ? parseInt(nodes[0].childNodes[0].nodeValue) : nodes[0].childNodes[0].nodeValue\n  } else { return '' }\n}\n\nconst points = (model) => {\n  const costNode = xpath('.//roster:costs/roster:cost[@name=\\'pts\\']', model)\n  return _.sumBy(costNode, (x) => parseInt(x.getAttribute('value')))\n}\n\nexport const calculatePhases = (description) => {\n  const phases = []\n  if (/attacks characteristic/i.test(description)) { phases.push('fight') }\n  if (/strength characteristic/i.test(description)) { phases.push('fight') }\n  if (/ ranged /i.test(description)) { phases.push('shooting') }\n  if (/fight phase/i.test(description)) { phases.push('fight') }\n  if (/ charge/i.test(description)) { phases.push('movement') }\n  if (/ advance /i.test(description)) { phases.push('movement') }\n  if (/ move /i.test(description)) { phases.push('movement') }\n  if (/psychic/i.test(description)) { phases.push('psychic') }\n  if (/ shoot/i.test(description)) { phases.push('shooting') }\n  if (/obscured/i.test(description)) { phases.push('shooting') }\n  if (/nerve/i.test(description)) { phases.push('morale') }\n  if (/leadership/i.test(description)) { phases.push('morale') }\n  if (/ hit roll/i.test(description)) { phases.push('fight') && phases.push('shooting') }\n  if (/ reserve/i.test(description)) { phases.push('movement') }\n  return _.uniq(phases).sort()\n}\n\nconst parseForceRule = (rule) => {\n  const description = xpath('roster:description', rule)[0].childNodes[0].nodeValue\n  return {\n    name: rule.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parseAbility = (ability) => {\n  const description = xpath(\".//roster:characteristic[@name='Description']\", ability)[0].childNodes[0].nodeValue\n  return {\n    name: ability.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parseWeapon = (weapon, userStrength) => {\n  let strength = weaponStat('S', weapon, false)\n  if (strength === 'User') {\n    strength = userStrength\n  }\n  let match = /x([0-9]+)/i.exec(strength)\n  if (match) {\n    strength = userStrength * parseInt(match[1])\n  }\n  match = /\\+([0-9]+)/i.exec(strength)\n  if (match) {\n    strength = userStrength + parseInt(match[1])\n  }\n  return {\n    name: weapon.getAttribute('name'),\n    range: weaponStat('Range', weapon, true),\n    type: weaponStat('Type', weapon, false),\n    strength,\n    armourPiercing: weaponStat('AP', weapon, true),\n    damage: weaponStat('D', weapon, false),\n    abilities: weaponStat('Abilities', weapon, false)\n  }\n}\n\nconst parseWargear = (wargear) => {\n  const description = xpath(\".//roster:characteristic[@name='Ability']\", wargear)[0].childNodes[0].nodeValue\n  return {\n    name: wargear.getAttribute('name'),\n    description,\n    phases: calculatePhases(description)\n  }\n}\n\nconst parsePsychicPower = (power) => {\n  let description = xpath(\".//roster:characteristic[@name='Psychic Power']\", power)[0].childNodes[0].nodeValue\n  const warpChargeDescription = description.match(/warp charge value of ([0-9]+)\\.(.*)/)\n  let charge = null\n  if (warpChargeDescription.length > 2) {\n    charge = parseInt(warpChargeDescription[1])\n    description = warpChargeDescription[2]\n  }\n  return {\n    name: power.getAttribute('name'),\n    charge,\n    description\n  }\n}\n\nconst additionalAttacks = (weapons, abilities) => {\n  const descriptions = _.map(weapons, (w) => w.abilities).concat(_.map(abilities, (a) => a.description))\n  const attackRegexp = / ([0-9]|an) additional attack|Add ([0-9]{1}) to this model's Attacks characteristic/\n  const attacks = _.map(descriptions, (d) => {\n    const match = d.match(attackRegexp)\n    if (match) {\n      if (match[1] === 'an') return 1\n      return parseInt(match[1] || match[2])\n    }\n    return null\n  })\n  return _.sum(attacks)\n}\n\nconst invulnerableSave = (abilities) => {\n  const saveRegexp = /model has a ([0-9]{1})\\+ invulnerable save/\n  const saves = _.map(abilities, (a) => {\n    const match = a.description.match(saveRegexp)\n    if (match) {\n      return parseInt(match[1])\n    }\n    return null\n  })\n  return _.min(saves)\n}\n\nconst parseModel = (model) => {\n  const forceRules = xpath('//roster:force/roster:rules/roster:rule', model).map(parseForceRule)\n  const wargear = xpath(\".//roster:profile[@typeName='Wargear']\", model).map(parseWargear)\n  const specialismSelection = xpath('roster:selections/roster:selection[roster:selections/roster:selection/roster:profiles]', model)\n  const abilities = xpath(\".//roster:profile[@typeName='Ability']\", model).map(parseAbility).concat(forceRules).concat(wargear)\n  const stats = {\n    movement: stat('M', model),\n    weapon_skill: stat('WS', model),\n    ballistic_skill: stat('BS', model),\n    strength: stat('S', model),\n    toughness: stat('T', model),\n    wounds: stat('W', model),\n    attacks: stat('A', model),\n    leadership: stat('Ld', model),\n    save: stat('Sv', model),\n    invulnerable_save: invulnerableSave(abilities)\n  }\n  const closeCombatWeapon = {\n    name: 'Bare fists',\n    range: '-',\n    type: 'Melee',\n    strength: stats.strength,\n    armourPiercing: 0,\n    damage: 1,\n    abilities: 'Default close combat weapon available to all models'\n  }\n  const weapons = xpath(\".//roster:profile[@typeName='Weapon']\", model).map((x) => (parseWeapon(x, stats.strength))).concat([closeCombatWeapon])\n  stats.additional_attacks = additionalAttacks(weapons, abilities)\n  const psychicPowers = xpath(\"roster:selections/roster:selection/roster:profiles/roster:profile[@typeName='Psychic Power']\", model).map(parsePsychicPower)\n  const category = xpath(\"roster:categories/roster:category[@primary='true']\", model)[0].getAttribute('name')\n  const faction = xpath(\"roster:categories/roster:category[@primary='false' and starts-with(@name,'Faction: ')]\", model)\n  const keywords = xpath(\"roster:categories/roster:category[@primary='false' and not(starts-with(@name,'Faction: '))]\", model).map((x) => x.getAttribute('name'))\n  _.remove(keywords, (x) => (x === 'Model'))\n  const details = {\n    name: model.getAttribute('customName'),\n    type: model.getAttribute('name'),\n    category: category === 'Non-specialist' ? null : category,\n    stats,\n    abilities,\n    weapons,\n    psychicPowers,\n    specialism: specialismSelection.length > 0 ? specialismSelection[0].getAttribute('name') : null,\n    faction: faction.length > 0 ? faction[0].getAttribute('name').split(': ', 2)[1] : null,\n    keywords,\n    points: points(model)\n  }\n  return { ...details, hash: hash.hash(details) }\n}\n\nexport const parseBattlescribeXML = (xml) => {\n  var models = []\n  var doc = new DOMParser().parseFromString(xml)\n  const name = xpath('/roster:roster', doc)[0].getAttribute('name')\n  for (const category of xpath('//roster:force/roster:categories/roster:category', doc)) {\n    const categoryId = category.getAttribute('entryId')\n    for (const model of xpath(`//roster:selection[@type='model' and roster:categories/roster:category/@entryId='${categoryId}']`, doc)) {\n      models.push(parseModel(model))\n    }\n  }\n  const points = _.sumBy(models, (x) => (x.points))\n  return {\n    name,\n    points,\n    models: _.uniqBy(models, (m) => m.hash)\n  }\n}\n","import { parseBattlescribeXML } from './BattlescribeParser'\n\nconst JSZip = require('jszip')\n\nconst unzip = (file) => {\n  if (file[0] !== 'P') { return Promise.resolve(file) } else {\n    const jszip = new JSZip()\n    return jszip.loadAsync(file)\n      .then((zip) => (\n        zip.file(/[^/]+\\.ros/)[0].async('string') // Get roster files that are in the root\n      ))\n  }\n}\n\nconst parseFile = (file) => (\n  unzip(file).then(parseBattlescribeXML)\n)\n\nexport const loadFile = async (file) => {\n  const reader = new FileReader()\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort()\n      reject(new DOMException('Problem parsing input file.'))\n    }\n    reader.onloadend = async () => {\n      resolve(parseFile(reader.result))\n    }\n    reader.readAsBinaryString(file)\n  })\n}\n\nexport const loadFiles = (files) => {\n  return loadFile(files[0])\n}\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport React from 'react'\nimport Homepage from './components/Homepage'\nimport Roster from './components/Roster'\nimport { Container } from 'react-bootstrap'\nimport { loadFiles } from './FileLoader'\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      name: null,\n      points: 0,\n      models: []\n    }\n\n    this.handleUpload = (acceptedFiles) => {\n      loadFiles(acceptedFiles).then((result) => {\n        this.setState(result)\n      })\n    }\n  }\n\n  render () {\n    return (\n      <Container>\n        {this.state.models.length === 0\n          ? <Homepage onUpload={this.handleUpload} />\n          : <Roster points={this.state.points} name={this.state.name} models={this.state.models} />}\n      </Container>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// Enable offline use with a service worker\n// See https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.register()\n"],"sourceRoot":""}